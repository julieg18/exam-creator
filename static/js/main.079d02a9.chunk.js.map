{"version":3,"sources":["store/actions/authActionTypes.js","store/reducers/auth.js","store/actions/examActionTypes.js","store/reducers/exam.js","store/actions/auth.js","store/actions/exam.js","store/sagas/auth.js","store/sagas/helper.js","store/sagas/exam.js","store/sagas/index.js","components/common/LoadingButton/LoadingButton.js","components/NavigationBar/NavigationBar.js","components/auth/Signup/Signup.js","components/auth/Login/Login.js","components/CreateAExam/CreateAExamStart/CreateAExamStart.js","components/WorkOnExam/WorkOnExamTitle/WorkOnExamTitle.js","components/WorkOnExam/WorkOnExamStudents/CreateStudent/CreateStudent.js","components/WorkOnExam/WorkOnExamStudents/EditStudent/EditStudent.js","components/WorkOnExam/WorkOnExamStudents/StudentsSoFar/StudentsSoFar.js","components/WorkOnExam/WorkOnExamStudents/WorkOnExamStudents.js","components/WorkOnExam/WorkOnExamQuestions/MultipleQuestionOptionsForm/MultipleQuestionOptionsForm.js","components/WorkOnExam/WorkOnExamQuestions/TrueOrFalseQuestionForm/TrueOrFalseQuestionForm.js","components/WorkOnExam/WorkOnExamQuestions/CreateQuestion/CreateQuestion.js","components/WorkOnExam/WorkOnExamQuestions/EditQuestion/EditQuestion.js","components/WorkOnExam/WorkOnExamQuestions/ReadOnlyQuestion/ReadOnlyQuestion.js","components/WorkOnExam/WorkOnExamQuestions/QuestionCard/QuestionCard.js","components/WorkOnExam/WorkOnExamQuestions/QuestionsSoFar/QuestionsSoFar.js","components/WorkOnExam/WorkOnExamQuestions/WorkOnExamQuestions.js","components/CreateAExam/CreateAExamControls/CreateAExamControls.js","components/WorkOnExam/WorkOnExamFinish/WorkOnExamFinish.js","components/CreateAExam/CreateAExam.js","components/EditAExam/EditAExamStart/EditAExamStart.js","components/EditAExam/EditAExamControls/EditAExamControls.js","components/EditAExam/EditAExam.js","components/Exams/ExamsStudents/ExamsStudents.js","components/Exams/ExamExample/ExamExample.js","components/Exams/Exams.js","components/TakeExam/Question/Question.js","components/TakeExam/ExamForm/ExamForm.js","components/TakeExam/TakeExam.js","App.js","index.js"],"names":["AUTH_LOGIN_EXISTING_USER","AUTH_LOGIN_EXISTING_USER_SUCCESS","AUTH_LOGIN_EXISTING_USER_FAIL","AUTH_SIGNUP","AUTH_SIGNUP_START","AUTH_SIGNUP_SUCCESS","AUTH_SIGNUP_FAIL","AUTH_LOGIN","AUTH_LOGIN_START","AUTH_LOGIN_SUCCESS","AUTH_LOGIN_FAIL","AUTH_LOGOUT","AUTH_LOGOUT_START","AUTH_LOGOUT_SUCCESS","AUTH_LOGOUT_FAIL","AUTH_CLEAR_ERROR","initialState","isUserLoggedIn","userId","loading","error","user","authReducer","state","action","type","authLoginExistingUserSuccess","authLoginExistingUserFail","authSignupStart","authSignupSuccess","authSignupFail","authLoginStart","authLoginSuccess","authLoginFail","authLogoutStart","authLogoutSuccess","authLogoutFail","authClearError","CREATE_EXAM_CHANGE_PART","CREATE_EXAM_RESET","CREATE_EXAM_TITLE","CREATE_EXAM_QUESTIONS","CREATE_EXAM_STUDENTS","CREATE_EXAM","CREATE_EXAM_START","CREATE_EXAM_FAIL","CREATE_EXAM_SUCCESS","GET_EXAM","GET_EXAM_START","GET_EXAM_SUCCESS","GET_EXAM_FAIL","GET_USER_EXAMS","GET_USER_EXAMS_START","GET_USER_EXAMS_SUCCESS","GET_USER_EXAMS_FAIL","DELETE_EXAM","DELETE_EXAM_START","DELETE_EXAM_SUCCESS","DELETE_EXAM_FAIL","EDIT_EXAM_SELECT_EXAM","EDIT_EXAM_RESET","EDIT_EXAM_CHANGE_PART","EDIT_EXAM_TITLE","EDIT_EXAM_QUESTIONS","EDIT_EXAM_STUDENTS","EDIT_EXAM","EDIT_EXAM_START","EDIT_EXAM_FAIL","EDIT_EXAM_SUCCESS","examBeingCreated","title","questions","students","examToBeEdited","examPartsBeingEdited","currentExamBeingCreatedPart","currentExamBeingEditedPart","createExamLoading","getExamLoading","getUserExamsLoading","editExamLoading","retrievedExam","userExams","createExamReducer","newState","clonedeep","examPart","createExamChangePart","createExamReset","createExamTitle","createExamQuestions","createExamStudents","createExamStart","createExamSuccess","createExamFail","getExamStart","getExamFail","exam","getExamSuccess","getUserExamsStart","getUserExamsFail","exams","getUserExamsSuccess","deleteExamLoading","deleteExamStart","deleteExamFail","filter","_id","deletedExamId","deleteExamSuccess","selectedExam","editExamSelectExam","editExamReset","editExamChangePart","editExamTitle","editExamQuestions","editExamStudents","editExamStart","editExamSuccess","editExamFail","getUserExams","authLoginExistingUserSaga","authSignupSaga","authLoginSaga","authLogoutSaga","REACT_APP_API","process","fetch","res","json","parsedRes","ok","Error","put","username","email","password","method","body","JSON","stringify","headers","newUser","message","howHaveQuestionsBeenEdited","originalQuestions","newQuestions","originalQuestionIds","map","question","id","newQuestionIds","deletedQuestions","questionId","includes","addedQuestions","editedQuestions","newQuestion","find","originalQuestion","name","answer","some","i","options","opt","optionId","isQuestionPartEdited","isQuestionEdited","howHaveStudentsBeenEdited","originalStudents","newStudents","originalStudentIds","student","newStudentIds","deletedStudents","studentId","addedStudents","editedStudents","newStudent","createExamSaga","getExamSaga","getUserExamsSaga","deleteExamSaga","editExamSaga","createdExam","userRes","parsedUserRes","creator","examId","length","editedStudent","watchAuth","watchExam","takeEvery","LoadingButton","props","Button","onClick","onClickFunc","className","variant","size","Spinner","as","animation","children","NavigationBar","isWindowMobileSize","updateIsWindowMobileSize","window","innerWidth","setState","addEventListener","this","bind","removeEventListener","pathname","location","authenticatedNavItems","Nav","Link","to","active","onLogout","classes","unauthenticatedNavItems","DropdownButton","alignRight","Dropdown","Item","Divider","Navbar","Brand","React","Component","connect","auth","dispatch","withRouter","Signup","handleSubmit","e","preventDefault","target","value","onSignup","onClearError","Alert","Form","onSubmit","Group","controlId","Label","Control","placeholder","authSignup","Login","onLogin","authLogin","CreateAExamStart","nextExamPart","WorkOnExamTitle","examTitle","hasTitleChanged","handleTitleChange","changeNextBtn","test","completeExamTitle","heading","onChange","CreateStudent","studentName","handleStudentNameChange","handleCreatingStudent","shortid","generate","onCreateStudent","EditStudent","handleEditingStudent","editStudent","StudentsSoFar","Accordion","index","Card","key","Toggle","Header","eventKey","Collapse","Body","changeTab","editStudentStart","block","deleteStudent","WorkOnExamStudents","examStudents","studentToBeEdited","currentActiveTab","hasStudentsChanged","tab","addStudent","push","startEditingStudent","completeExamStudents","workOnExamStudentsMain","Tabs","activeKey","onSelect","Tab","MultipleQuestionOptionsForm","handleOptionAnswerChange","inputId","getAttribute","childInput","querySelector","onChangeOptionAnswer","handleOptionNameChange","onChangeOptionName","handleOptionDelete","onDeleteOption","handleOptionAdd","onAddOption","areOptionsBeingEdited","questionOptions","InputGroup","Prepend","questionType","Checkbox","checked","data-id","Radio","FormControl","Append","TrueOrFalseQuestionForm","handleAnswerChange","onChangeAnswer","Check","inline","label","questionAnswer","CreateQuestion","questionName","handleQuestionTypeChange","handleQuestionNameChange","handleQuestionOptionNameChange","newName","editedOptions","editedAnswer","handleTrueOrFalseAnswerChange","handleCheckboxAnswerChange","handleRadioAnswerChange","handleQuestionOptionAdd","newQuestionOptions","newQuestionOption","optionIndex","findIndex","option","splice","handleQuestionOptionDelete","handleCreatingMultiOptionQuestion","isNameEmpty","isAOptionEmpty","doesQuestionHaveAnswer","onCreateQuestion","handleCreatingTrueOrFalseQuestion","toString","isAnswerBoolean","renderFormType","radioForm","checkboxForm","trueOrFalseForm","EditQuestion","handleCompletingMultiOptionQuestion","editQuestion","handleCompletingTrueOrFalseQuestion","ReadOnlyQuestion","readOnly","QuestionCard","deleteQuestion","QuestionsSoFar","editQuestionStart","WorkOnExamQuestions","examQuestions","questionToBeEdited","hasQuestionsChanged","startEditingQuestion","editedQuestion","addQuestion","completeExamQuestions","workOnExamQuestionsMain","CreateAExamControls","createAExamControlsClass","leftButton","forwardFunction","disabled","disableNextBtn","icon","faArrowRight","finishFunction","faSave","backwardFunction","faArrowLeft","resetFunction","faUndo","CreateAExamFinish","doesExamHaveNoQuestions","doesExamHaveNoStudents","errorMessageKey","noStudents","noQuestions","noStudentsOrQuestions","text","CreateAExam","setDisableNextButton","goToNextExamPart","goBackOneExamPart","createExam","examPartComponent","part","EditAExamStart","handleExamChange","handleExamSelection","sort","examA","examB","selectExam","sortedUserExams","href","EditAExamControls","editAExamControlsClass","centerButtons","goToFinishExamPart","rightButton","EditAExam","optId","updateTitle","updateQuestions","updateStudents","saveExam","editExam","examExample","ExamsStudents","useState","setIsWindowMobileSize","useEffect","ListGroup","questionsCorrect","questionsIncorrect","examResults","correctQuestionNumbers","incorrectQuestionNumbers","drop","takenTest","num","ExamExample","isExamLinkCopied","setIsExamLinkCopied","addAnswerToQuestionOptions","examLink","el","document","createElement","setAttribute","style","position","left","appendChild","select","execCommand","removeChild","handleCopyExamLinkButtonClick","editExamFunc","deleteExamFunc","Exams","examSelected","showModal","toEditExam","hideModal","handleStartOfEditExam","examSelectedId","handleExamDeletion","deleteExam","Modal","onHide","show","Question","questionTypeForm","ExamForm","submitButton","areQuestionsChecked","selectedStudent","saveExamResultsLoading","OverlayTrigger","overlay","Tooltip","pointerEvents","handleStudentChange","handleFormChange","handleCompletingExam","getExam","setLoading","setExam","setError","setSelectedStudent","setAreQuestionsChecked","setShowModal","saveExamResultsError","setSaveExamResultsError","setSaveExamResultsLoading","match","params","a","content","Title","optionsChecked","getElementsByName","every","saveExamResults","isAtleastOneOptChecked","App","loginExistingUser","routes","path","component","TakeExam","from","split","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","examReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","appWrapper","basename","ReactDOM","render","getElementById"],"mappings":"w4BAAMA,EAA2B,sBAC3BC,EAAmC,mCACnCC,EAAgC,gCAEhCC,EAAc,cACdC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAa,aACbC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cACdC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAmB,mB,yjBCJzB,IAAMC,EAAe,CACnBC,gBAAgB,EAChBC,OAAQ,GACRC,SAAS,EACTC,MAAO,GACPC,KAAM,IAwHOC,MA/Bf,WAAoD,IAA/BC,EAA8B,uDAAtBP,EAAcQ,EAAQ,uCACjD,OAAQA,EAAOC,MACb,KAAKxB,EACH,OAzFN,SAAsCsB,EAAOC,GAC3C,OAAO,EAAP,GACKD,EADL,CAEEN,gBAAgB,EAChBC,OAAQM,EAAON,SAqFNQ,CAA6BH,EAAOC,GAC7C,KAAKtB,EACH,OAnFN,SAAmCqB,GACjC,OAAOA,EAkFII,CAA0BJ,GACnC,KAAKnB,EACH,OAjFN,SAAyBmB,GACvB,OAAO,EAAP,GAAYA,EAAZ,CAAmBJ,SAAS,IAgFjBS,CAAgBL,GACzB,KAAKlB,EACH,OA/EN,SAA2BkB,EAAOC,GAChC,OAAO,EAAP,GACKD,EADL,CAEEN,gBAAgB,EAChBC,OAAQM,EAAON,OACfC,SAAS,IA0EAU,CAAkBN,EAAOC,GAClC,KAAKlB,EACH,OAxEN,SAAwBiB,EAAOC,GAC7B,OAAO,EAAP,GACKD,EADL,CAEEJ,SAAS,EACTC,MAAOI,EAAOJ,QAoELU,CAAeP,EAAOC,GAC/B,KAAKhB,EACH,OAlEN,SAAwBe,GACtB,OAAO,EAAP,GAAYA,EAAZ,CAAmBJ,SAAS,IAiEjBY,CAAeR,GACxB,KAAKd,EACH,OAhEN,SAA0Bc,EAAOC,GAC/B,OAAO,EAAP,GACKD,EADL,CAEEN,gBAAgB,EAChBC,OAAQM,EAAON,OACfC,SAAS,IA2DAa,CAAiBT,EAAOC,GACjC,KAAKd,EACH,OAzDN,SAAuBa,EAAOC,GAC5B,OAAO,EAAP,GACKD,EADL,CAEEJ,SAAS,EACTC,MAAOI,EAAOJ,QAqDLa,CAAcV,EAAOC,GAC9B,KAAKZ,EACH,OAnDN,SAAyBW,GACvB,OAAO,EAAP,GACKA,EADL,CAEEJ,SAAS,IAgDAe,CAAgBX,GACzB,KAAKV,EACH,OA9CN,SAA2BU,GACzB,OAAO,EAAP,GACKA,EADL,CAEEJ,SAAS,EACTF,gBAAgB,EAChBC,OAAQ,GACRG,KAAM,KAwCGc,CAAkBZ,GAC3B,KAAKT,EACH,OAtCN,SAAwBS,EAAOC,GAC7B,OAAO,EAAP,GACKD,EADL,CAEEJ,SAAS,EACTC,MAAOI,EAAOJ,QAkCLgB,CAAeb,EAAOC,GAC/B,KAAKT,EACH,OAhCN,SAAwBQ,GACtB,OAAO,EAAP,GACKA,EADL,CAEEH,MAAO,KA6BEiB,CAAed,GACxB,QACE,OAAOA,I,iBCxIPe,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAAc,cACdC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAsB,sBAEtBC,EAAW,WACXC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAuB,uBACvBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAc,cACdC,EAAoB,oBACpBC,EAAsB,sBACtBC,GAAmB,mBAEnBC,GAAwB,wBACxBC,GAAkB,kBAClBC,GAAwB,wBACxBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAY,YACZC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAoB,oBCHpBpD,GAAe,CACnBqD,iBAAkB,CAChBC,MAAO,GACPC,UAAW,GACXC,SAAU,IAEZC,eAAgB,GAChBC,qBAAsB,CACpBJ,MAAO,GACPC,UAAW,GACXC,SAAU,IAEZG,4BAA6B,QAC7BC,2BAA4B,QAC5BC,mBAAmB,EACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,iBAAiB,EACjB5D,MAAO,GACP6D,cAAe,GACfC,UAAW,IAkOEC,OA5Df,WAA0D,IAA/B5D,EAA8B,uDAAtBP,GAAcQ,EAAQ,uCACjD4D,EAAWC,IAAU9D,GAC3B,OAAQC,EAAOC,MACb,KAAKa,EACH,OAvKN,SAA8B8C,EAAU5D,GAEtC,OADA4D,EAAST,4BAA8BnD,EAAO8D,SACvCF,EAqKIG,CAAqBH,EAAU5D,GACxC,KAAKe,EACH,OApKN,SAAyB6C,GAOvB,OANAA,EAASf,iBAAmB,CAC1BC,MAAO,GACPC,UAAW,GACXC,SAAU,IAEZY,EAAST,4BAA8B,QAChCS,EA6JII,CAAgBJ,GACzB,KAAK5C,EACH,OA5JN,SAAyB4C,EAAU5D,GAEjC,OADA4D,EAASf,iBAAiBC,MAAQ9C,EAAO8C,MAClCc,EA0JIK,CAAgBL,EAAU5D,GACnC,KAAKiB,EACH,OAzJN,SAA6B2C,EAAU5D,GAErC,OADA4D,EAASf,iBAAiBE,UAAY/C,EAAO+C,UACtCa,EAuJIM,CAAoBN,EAAU5D,GACvC,KAAKkB,EACH,OAtJN,SAA4B0C,EAAU5D,GAEpC,OADA4D,EAASf,iBAAiBG,SAAWhD,EAAOgD,SACrCY,EAoJIO,CAAmBP,EAAU5D,GACtC,KAAKoB,EACH,OAnJN,SAAyBwC,GAEvB,OADAA,EAASP,mBAAoB,EACtBO,EAiJIQ,CAAgBR,GACzB,KAAKtC,EACH,OAhJN,SAA2BsC,GAQzB,OAPAA,EAASf,iBAAmB,CAC1BC,MAAO,GACPC,UAAW,GACXC,SAAU,IAEZY,EAAST,4BAA8B,QACvCS,EAASP,mBAAoB,EACtBO,EAwIIS,CAAkBT,GAC3B,KAAKvC,EACH,OAvIN,SAAwBuC,EAAU5D,GAGhC,OAFA4D,EAASP,mBAAoB,EAC7BO,EAAShE,MAAQI,EAAOJ,MACjBgE,EAoIIU,CAAeV,EAAU5D,GAClC,KAAKwB,EACH,OAnIN,SAAsBoC,GAEpB,OADAA,EAASN,gBAAiB,EACnBM,EAiIIW,CAAaX,GACtB,KAAKlC,EACH,OA1HN,SAAqBkC,GAEnB,OADAA,EAASN,gBAAiB,EACnBM,EAwHIY,CAAYZ,GACrB,KAAKnC,EACH,OAlIN,SAAwBmC,EAAU5D,GAGhC,OAFA4D,EAASN,gBAAiB,EAC1BM,EAASH,cAAgBzD,EAAOyE,KACzBb,EA+HIc,CAAed,EAAU5D,GAClC,KAAK4B,EACH,OAzHN,SAA2BgC,GAEzB,OADAA,EAASL,qBAAsB,EACxBK,EAuHIe,CAAkBf,GAC3B,KAAK9B,EACH,OAhHN,SAA0B8B,EAAU5D,GAGlC,OAFA4D,EAASL,qBAAsB,EAC/BK,EAAShE,MAAQI,EAAOJ,MACjBgE,EA6GIgB,CAAiBhB,EAAU5D,GACpC,KAAK6B,EACH,OAxHN,SAA6B+B,EAAU5D,GAGrC,OAFA4D,EAASL,qBAAsB,EAC/BK,EAASF,UAAY1D,EAAO6E,MACrBjB,EAqHIkB,CAAoBlB,EAAU5D,GACvC,KAAKgC,EACH,OA9GN,SAAyB4B,GAEvB,OADAA,EAASmB,mBAAoB,EACtBnB,EA4GIoB,CAAgBpB,GACzB,KAAK1B,GACH,OAnGN,SAAwB0B,EAAU5D,GAGhC,OAFA4D,EAASmB,mBAAoB,EAC7BnB,EAAShE,MAAQI,EAAOJ,MACjBgE,EAgGIqB,CAAerB,EAAU5D,GAClC,KAAKiC,EACH,OA7GN,SAA2B2B,EAAU5D,GAKnC,OAJA4D,EAASmB,mBAAoB,EAC7BnB,EAASF,UAAYE,EAASF,UAAUwB,QACtC,SAACT,GAAD,OAAUA,EAAKU,MAAQnF,EAAOoF,iBAEzBxB,EAwGIyB,CAAkBzB,EAAU5D,GACrC,KAAKmC,GACH,OAjGN,SAA4ByB,EAAU5D,GAEpC,OADA4D,EAASX,eAAiBjD,EAAOsF,aAC1B1B,EA+FI2B,CAAmB3B,EAAU5D,GACtC,KAAKoC,GACH,OA9FN,SAAuBwB,GAQrB,OAPAA,EAASX,eAAiB,GAC1BW,EAASV,qBAAuB,CAC9BJ,MAAO,GACPC,UAAW,GACXC,SAAU,IAEZY,EAASR,2BAA6B,QAC/BQ,EAsFI4B,CAAc5B,GACvB,KAAKvB,GACH,OArFN,SAA4BuB,EAAU5D,GAEpC,OADA4D,EAASR,2BAA6BpD,EAAO8D,SACtCF,EAmFI6B,CAAmB7B,EAAU5D,GACtC,KAAKsC,GACH,OAlFN,SAAuBsB,EAAU5D,GAE/B,OADA4D,EAASV,qBAAqBJ,MAAQ9C,EAAO8C,MACtCc,EAgFI8B,CAAc9B,EAAU5D,GACjC,KAAKuC,GACH,OA/EN,SAA2BqB,EAAU5D,GAEnC,OADA4D,EAASV,qBAAqBH,UAAY/C,EAAO+C,UAC1Ca,EA6EI+B,CAAkB/B,EAAU5D,GACrC,KAAKwC,GACH,OA5EN,SAA0BoB,EAAU5D,GAElC,OADA4D,EAASV,qBAAqBF,SAAWhD,EAAOgD,SACzCY,EA0EIgC,CAAiBhC,EAAU5D,GACpC,KAAK0C,GACH,OAzEN,SAAuBkB,GAErB,OADAA,EAASJ,iBAAkB,EACpBI,EAuEIiC,CAAcjC,GACvB,KAAKhB,GACH,OAtEN,SAAyBgB,GASvB,OARAA,EAASX,eAAiB,GAC1BW,EAASV,qBAAuB,CAC9BJ,MAAO,GACPC,UAAW,GACXC,SAAU,IAEZY,EAASR,2BAA6B,QACtCQ,EAASJ,iBAAkB,EACpBI,EA6DIkC,CAAgBlC,GACzB,KAAKjB,GACH,OA5DN,SAAsBiB,EAAU5D,GAG9B,OAFA4D,EAASJ,iBAAkB,EAC3BI,EAAShE,MAAQI,EAAOJ,MACjBgE,EAyDImC,CAAanC,EAAU5D,GAChC,QACE,OAAOD,I,6BC1Jb,SAASc,KACP,MAAO,CACLZ,KAAMV,GCNV,SAASyG,KACP,MAAO,CACL/F,KAAM0B,GA2CV,SAAS4D,GAAmBD,GAC1B,MAAO,CAAErF,KAAMkC,GAAuBmD,gBAOxC,SAASG,GAAmB3B,GAC1B,MAAO,CACL7D,KAAMoC,GACNyB,Y,iBC1JMmC,I,aAaAC,I,aA6BAC,I,aA0BAC,IAtEFC,GAAkBC,+CAE1B,SAAUL,KAAV,0EAEgB,OAFhB,kBAEsBM,MAAM,GAAD,OAAIF,GAAJ,kBAF3B,OAGsB,OADZG,EAFV,gBAG4BA,EAAIC,OAHhC,UAGUC,EAHV,OAISF,EAAIG,GAJb,sBAKYC,MAAMF,EAAU9G,OAL5B,OAOI,OAPJ,UAOUiH,cFE4BnH,EEFKgH,EAAU7G,KAAKsF,IFGjD,CACLlF,KAAMxB,EACNiB,YEZJ,gCASI,OATJ,oCASUmH,aFQD,CAAE5G,KAAMvB,IEjBjB,kCFSA,IAAsCgB,IETtC,kBAaA,SAAUwG,GAAelG,GAAzB,oFACE,OADF,SACQ6G,aFgBC,CACL5G,KAAMrB,IElBV,OASgB,OAPNkI,EAA8B9G,EAA9B8G,SAAUC,EAAoB/G,EAApB+G,MAAOC,EAAahH,EAAbgH,SACnBnH,EAAO,CACXiH,WACAC,QACAC,YANJ,kBASsBT,MAAM,GAAD,OAAIF,GAAJ,wBAAyC,CAC9DY,OAAQ,OACRC,KAAMC,KAAKC,UAAUvH,GACrBwH,QAAS,CACP,eAAgB,sBAbxB,OAgBsB,OAPZb,EATV,iBAgB4BA,EAAIC,OAhBhC,WAgBUC,EAhBV,OAiBSF,EAAIG,GAjBb,uBAkBYC,MAAMF,EAAU9G,OAlB5B,QAuBI,OAFauF,EACTuB,EADFY,QAAWnC,IArBjB,UAuBU0B,aFAD,CACL5G,KAAMpB,EACNa,OEF4ByF,IAvBhC,gCAyBI,OAzBJ,oCAyBU0B,cFIcjH,EEJK,KAAI2H,QFKxB,CACLtH,KAAMnB,EACNc,WEhCJ,kCF6BA,IAAwBA,IE7BxB,kBA6BA,SAAUuG,GAAcnG,GAAxB,kFACE,OADF,SACQ6G,aFeC,CACL5G,KAAMjB,IEjBV,OAQgB,OANN+H,EAAoB/G,EAApB+G,MAAOC,EAAahH,EAAbgH,SACTnH,EAAO,CACXkH,QACAC,YALJ,kBAQsBT,MAAM,GAAD,OAAIF,GAAJ,uBAAwC,CAC7DY,OAAQ,OACRC,KAAMC,KAAKC,UAAUvH,GACrBwH,QAAS,CAAE,eAAgB,sBAXjC,OAasB,OALZb,EARV,iBAa4BA,EAAIC,OAbhC,WAaUC,EAbV,OAcSF,EAAIG,GAdb,uBAeYC,MAAMF,EAAU9G,OAf5B,QAoBI,OAFUuF,EACNuB,EADF7G,KAAQsF,IAlBd,UAoBU0B,aFED,CACL5G,KAAMhB,EACNS,OEJ2ByF,IApB/B,gCAsBI,OAtBJ,oCAsBU0B,cFMajH,EENK,KAAI2H,QFOvB,CACLtH,KAAMf,EACNU,WE/BJ,kCF4BA,IAAuBA,IE5BvB,kBA0BA,SAAUwG,KAAV,0EACE,OADF,SACQS,aFeC,CACL5G,KAAMb,IEjBV,OAGgB,OAHhB,kBAGsBmH,MAAM,GAAD,OAAIF,GAAJ,wBAAyC,CAC9DY,OAAQ,OACRI,QAAS,CAAE,eAAgB,sBALjC,OAOsB,OAJZb,EAHV,gBAO4BA,EAAIC,OAPhC,UAOUC,EAPV,OAQSF,EAAIG,GARb,uBASYC,MAAMF,EAAU9G,OAT5B,QAWI,OAXJ,UAWUiH,aFWD,CACL5G,KAAMZ,IEvBV,gCAaI,OAbJ,oCAaUwH,cFccjH,EEdK,KAAI2H,QFexB,CACLtH,KAAMX,EACNM,WE9BJ,kCF2BA,IAAwBA,IE3BxB,kBClDA,SAAS4H,GAA2BC,EAAmBC,GACrD,IAAMC,EAAsBF,EAAkBG,KAAI,SAACC,GAAD,OAAcA,EAASC,MACnEC,EAAiBL,EAAaE,KAAI,SAACC,GAAD,OAAcA,EAASC,MAEzDE,EAAmBL,EAAoBzC,QAC3C,SAAC+C,GAAD,OAAiBF,EAAeG,SAASD,MAGrCE,EAAiBJ,EAAe7C,QACpC,SAAC+C,GAAD,OAAiBN,EAAoBO,SAASD,MAM1CG,EAHiCX,EAAkBvC,QACvD,SAAC2C,GAAD,OAAeG,EAAiBE,SAASL,EAASC,OAGjD5C,QAAO,SAAC2C,GACP,IAAMQ,EAAcX,EAAaY,MAC/B,SAACD,GAAD,OAAiBA,EAAYP,KAAOD,EAASC,MAE/C,OAtDN,SAA0BS,EAAkBF,GAyB1C,MAAO,CAxBsBE,EAAiBC,OAASH,EAAYG,KACtCD,EAAiBtI,OAASoI,EAAYpI,KAEjEsI,EAAiBE,OAAOC,MACtB,SAACD,EAAQE,GAAT,OAAeF,IAAWJ,EAAYI,OAAOE,OAE/CN,EAAYI,OAAOC,MACjB,SAACD,EAAQE,GAAT,OAAeF,IAAWF,EAAiBE,OAAOE,MAGpDJ,EAAiBK,QAAQF,MACvB,SAACG,EAAKF,GAAN,OAAYE,EAAIC,WAAaT,EAAYO,QAAQD,GAAGG,aAEtDT,EAAYO,QAAQF,MAClB,SAACG,EAAKF,GAAN,OAAYE,EAAIC,WAAaP,EAAiBK,QAAQD,GAAGG,YAG3DP,EAAiBK,QAAQF,MACvB,SAACG,EAAKF,GAAN,OAAYE,EAAIL,OAASH,EAAYO,QAAQD,GAAGH,SAElDH,EAAYO,QAAQF,MAClB,SAACG,EAAKF,GAAN,OAAYE,EAAIL,OAASD,EAAiBK,QAAQD,GAAGH,SASvDE,MAAK,SAACK,GAAD,OAA0BA,KAuBtBC,CAAiBnB,EAAUQ,MAEnCT,KAAI,SAACC,GAAD,OAAcA,EAASC,MAE9B,MAAO,CAAEE,mBAAkBG,iBAAgBC,mBAG7C,SAASa,GAA0BC,EAAkBC,GACnD,IAAMC,EAAqBF,EAAiBtB,KAAI,SAACyB,GAAD,OAAaA,EAAQlE,OAC/DmE,EAAgBH,EAAYvB,KAAI,SAACyB,GAAD,OAAaA,EAAQvB,MAErDyB,EAAkBH,EAAmBlE,QACzC,SAACsE,GAAD,OAAgBF,EAAcpB,SAASsB,MAGnCC,EAAgBH,EAAcpE,QAClC,SAACsE,GAAD,OAAgBJ,EAAmBlB,SAASsB,MAMxCE,EAHgCR,EAAiBhE,QACrD,SAACmE,GAAD,OAAcE,EAAgBrB,SAASmB,EAAQlE,QAG9CD,QAAO,SAACmE,GAIP,OAHuBF,EAAYb,MACjC,SAACqB,GAAD,OAAgBA,EAAW7B,KAAOuB,EAAQvB,MAC1CU,OACwBa,EAAQb,QAEnCZ,KAAI,SAACyB,GAAD,OAAaA,EAAQvB,MAE5B,MAAO,CAAEyB,kBAAiBE,gBAAeC,kB,iBC7DjCE,I,aA2BAC,I,aAcAC,I,aAcAC,I,aAgBAC,IAvEV,SAAUJ,GAAe5J,GAAzB,gFAEI,OAFJ,kBAEU6G,aHkDD,CAAE5G,KAAMmB,IGpDjB,OAKoB,OAFV6I,EAAcpG,IAAU7D,EAAOyE,MAHzC,SAK0B8B,MAAM,iBALhC,OAM0B,OADhB2D,EALV,gBAMgCA,EAAQzD,OANxC,UAMU0D,EANV,OAOSD,EAAQvD,GAPjB,uBAQYC,MAAMuD,EAAcvK,OARhC,QAYgB,OAFZqK,EAAYG,QAAUD,EAActK,KAAKsF,IAV7C,UAYsBoB,MAAM,gBAAiB,CACvCU,OAAQ,OACRC,KAAMC,KAAKC,UAAU6C,GACrB5C,QAAS,CAAE,eAAgB,sBAfjC,QAiBsB,OALZb,EAZV,iBAiB4BA,EAAIC,OAjBhC,WAiBUC,EAjBV,OAkBSF,EAAIG,GAlBb,uBAmBYC,MAAMF,EAAU9G,OAnB5B,QAqBI,OArBJ,UAqBUiH,aHuCD,CAAE5G,KAAMqB,IG5DjB,gCAuBI,OAvBJ,oCAuBUuF,aHiCD,CAAE5G,KAAMoB,EAAkBzB,MGjCN,6BAvB7B,uDA2BA,SAAUiK,GAAY7J,GAAtB,0EAEI,OAFJ,kBAEU6G,aH0CD,CACL5G,KAAMuB,IG7CV,OAGgB,OAHhB,SAGsB+E,MAAM,iBAAD,OAAkBvG,EAAOqK,SAHpD,OAIsB,OADZ7D,EAHV,gBAI4BA,EAAIC,OAJhC,UAIUC,EAJV,OAKSF,EAAIG,GALb,uBAMYC,MAAMF,EAAU9G,OAN5B,QAQI,OARJ,UAQUiH,cHyCcpC,EGzCKiC,EAAUjC,KH0C9B,CACLxE,KAAMwB,EACNgD,UGpDJ,gCAUI,OAVJ,oCAUUoC,aH+CD,CACL5G,KAAMyB,EACN9B,MGjDsB,6BAV1B,kCHwDA,IAPwB6E,IGjDxB,kBAcA,SAAUqF,KAAV,0EAEI,OAFJ,kBAEUjD,aHsDD,CACL5G,KAAM2B,IGzDV,OAGgB,OAHhB,SAGsB2E,MAAM,uBAH5B,OAIsB,OADZC,EAHV,gBAI4BA,EAAIC,OAJhC,UAIUC,EAJV,OAKSF,EAAIG,GALb,uBAMYC,MAAMF,EAAU9G,OAN5B,QAQI,OARJ,UAQUiH,cHqDmBhC,EGrDK6B,EAAU7B,MHsDnC,CACL5E,KAAM4B,EACNgD,WGhEJ,gCAUI,OAVJ,oCAUUgC,aH2DD,CACL5G,KAAM6B,EACNlC,MG7D2B,6BAV/B,kCHoEA,IAP6BiF,IG7D7B,kBAcA,SAAUkF,GAAe/J,GAAzB,0EAEI,OAFJ,kBAEU6G,aHmED,CAAE5G,KAAM+B,IGrEjB,OAGgB,OAHhB,SAGsBuE,MAAM,iBAAD,OAAkBvG,EAAOqK,QAAU,CACxDpD,OAAQ,WAJd,OAMsB,OAHZT,EAHV,gBAM4BA,EAAIC,OANhC,UAMUC,EANV,OAOSF,EAAIG,GAPb,uBAQYC,MAAMF,EAAU9G,OAR5B,QAUI,OAVJ,UAUUiH,cH8DiBzB,EG9DKpF,EAAOqK,OH+D9B,CAAEpK,KAAMgC,EAAqBmD,mBGzEtC,gCAYI,OAZJ,oCAYUyB,aHiED,CAAE5G,KAAMiC,GAAkBtC,MGjEN,6BAZ7B,kCH4EA,IAJ2BwF,IGxE3B,kBAgBA,SAAU4E,GAAahK,GAAvB,8EAEI,OAFJ,kBAEU6G,aH2GD,CAAE5G,KAAMyC,KG7GjB,UAGY+B,EAA+BzE,EAA/ByE,OAAMvB,EAAyBlD,EAAzBkD,sBACWJ,MAJ7B,iBAKkB,OALlB,SAKwByD,MAAM,iBAAD,OAAkB9B,EAAKU,KAAO,CACnD8B,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAEtE,MAAOI,EAAqBJ,QACnDuE,QAAS,CAAE,eAAgB,sBARnC,OAUwB,OALZb,EALZ,iBAU8BA,EAAIC,OAVlC,WAUYC,EAVZ,OAWWF,EAAIG,GAXf,uBAYcC,MAAMF,EAAU9G,OAZ9B,WAgBkD,IAA1CsD,EAAqBH,UAAUuH,OAhBvC,8JAqBU9C,GACF/C,EAAK1B,UACLG,EAAqBH,WALrBiF,EAlBR,EAkBQA,iBACAG,EAnBR,EAmBQA,eACAC,EApBR,EAoBQA,gBAMOO,EAAI,EA1BnB,YA0BsBA,EAAIX,EAAiBsC,QA1B3C,iBA2BoB,OA3BpB,SA2B0B/D,MAAM,0BAAD,OAA2B9B,EAAKU,KAAO,CAC5D8B,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAAEa,WAAYD,EAAiBW,KACpDtB,QAAS,CAAE,eAAgB,sBA9BrC,OAgC0B,OALZb,EA3Bd,gBAgCgCA,EAAIC,OAhCpC,UAgCcC,EAhCd,OAiCaF,EAAIG,GAjCjB,uBAkCgBC,MAAMF,EAAU9G,OAlChC,QA0BmD+I,IA1BnD,+CAsCeA,GAtCf,4EA2CoB,OAJRzB,EAAOhE,EAAqBH,UAAUuF,MACxC,SAACT,GAAD,OAAcA,EAASC,KAAOK,EAAeQ,OAE1C1I,KAAqB,gBAAdiH,EAAKjH,KAAyB,aAAeiH,EAAKjH,KA1CtE,SA2C0BsG,MAAM,0BAAD,OAA2B9B,EAAKU,KAAO,CAC5D8B,OAAQ,OACRC,KAAMC,KAAKC,UAAUF,GACrBG,QAAS,CAAE,eAAgB,sBA9CrC,OAgD0B,OALZb,EA3Cd,gBAgDgCA,EAAIC,OAhDpC,UAgDcC,EAhDd,OAiDaF,EAAIG,GAjDjB,uBAkDgBC,MAAMF,EAAU9G,OAlDhC,2CAsCe+I,EAAI,EAtCnB,aAsCsBA,EAAIR,EAAemC,QAtCzC,0CAsCe3B,GAtCf,iBAsCiDA,IAtCjD,gDAsDeA,GAtDf,4EA6DoB,OANRzB,EAAOhE,EAAqBH,UAAUuF,MACxC,SAACT,GAAD,OAAcA,EAASC,KAAOM,EAAgBO,OAE3CV,WAAaf,EAAKY,GACvBZ,EAAKjH,KAAqB,gBAAdiH,EAAKjH,KAAyB,aAAeiH,EAAKjH,KA3DtE,SA6D0BsG,MAAM,0BAAD,OAA2B9B,EAAKU,KAAO,CAC5D8B,OAAQ,MACRC,KAAMC,KAAKC,UAAUF,GACrBG,QAAS,CAAE,eAAgB,sBAhErC,OAkE0B,OALZb,EA7Dd,gBAkEgCA,EAAIC,OAlEpC,UAkEcC,EAlEd,OAmEaF,EAAIG,GAnEjB,uBAoEgBC,MAAMF,EAAU9G,OApEhC,2CAsDe+I,EAAI,EAtDnB,aAsDsBA,EAAIP,EAAgBkC,QAtD1C,0CAsDe3B,GAtDf,iBAsDkDA,IAtDlD,iFAyEiD,IAAzCzF,EAAqBF,SAASsH,OAzEtC,8JA8EUrB,GACFxE,EAAKzB,SACLE,EAAqBF,UALrBuG,EA3ER,EA2EQA,gBACAE,EA5ER,EA4EQA,cACAC,EA7ER,EA6EQA,eAMOf,EAAI,EAnFnB,YAmFsBA,EAAIY,EAAgBe,QAnF1C,iBAoFoB,OApFpB,SAoF0B/D,MAAM,yBAAD,OAA0B9B,EAAKU,KAAO,CAC3D8B,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAAEoC,UAAWD,EAAgBZ,KAClDtB,QAAS,CAAE,eAAgB,sBAvFrC,OAyF0B,OALZb,EApFd,gBAyFgCA,EAAIC,OAzFpC,UAyFcC,EAzFd,OA0FaF,EAAIG,GA1FjB,uBA2FgBC,MAAMF,EAAU9G,OA3FhC,QAmFkD+I,IAnFlD,+CA+FeA,GA/Ff,4EAmGoB,OAHNgB,EAAazG,EAAqBF,SAASsF,MAC/C,SAACe,GAAD,OAAaA,EAAQvB,KAAO2B,EAAcd,MAjGpD,SAmG0BpC,MAAM,yBAAD,OAA0B9B,EAAKU,KAAO,CAC3D8B,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEoB,KAAMmB,EAAWnB,OACxCnB,QAAS,CAAE,eAAgB,sBAtGrC,OAwG0B,OALZb,EAnGd,gBAwGgCA,EAAIC,OAxGpC,UAwGcC,EAxGd,OAyGaF,EAAIG,GAzGjB,sBA0GgBC,MAAMF,EAAU9G,OA1GhC,0CA+Fe+I,EAAI,EA/FnB,aA+FsBA,EAAIc,EAAca,QA/FxC,0CA+Fe3B,GA/Ff,iBA+FgDA,IA/FhD,gDA8GeA,GA9Gf,4EAkHoB,OAHN4B,EAAgBrH,EAAqBF,SAASsF,MAClD,SAACe,GAAD,OAAaA,EAAQvB,KAAO4B,EAAef,MAhHrD,SAkH0BpC,MAAM,yBAAD,OAA0B9B,EAAKU,KAAO,CAC3D8B,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACnBoC,UAAWe,EAAczC,GACzBU,KAAM+B,EAAc/B,OAEtBnB,QAAS,CAAE,eAAgB,sBAxHrC,OA0H0B,OARZb,EAlHd,gBA0HgCA,EAAIC,OA1HpC,UA0HcC,EA1Hd,OA2HaF,EAAIG,GA3HjB,sBA4HgBC,MAAMF,EAAU9G,OA5HhC,0CA8Ge+I,EAAI,EA9GnB,aA8GsBA,EAAIe,EAAeY,QA9GzC,0CA8Ge3B,GA9Gf,iBA8GiDA,IA9GjD,8EAiII,OAjIJ,UAiIU9B,aHZD,CAAE5G,KAAM2C,KGrHjB,gCAmII,OAnIJ,oCAmIUiE,aHlBD,CAAE5G,KAAM0C,GAAgB/C,MGkBN,6BAnI3B,uD,iBCnEU4K,I,aAOAC,IAPV,SAAUD,KAAV,kEACE,OADF,SACQE,aAAUlM,EAA0ByH,IAD5C,OAEE,OAFF,SAEQyE,aAAU/L,EAAauH,IAF/B,OAGE,OAHF,SAGQwE,aAAU3L,EAAYoH,IAH9B,OAIE,OAJF,SAIQuE,aAAUvL,EAAaiH,IAJ/B,wCAOA,SAAUqE,KAAV,kEACE,OADF,SACQC,aAAUvJ,EAAayI,IAD/B,OAEE,OAFF,SAEQc,aAAUnJ,EAAUsI,IAF5B,OAGE,OAHF,SAGQa,aAAU/I,EAAgBmI,IAHlC,OAIE,OAJF,SAIQY,aAAU3I,EAAagI,IAJ/B,OAKE,OALF,UAKQW,aAAUjI,GAAWuH,IAL7B,yC,gHCZeW,I,OAlBO,SAACC,GACrB,OACE,kBAACC,GAAA,EAAD,CACEC,QAAwB,WAAfF,EAAM3K,KAAoB2K,EAAMG,YAAc,aACvDC,UAAU,gBACVC,QAASL,EAAMK,QACfhL,KAAM2K,EAAM3K,KACZiL,KAAMN,EAAMM,MAEZ,yBAAKF,UAAS,kBAAcJ,EAAMjL,QAAwB,GAAd,cAC1C,kBAACwL,GAAA,EAAD,CAASC,GAAG,OAAOC,UAAU,WAC7B,0BAAML,UAAU,WAAhB,eAEF,yBAAKA,UAAWJ,EAAMjL,QAAU,YAAc,IAAKiL,EAAMU,aCPzDC,I,qNACJxL,MAAQ,CACNyL,oBAAoB,G,EAYtBC,yBAA2B,WACOC,OAAOC,YAAc,MACnB,EAAK5L,MAAMyL,oBAC3C,EAAKI,SAAS,CAAEJ,mBAAoBE,OAAOC,YAAc,O,qFAX3DD,OAAOG,iBAAiB,SAAUC,KAAKL,yBAAyBM,KAAKD,OACrEA,KAAKL,6B,6CAILC,OAAOM,oBAAoB,SAAUF,KAAKL,4B,+BAUlC,IAAD,SAIHK,KAAKlB,MAFPnL,EAFK,EAELA,eACYwM,EAHP,EAGLC,SAAYD,SAGVE,EACF,kBAACC,GAAA,EAAD,CAAKpB,UAAU,WACb,kBAACoB,GAAA,EAAIC,KAAL,CACEjB,GAAIiB,IACJC,GAAG,eACHC,OAAqB,iBAAbN,GAHV,iBAOA,kBAACG,GAAA,EAAIC,KAAL,CAAUjB,GAAIiB,IAAMC,GAAG,aAAaC,OAAqB,eAAbN,GAA5C,eAGA,kBAACG,GAAA,EAAIC,KAAL,CAAUjB,GAAIiB,IAAMC,GAAG,SAASC,OAAqB,WAAbN,GAAxC,SAGA,kBAAC,GAAD,CACEhB,QAAQ,eACRhL,KAAK,SACL8K,YAAa,kBAAM,EAAKH,MAAM4B,YAC9B7M,QAASmM,KAAKlB,MAAMjL,QACpBuL,KAAK,KACLuB,QAAQ,IANV,WAaAC,EACF,kBAACN,GAAA,EAAD,CAAKpB,UAAU,WACb,kBAACoB,GAAA,EAAIC,KAAL,CACEjB,GAAIiB,IACJC,GAAG,eACHC,OAAqB,iBAAbN,GAHV,iBAOA,kBAACG,GAAA,EAAIC,KAAL,CAAUjB,GAAIiB,IAAMC,GAAG,QAAQC,OAAqB,UAAbN,GAAvC,iBA4DJ,OAtDIH,KAAK/L,MAAMyL,qBACbW,EACE,kBAACQ,GAAA,EAAD,CACEC,YAAU,EACV5B,UAAU,UACVlD,GAAG,kBACHhF,MAAM,OACNmI,QAAQ,QAER,kBAAC4B,GAAA,EAASC,KAAV,CACE1B,GAAIiB,IACJC,GAAG,eACHC,OAAqB,iBAAbN,GAHV,iBAOA,kBAACY,GAAA,EAASC,KAAV,CACE1B,GAAIiB,IACJC,GAAG,aACHC,OAAqB,eAAbN,GAHV,eAOA,kBAACY,GAAA,EAASC,KAAV,CAAe1B,GAAIiB,IAAMC,GAAG,SAASC,OAAqB,WAAbN,GAA7C,SAGA,kBAACY,GAAA,EAASE,QAAV,MACA,kBAACF,GAAA,EAASC,KAAV,CAAehC,QAAS,kBAAM,EAAKF,MAAM4B,WAAzC,WAMJE,EACE,kBAACC,GAAA,EAAD,CACEC,YAAU,EACV5B,UAAU,UACVlD,GAAG,kBACHhF,MAAM,OACNmI,QAAQ,QAER,kBAAC4B,GAAA,EAASC,KAAV,CACE1B,GAAIiB,IACJC,GAAG,eACHC,OAAqB,iBAAbN,GAHV,iBAOA,kBAACY,GAAA,EAASC,KAAV,CAAe1B,GAAIiB,IAAMC,GAAG,QAAQC,OAAqB,UAAbN,GAA5C,kBAOJ,kBAACe,GAAA,EAAD,CAAQ/B,QAAQ,QAAQD,UAAU,iBAChC,kBAACgC,GAAA,EAAOC,MAAR,CAAcjC,UAAU,eAAxB,gBACCvL,EAAiB0M,EAAwBO,O,GA/HtBQ,IAAMC,YAmJnBC,oBAdf,SAAyBrN,GAAQ,IAAD,EACMA,EAAMsN,KAC1C,MAAO,CACL5N,eAH4B,EACtBA,eAGNE,QAJ4B,EACNA,YAO1B,SAA4B2N,GAC1B,MAAO,CACLd,SAAU,kBAAMc,EP5DX,CACLrN,KAAMd,QO+DKiO,CAGbG,aAAWhC,K,iBCxJPiC,I,qNAKJC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAM9N,EAAO,CACXiH,SAAU4G,EAAEE,OAAO,GAAGC,MACtB9G,MAAO2G,EAAEE,OAAO,GAAGC,MACnB7G,SAAU0G,EAAEE,OAAO,GAAGC,OAExB,EAAKjD,MAAMkD,SAASjO,I,wFAVpBiM,KAAKlB,MAAMmD,iB,+BAcX,OACE,yBAAK/C,UAAU,UACZc,KAAKlB,MAAMhL,MACV,kBAACoO,GAAA,EAAD,CAAO/C,QAAQ,QACb,yCACCa,KAAKlB,MAAMhL,OAGd,GAEF,sCACA,kBAAC,IAAD,CAAM0M,GAAG,UAAT,4BACA,kBAAC2B,GAAA,EAAD,CAAMC,SAAUpC,KAAK2B,cACnB,kBAACQ,GAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,GAAA,EAAKI,MAAN,kBACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcrO,KAAK,WAAWsO,YAAY,cAE5C,kBAACN,GAAA,EAAKE,MAAN,CAAYC,UAAU,SACpB,kBAACH,GAAA,EAAKI,MAAN,eACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcrO,KAAK,QAAQsO,YAAY,WAEzC,kBAACN,GAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,GAAA,EAAKI,MAAN,kBACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcrO,KAAK,WAAWsO,YAAY,cAE5C,kBAAC,GAAD,CACEtD,QAAQ,OACRhL,KAAK,SACLN,QAASmM,KAAKlB,MAAMjL,QACpBuL,KAAK,KACLuB,QAAQ,IALV,gB,GAzCWS,IAAMC,YA0EZC,oBAlBf,SAAyBrN,GAAQ,IAAD,EACqBA,EAAMsN,KACzD,MAAO,CACL5N,eAH4B,EACtBA,eAGNC,OAJ4B,EACNA,OAItBC,QAL4B,EACEA,QAK9BC,MAN4B,EACWA,UAS3C,SAA4B0N,GAC1B,MAAO,CACLQ,SAAU,gBAAGhH,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,SAApB,OACRsG,ER1CN,SAAoBxG,EAAUC,EAAOC,GACnC,MAAO,CACL/G,KAAMtB,EACNmI,WACAC,QACAC,YQqCWwH,CAAW1H,EAAUC,EAAOC,KACvC+G,aAAc,kBAAMT,EAASzM,UAIlBuM,CAA6CI,IC1EtDiB,I,qNAKJhB,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAM9N,EAAO,CACXkH,MAAO2G,EAAEE,OAAO,GAAGC,MACnB7G,SAAU0G,EAAEE,OAAO,GAAGC,OAExB,EAAKjD,MAAM8D,QAAQ7O,I,wFATnBiM,KAAKlB,MAAMmD,iB,+BAaX,OACE,yBAAK/C,UAAU,SACZc,KAAKlB,MAAMhL,MACV,kBAACoO,GAAA,EAAD,CAAO/C,QAAQ,QACb,yCACCa,KAAKlB,MAAMhL,OAGd,GAEF,qCACA,kBAAC,IAAD,CAAM0M,GAAG,SAAT,4BACA,kBAAC2B,GAAA,EAAD,CAAMC,SAAUpC,KAAK2B,cACnB,kBAACQ,GAAA,EAAKE,MAAN,CAAYC,UAAU,SACpB,kBAACH,GAAA,EAAKI,MAAN,eACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcrO,KAAK,QAAQsO,YAAY,WAEzC,kBAACN,GAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,GAAA,EAAKI,MAAN,kBACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcrO,KAAK,WAAWsO,YAAY,cAE5C,kBAAC,GAAD,CACEtD,QAAQ,OACRhL,KAAK,SACLN,QAASmM,KAAKlB,MAAMjL,QACpBuL,KAAK,KACLuB,QAAQ,IALV,e,GApCUS,IAAMC,YAiEXC,oBAdf,SAAyBrN,GAAQ,IAAD,EAG1BA,EADFsN,KAEF,MAAO,CAAE5N,eAJqB,EAEpBA,eAEeG,MAJK,EAEJA,MAEMD,QAJF,EAEGA,YAKnC,SAA4B2N,GAC1B,MAAO,CACLoB,QAAS,gBAAG3H,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyBsG,ETJtC,SAAmBvG,EAAOC,GACxB,MAAO,CACL/G,KAAMlB,EACNgI,QACAC,YSA2C2H,CAAU5H,EAAOC,KAC5D+G,aAAc,kBAAMT,EAASzM,UAIlBuM,CAA6CqB,IC5C7CG,I,6LAxBX,OACE,yBAAK5D,UAAU,oBACb,yBACEA,UAAS,UACPc,KAAKlB,MAAMnL,eAAiB,QAAU,yBAGxC,6CACEqM,KAAKlB,MAAMnL,eAKX,GAJA,8FAOJ,kBAACoL,GAAA,EAAD,CAAQK,KAAK,KAAKD,QAAQ,OAAOH,QAASgB,KAAKlB,MAAMiE,cAArD,c,GAlBuB3B,IAAMC,YCmCtB2B,I,qNAlCb/O,MAAQ,CACN+C,MAAO,EAAK8H,MAAMmE,UAClBC,iBAAiB,G,EAGnBC,kBAAoB,SAACvB,GACnB,EAAK9B,SAAS,CACZ9I,MAAO4K,EAAEE,OAAOC,MAChBmB,iBAAiB,IAEnB,EAAKpE,MAAMsE,cAAc,QAAQC,KAAKzB,EAAEE,OAAOC,S,wFAI/C/B,KAAKlB,MAAMwE,kBAAkBtD,KAAK/L,MAAM+C,MAAOgJ,KAAK/L,MAAMiP,mB,+BAI1D,OACE,yBAAKhE,UAAU,mBACb,4BAAKc,KAAKlB,MAAMyE,SAChB,kBAACpB,GAAA,EAAKE,MAAN,CAAYC,UAAU,SACpB,kBAACH,GAAA,EAAKK,QAAN,CACET,MAAO/B,KAAK/L,MAAM+C,MAClBwM,SAAUxD,KAAKmD,kBACfhP,KAAK,OACLsO,YAAY,gB,GA3BMrB,IAAMC,Y,sCC+DrBoC,I,qNA3DbxP,MAAQ,CACNyP,YAAa,GACb5P,MAAO,I,EAGT6P,wBAA0B,SAAC/B,GACzB,EAAK9B,SAAS,CAAE4D,YAAa9B,EAAEE,OAAOC,S,EAGxC6B,sBAAwB,WACtB,IAAMrG,EAAU,CACdb,KAAM,EAAKzI,MAAMyP,YACjB1H,GAAI6H,KAAQC,YAEM,QAAQT,KAAK9F,EAAQb,MAEvC,EAAKoD,SAAS,CACZhM,MAAO,oCAGT,EAAKgL,MAAMiF,gBAAgBxG,GAC3B,EAAKuC,SAAS,CACZ4D,YAAa,GACb5P,MAAO,O,0EAMX,OACE,yBAAKoL,UAAU,iBACb,yBAAKA,UAAU,oBACb,8CACCc,KAAK/L,MAAMH,MACV,kBAACoO,GAAA,EAAD,CAAO/C,QAAQ,QACb,yCACCa,KAAK/L,MAAMH,OAGd,GAEF,kBAACqO,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,cACA,kBAACJ,GAAA,EAAKK,QAAN,CACEgB,SAAUxD,KAAK2D,wBACflB,YAAY,OACZV,MAAO/B,KAAK/L,MAAMyP,YAClBvP,KAAK,UAGT,kBAAC4K,GAAA,EAAD,CAAQC,QAASgB,KAAK4D,sBAAuBzE,QAAQ,QAArD,wB,GAnDkBiC,IAAMC,YCuDnB2C,I,qNAvDb/P,MAAQ,CACNyP,YAAa,EAAK5E,MAAMvB,QAAQb,KAChC5I,MAAO,I,EAGT6P,wBAA0B,SAAC/B,GACzB,EAAK9B,SAAS,CAAE4D,YAAa9B,EAAEE,OAAOC,S,EAGxCkC,qBAAuB,WACrB,IAAM1G,EAAU,CACdb,KAAM,EAAKzI,MAAMyP,YACjB1H,GAAI,EAAK8C,MAAMvB,QAAQvB,IAEL,QAAQqH,KAAK9F,EAAQb,MAEvC,EAAKoD,SAAS,CACZhM,MAAO,mCAGT,EAAKgL,MAAMoF,YAAY3G,I,0EAKzB,OACE,yBAAK2B,UAAU,eACb,yBAAKA,UAAU,oBACb,4CACCc,KAAK/L,MAAMH,MACV,kBAACoO,GAAA,EAAD,CAAO/C,QAAQ,QACb,yCACCa,KAAK/L,MAAMH,OAGd,GAEF,kBAACqO,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,cACA,kBAACJ,GAAA,EAAKK,QAAN,CACEgB,SAAUxD,KAAK2D,wBACflB,YAAY,OACZV,MAAO/B,KAAK/L,MAAMyP,YAClBvP,KAAK,UAGT,kBAAC4K,GAAA,EAAD,CAAQC,QAASgB,KAAKiE,qBAAsB9E,QAAQ,QAApD,sB,GA/CgBiC,IAAMC,Y,kBCgDjB8C,I,OAhDO,SAACrF,GAOrB,OACE,yBAAKI,UAAU,iBACb,yBAAKA,UAAU,oBACb,+CACA,kBAACkF,GAAA,EAAD,KACGtF,EAAM5H,SAAS4E,KAAI,SAACyB,EAAS8G,GAC5B,OACE,kBAACC,GAAA,EAAD,CAAMC,IAAKhH,EAAQvB,IACjB,kBAACoI,GAAA,EAAUI,OAAX,CAAkBlF,GAAIgF,KAAKG,OAAQC,SAAUL,GAC1CA,EAAQ,EADX,KACgB9G,EAAQb,MAExB,kBAAC0H,GAAA,EAAUO,SAAX,CAAoBD,SAAUL,GAC5B,kBAACC,GAAA,EAAKM,KAAN,KACE,kBAAC7F,GAAA,EAAD,CACEC,QAAS,WAnBvBY,OAAOC,YAAc,KACvBf,EAAM+F,UAAU,iBAoBE/F,EAAMgG,iBAAiBvH,IAEzB4B,QAAQ,OACR4F,OAAK,GANP,gBAUA,kBAAChG,GAAA,EAAD,CACEC,QAAS,kBAAMF,EAAMkG,cAAczH,EAAQvB,KAC3CmD,QAAQ,SACR4F,OAAK,GAHP,6BC2HLE,I,qNArJbhR,MAAQ,CACNiD,SAAU,EAAK4H,MAAMoG,aACrBC,kBAAmB,GACnBzF,oBAAoB,EACpB0F,iBAAkB,gBAClBC,oBAAoB,G,EAgBtB1F,yBAA2B,WACOC,OAAOC,YAAc,MACnB,EAAK5L,MAAMyL,oBAC3C,EAAKI,SAAS,CAAEJ,mBAAoBE,OAAOC,YAAc,O,EAI7DgF,UAAY,SAACS,GACX,EAAKxF,SAAS,CAAEsF,iBAAkBE,K,EAGpCpB,YAAc,SAAC3G,GACb,IAAMrG,EAAWa,IAAU,EAAK9D,MAAMiD,UAChCuH,EAAgB1G,IAAUwF,GAC1BK,EAAiB1G,EAAS4E,KAAI,SAACyB,GACnC,OAAIA,EAAQvB,KAAOyC,EAAczC,GACxByC,EAEAlB,KAGX,EAAKuC,SAAS,CACZ5I,SAAU0G,EACVyH,oBAAoB,EACpBF,kBAAmB,M,EAIvBI,WAAa,SAAChI,GACZ,IAAMrG,EAAWa,IAAU,EAAK9D,MAAMiD,UACtCA,EAASsO,KAAKjI,GACd,EAAKuC,SAAS,CAAE5I,WAAUmO,oBAAoB,K,EAGhDL,cAAgB,SAACtH,GACf,IACME,EADW7F,IAAU,EAAK9D,MAAMiD,UACNkC,QAC9B,SAACmE,GAAD,OAAaA,EAAQvB,KAAO0B,KAE1B,EAAKzJ,MAAMkR,kBAAkBnJ,KAAO0B,EACtC,EAAKoC,SAAS,CACZ7I,UAAW2G,EACXuH,kBAAmB,GACnBE,oBAAoB,IAGtB,EAAKvF,SAAS,CACZ5I,SAAU0G,EACVyH,oBAAoB,K,EAK1BI,oBAAsB,SAACN,GACrB,EAAKrF,SAAS,CACZqF,uB,qFAnEFvF,OAAOG,iBAAiB,SAAUC,KAAKL,yBAAyBM,KAAKD,OACrEA,KAAKL,6B,6CAILK,KAAKlB,MAAM4G,qBACT1F,KAAK/L,MAAMiD,SACX8I,KAAK/L,MAAMoR,oBAEbzF,OAAOM,oBAAoB,SAAUF,KAAKL,4B,+BA+D1C,IAAIgG,EACF,yBAAKzG,UAAU,0BACb,kBAAC,GAAD,CACE4F,iBAAkB9E,KAAKyF,oBACvBvO,SAAU8I,KAAK/L,MAAMiD,SACrB8N,cAAehF,KAAKgF,gBAErBhF,KAAK/L,MAAMkR,kBAAkBnJ,GAC5B,kBAAC,GAAD,CACEuB,QAASyC,KAAK/L,MAAMkR,kBACpBjB,YAAalE,KAAKkE,YAClBK,IAAKvE,KAAK/L,MAAMkR,kBAAkBnJ,KAGpC,kBAAC,GAAD,CAAe+H,gBAAiB/D,KAAKuF,cAyC3C,OArCI3F,OAAOC,YAAc,MACvB8F,EACE,yBAAKzG,UAAU,gCACb,kBAAC0G,GAAA,EAAD,CACEC,UAAW7F,KAAK/L,MAAMmR,iBACtBU,SAAU9F,KAAK6E,WAEf,kBAACkB,GAAA,EAAD,CACErB,SAAS,gBACT1N,MACEgJ,KAAK/L,MAAMkR,kBAAkBnJ,GACzB,eACA,kBAGLgE,KAAK/L,MAAMkR,kBAAkBnJ,GAC5B,kBAAC,GAAD,CACEuB,QAASyC,KAAK/L,MAAMkR,kBACpBjB,YAAalE,KAAKkE,YAClBK,IAAKvE,KAAK/L,MAAMkR,kBAAkBnJ,KAGpC,kBAAC,GAAD,CAAe+H,gBAAiB/D,KAAKuF,cAGzC,kBAACQ,GAAA,EAAD,CAAKrB,SAAS,WAAW1N,MAAM,mBAC7B,kBAAC,GAAD,CACE8N,iBAAkB9E,KAAKyF,oBACvBvO,SAAU8I,KAAK/L,MAAMiD,SACrB8N,cAAehF,KAAKgF,cACpBH,UAAW7E,KAAK6E,gBAQ1B,yBAAK3F,UAAU,sBACb,4BAAKc,KAAKlB,MAAMyE,SAChB,0IAICoC,O,GAhJwBvE,IAAMC,Y,kBC6ExB2E,I,OA/EqB,SAAClH,GACnC,SAASmH,EAAyBrE,GAChC,IAAMsE,EAAUtE,EAAEE,OAAOqE,aAAa,WAChCC,EAAaxE,EAAEE,OAAOuE,cAAc,SACtCH,EACFpH,EAAMwH,qBAAqBJ,GAE3BpH,EAAMwH,qBAAqBF,EAAWD,aAAa,YAIvD,SAASI,EAAuB3E,GAC9B9C,EAAM0H,mBAAmB5E,EAAEE,OAAOqE,aAAa,WAAYvE,EAAEE,OAAOC,OAGtE,SAAS0E,EAAmB7E,GAC1B9C,EAAM4H,eAAe9E,EAAEE,OAAOqE,aAAa,YAG7C,SAASQ,EAAgB/E,GACvB9C,EAAM8H,YAAYhF,EAAEE,OAAOqE,aAAa,YAG1C,OACE,yBAAKjH,UAAU,+BACb,kBAACiD,GAAA,EAAKI,MAAN,KACGzD,EAAM+H,sBAAwB,OAAS,SAD1C,kBAGA,mHAIC/H,EAAMgI,gBAAgBhL,KAAI,SAACiB,GAAD,OACzB,kBAACgK,GAAA,EAAD,CAAYxC,IAAG,iBAAYxH,EAAIC,WAC7B,kBAAC+J,GAAA,EAAWC,QAAZ,CAAoBhI,QAASiH,GACH,aAAvBnH,EAAMmI,aACL,kBAACF,GAAA,EAAWG,SAAZ,CACEC,SAAwB,IAAfpK,EAAIJ,OACbD,KAAK,SACL0K,UAASrK,EAAIC,SACbwG,SAAUyC,IAGZ,kBAACc,GAAA,EAAWM,MAAZ,CACED,UAASrK,EAAIC,SACbmK,SAAwB,IAAfpK,EAAIJ,OACbD,KAAK,SACL8G,SAAUyC,KAIhB,kBAACqB,GAAA,EAAD,CACEF,UAASrK,EAAIC,SACbwG,SAAU+C,EACVxE,MAAOhF,EAAIL,KACXA,KAAK,WAEP,kBAACqK,GAAA,EAAWQ,OAAZ,KACE,kBAACxI,GAAA,EAAD,CACEI,QAAQ,UACRiI,UAASrK,EAAIC,SACbgC,QAAS2H,GAHX,KAOA,kBAAC5H,GAAA,EAAD,CACEI,QAAQ,SACRiI,UAASrK,EAAIC,SACbgC,QAASyH,GAHX,gBChCGe,I,OApCiB,SAAC1I,GAC/B,SAAS2I,EAAmB7F,GAC1B,IACMjF,EAAmB,SADXiF,EAAEE,OAAOC,MAEvBjD,EAAM4I,eAAe/K,GAGvB,OACE,yBAAKuC,UAAU,2BACb,kBAACiD,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,mCACA,yBAAKrD,UAAU,SACb,kBAACiD,GAAA,EAAKwF,MAAN,CACE5F,MAAM,OACNrF,KAAK,cACLvI,KAAK,QACLyT,QAAM,EACNC,MAAM,OACNV,SAAkC,IAAzBrI,EAAMgJ,eACftE,SAAUiE,IAEZ,kBAACtF,GAAA,EAAKwF,MAAN,CACE5F,MAAM,QACNrF,KAAK,cACLvI,KAAK,QACLyT,QAAM,EACNC,MAAM,QACNV,SAAkC,IAAzBrI,EAAMgJ,eACftE,SAAUiE,SCiSPM,I,qNAtTb9T,MAAQ,CACNgT,aAAc,QACde,aAAc,GACdlU,MAAO,GACPgT,gBAAiB,CACf,CACE9J,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,GAEV,CACEK,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,IAGZmL,eAAgB,I,EAGlBG,yBAA2B,SAACrG,GAC1B,IAAMqF,EAAerF,EAAEE,OAAOC,MACxB+E,EACa,gBAAjBG,EACI,GACA,CACE,CACEjK,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,GAEV,CACEK,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,IAGZmL,EAAkC,gBAAjBb,GAAwC,GAC/D,EAAKnH,SAAS,CAAEmH,eAAcH,kBAAiBgB,oB,EAGjDI,yBAA2B,SAACtG,GAC1B,EAAK9B,SAAS,CAAEkI,aAAcpG,EAAEE,OAAOC,S,EAGzCoG,+BAAiC,SAACnL,EAAUoL,GAC1C,IACMC,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACPhL,KAAI,SAACiB,GAI5C,OAHIA,EAAIC,WAAaA,IACnBD,EAAIL,KAAO0L,GAENrL,KAEHuL,EAAeD,EAClBjP,QAAO,SAAC2D,GAAD,OAAwB,IAAfA,EAAIJ,UACpBb,KAAI,SAACiB,GAAD,OAASA,EAAIC,YACpB,EAAK8C,SAAS,CACZgH,gBAAiBuB,EACjBP,eAAgBQ,K,EAIpBC,8BAAgC,WAC9B,EAAKzI,SAAS,CAAEgI,gBAAiB,EAAK7T,MAAM6T,kB,EAG9CU,2BAA6B,SAACxL,GAC5B,IACMqL,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACPhL,KAAI,SAACiB,GAI5C,OAHIC,IAAaD,EAAIC,WACnBD,EAAIJ,QAAUI,EAAIJ,QAEbI,KAEHuL,EAAeD,EAClBjP,QAAO,SAAC2D,GAAD,OAAwB,IAAfA,EAAIJ,UACpBb,KAAI,SAACiB,GAAD,OAASA,EAAIC,YACpB,EAAK8C,SAAS,CACZgH,gBAAiBuB,EACjBP,eAAgBQ,K,EAIpBG,wBAA0B,SAACzL,GACzB,IACMqL,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACPhL,KAAI,SAACiB,GAM5C,OALIA,EAAIC,WAAaA,EACnBD,EAAIJ,QAAS,EAEbI,EAAIJ,QAAS,EAERI,KAEHuL,EAAeD,EAClBjP,QAAO,SAAC2D,GAAD,OAAwB,IAAfA,EAAIJ,UACpBb,KAAI,SAACiB,GAAD,OAASA,EAAIC,YACpB,EAAK8C,SAAS,CACZgH,gBAAiBuB,EACjBP,eAAgBQ,K,EAIpBI,wBAA0B,SAAC1L,GACzB,IAAM2L,EAAqB5Q,IAAU,EAAK9D,MAAM6S,iBAC1C8B,EAAoB,CACxB5L,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,GAEJkM,EAAcF,EAAmBG,WACrC,SAACC,GAAD,OAAYA,EAAO/L,WAAaA,KAElC2L,EAAmBK,OAAOH,EAAc,EAAG,EAAGD,GAC9C,EAAK9I,SAAS,CACZgH,gBAAiB6B,K,EAIrBM,2BAA6B,SAACjM,GAC5B,IACMqL,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACP1N,QACvC,SAAC2D,GAAD,OAASA,EAAIC,WAAaA,KAE5B,GAAI,EAAK/I,MAAM6S,gBAAgBtI,OAAS,EAAG,CACzC,IAAM8J,EAAeD,EAClBjP,QAAO,SAAC2D,GAAD,OAAwB,IAAfA,EAAIJ,UACpBb,KAAI,SAACiB,GAAD,OAASA,EAAIC,YACpB,EAAK8C,SAAS,CACZgH,gBAAiBuB,EACjBP,eAAgBQ,M,EAKtBY,kCAAoC,SAACtH,GACnCA,EAAEC,iBACF,IAAM9F,EAAW,CACfW,KAAM,EAAKzI,MAAM+T,aACjB7T,KAAM,EAAKF,MAAMgT,aACjBnK,QAAS,EAAK7I,MAAM6S,gBACpBnK,OAAQ,EAAK1I,MAAM6T,eACnB9L,GAAI6H,KAAQC,YAGRqF,EAAc,QAAQ9F,KAAKtH,EAASW,MACpC0M,EAAiBrN,EAASe,QAAQF,MAAK,SAACG,GAAD,MAC3C,QAAQsG,KAAKtG,EAAIL,SAEb2M,EAA8D,IAArC,EAAKpV,MAAM6T,eAAetJ,OAErD2K,EACF,EAAKrJ,SAAS,CACZhM,MAAO,yCAEAsV,EACT,EAAKtJ,SAAS,CACZhM,MAAO,6CAECuV,GAOV,EAAKvK,MAAMwK,iBAAiBvN,GAC5B,EAAK+D,SAAS,CACZkI,aAAc,GACdf,aAAclL,EAAS5H,KACvB2S,gBAAiB,CACf,CACE9J,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,GAEV,CACEK,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,IAGZmL,eAAgB,GAChBhU,MAAO,MAvBT,EAAKgM,SAAS,CACZhM,MAAM,2BAAD,OACyB,aAA5B,EAAKG,MAAMgT,aAA8B,eAAiB,YADvD,2B,EA2BXsC,kCAAoC,SAAC3H,GACnCA,EAAEC,iBACF,IAAM9F,EAAW,CACfW,KAAM,EAAKzI,MAAM+T,aACjB7T,KAAM,EAAKF,MAAMgT,aACjBnK,QAAS,EAAK7I,MAAM6S,gBACpBnK,OAAQ,CAAC,EAAK1I,MAAM6T,eAAe0B,YACnCxN,GAAI6H,KAAQC,YAGRqF,EAAc,QAAQ9F,KAAKtH,EAASW,MACpC+M,EAAuD,mBAA9B,EAAKxV,MAAM6T,eAEtCqB,EACF,EAAKrJ,SAAS,CACZhM,MAAO,yCAEC2V,GAKV,EAAK3K,MAAMwK,iBAAiBvN,GAC5B,EAAK+D,SAAS,CACZkI,aAAc,GACdf,aAAc,cACdH,gBAAiB,GACjBgB,gBAAgB,EAChBhU,MAAO,MAVT,EAAKgM,SAAS,CACZhM,MAAO,sD,EAcb4V,eAAiB,WACf,IAAMC,EACJ,kBAAC,GAAD,CACErD,qBAAsB,EAAKmC,wBAC3B7B,YAAa,EAAK8B,wBAClBhC,eAAgB,EAAKuC,2BACrBhC,aAAc,EAAKhT,MAAMgT,aACzBH,gBAAiB,EAAK7S,MAAM6S,gBAC5BN,mBAAoB,EAAK2B,+BACzBtB,uBAAuB,IAGrB+C,EACJ,kBAAC,GAAD,CACEtD,qBAAsB,EAAKkC,2BAC3B5B,YAAa,EAAK8B,wBAClBhC,eAAgB,EAAKuC,2BACrBzC,mBAAoB,EAAK2B,+BACzBrB,gBAAiB,EAAK7S,MAAM6S,gBAC5BG,aAAc,EAAKhT,MAAMgT,aACzBJ,uBAAuB,IAGrBgD,EACJ,kBAAC,GAAD,CACE/B,eAAgB,EAAK7T,MAAM6T,eAC3BJ,eAAgB,EAAKa,gCAGzB,OAAQ,EAAKtU,MAAMgT,cACjB,IAAK,QACH,OAAO0C,EACT,IAAK,WACH,OAAOC,EACT,QACE,OAAOC,I,0EAKX,OACE,yBAAK3K,UAAU,kBACb,yBAAKA,UAAU,oBACb,gDACCc,KAAK/L,MAAMH,MACV,kBAACoO,GAAA,EAAD,CAAO/C,QAAQ,QACb,yCACCa,KAAK/L,MAAMH,OAGd,GAEF,kBAACqO,GAAA,EAAD,CACEC,SAC8B,gBAA5BpC,KAAK/L,MAAMgT,aACPjH,KAAKuJ,kCACLvJ,KAAKkJ,mCAGX,kBAAC/G,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,cACA,kBAACJ,GAAA,EAAKK,QAAN,CACEgB,SAAUxD,KAAKkI,yBACfzF,YAAY,OACZV,MAAO/B,KAAK/L,MAAM+T,aAClB7T,KAAK,UAGT,kBAACgO,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,qCACA,kBAACJ,GAAA,EAAKK,QAAN,CACET,MAAO/B,KAAK/L,MAAMgT,aAClBzD,SAAUxD,KAAKiI,yBACf3I,GAAG,UAEH,4BAAQyC,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,eAAd,mBAGH/B,KAAK0J,iBACN,kBAAC3K,GAAA,EAAD,CAAQI,QAAQ,OAAOhL,KAAK,UAA5B,0B,GA7SiBiN,IAAMC,YC8QpByI,I,qNA7Qb7V,MAAQ,CACNgT,aAAc,EAAKnI,MAAM/C,SAAS5H,KAClC6T,aAAc,EAAKlJ,MAAM/C,SAASW,KAClCoK,gBAAiB,EAAKhI,MAAM/C,SAASe,QACrCgL,eAC+B,gBAA7B,EAAKhJ,MAAM/C,SAAS5H,KACkB,SAAlC,EAAK2K,MAAM/C,SAASY,OAAO,GAC3B,EAAKmC,MAAM/C,SAASY,OAC1B7I,MAAO,I,EAGTmU,yBAA2B,SAACrG,GAC1B,IAAMqF,EAAerF,EAAEE,OAAOC,MACxB+E,EACa,gBAAjBG,EACI,GACA,CACE,CACEjK,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,GAEV,CACEK,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,IAGZmL,EAAkC,gBAAjBb,GAAwC,GAC/D,EAAKnH,SAAS,CAAEmH,eAAcH,kBAAiBgB,oB,EAGjDI,yBAA2B,SAACtG,GAC1B,EAAK9B,SAAS,CAAEkI,aAAcpG,EAAEE,OAAOC,S,EAGzCoG,+BAAiC,SAACnL,EAAUoL,GAC1C,IACMC,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACPhL,KAAI,SAACiB,GAI5C,OAHIA,EAAIC,WAAaA,IACnBD,EAAIL,KAAO0L,GAENrL,KAET,EAAK+C,SAAS,CACZgH,gBAAiBuB,K,EAIrBK,wBAA0B,SAAC1L,GACzB,IAAM2L,EAAqB5Q,IAAU,EAAK9D,MAAM6S,iBAC1C8B,EAAoB,CACxB5L,SAAU6G,KAAQC,WAClBpH,KAAM,GACNC,QAAQ,GAEJkM,EAAcF,EAAmBG,WACrC,SAAC/L,GAAD,OAASA,EAAIC,WAAaA,KAE5B2L,EAAmBK,OAAOH,EAAc,EAAG,EAAGD,GAC9C,EAAK9I,SAAS,CACZgH,gBAAiB6B,K,EAIrBM,2BAA6B,SAACjM,GAC5B,IACMqL,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACP1N,QACvC,SAAC2D,GAAD,OAASA,EAAIC,WAAaA,KAExB,EAAK/I,MAAM6S,gBAAgBtI,OAAS,GACtC,EAAKsB,SAAS,CACZgH,gBAAiBuB,K,EAKvBE,8BAAgC,WAC9B,EAAKzI,SAAS,CAAEgI,gBAAiB,EAAK7T,MAAM6T,kB,EAG9CU,2BAA6B,SAACxL,GAC5B,IACMqL,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACPhL,KAAI,SAACiB,GAI5C,OAHIC,IAAaD,EAAIC,WACnBD,EAAIJ,QAAUI,EAAIJ,QAEbI,KAEHuL,EAAeD,EAClBjP,QAAO,SAAC2D,GAAD,OAAwB,IAAfA,EAAIJ,UACpBb,KAAI,SAACiB,GAAD,OAASA,EAAIC,YACpB,EAAK8C,SAAS,CACZgH,gBAAiBuB,EACjBP,eAAgBQ,K,EAIpBG,wBAA0B,SAACzL,GACzB,IACMqL,EADqBtQ,IAAU,EAAK9D,MAAM6S,iBACPhL,KAAI,SAACiB,GAM5C,OALIA,EAAIC,WAAaA,EACnBD,EAAIJ,QAAS,EAEbI,EAAIJ,QAAS,EAERI,KAEHuL,EAAeD,EAClBjP,QAAO,SAAC2D,GAAD,OAAwB,IAAfA,EAAIJ,UACpBb,KAAI,SAACiB,GAAD,OAASA,EAAIC,YACpB,EAAK8C,SAAS,CACZgH,gBAAiBuB,EACjBP,eAAgBQ,K,EAIpByB,oCAAsC,SAACnI,GACrCA,EAAEC,iBACF,IAAM9F,EAAW,CACfC,GAAI,EAAK8C,MAAM/C,SAASC,GACxBU,KAAM,EAAKzI,MAAM+T,aACjB7T,KAAM,EAAKF,MAAMgT,aACjBnK,QAAS,EAAK7I,MAAM6S,gBACpBnK,OAAQ,EAAK1I,MAAM6T,gBAGfqB,EAAc,QAAQ9F,KAAKtH,EAASW,MACpC0M,EAAiBrN,EAASe,QAAQF,MAAK,SAACG,GAC5C,MAAO,QAAQsG,KAAKtG,EAAIL,SAEpB2M,EAAoD,IAA3BtN,EAASY,OAAO6B,OAE3C2K,EACF,EAAKrJ,SAAS,CACZhM,MAAO,yCAEAsV,EACT,EAAKtJ,SAAS,CACZhM,MAAO,6CAECuV,EAOV,EAAKvK,MAAMkL,aAAajO,GANxB,EAAK+D,SAAS,CACZhM,MAAM,2BAAD,OACe,aAAlBiI,EAAS5H,KAAsB,eAAiB,YAD7C,2B,EASX8V,oCAAsC,SAACrI,GACrCA,EAAEC,iBACF,IAAM9F,EAAW,CACfC,GAAI,EAAK8C,MAAM/C,SAASC,GACxBU,KAAM,EAAKzI,MAAM+T,aACjB7T,KAAM,EAAKF,MAAMgT,aACjBnK,QAAS,GACTH,OAAQ,CAAC,EAAK1I,MAAM6T,eAAe0B,aAG/BL,EAAc,QAAQ9F,KAAKtH,EAASW,MACpC+M,EAAuD,mBAA9B,EAAKxV,MAAM6T,eAEtCqB,EACF,EAAKrJ,SAAS,CACZhM,MAAO,yCAEC2V,EAKV,EAAK3K,MAAMkL,aAAajO,GAJxB,EAAK+D,SAAS,CACZhM,MAAO,sD,EAOb4V,eAAiB,WACf,IAAMC,EACJ,kBAAC,GAAD,CACErD,qBAAsB,EAAKmC,wBAC3B7B,YAAa,EAAK8B,wBAClBhC,eAAgB,EAAKuC,2BACrBhC,aAAc,EAAKhT,MAAMgT,aACzBH,gBAAiB,EAAK7S,MAAM6S,gBAC5BN,mBAAoB,EAAK2B,+BACzBtB,uBAAuB,IAGrB+C,EACJ,kBAAC,GAAD,CACEtD,qBAAsB,EAAKkC,2BAC3B5B,YAAa,EAAK8B,wBAClBhC,eAAgB,EAAKuC,2BACrBzC,mBAAoB,EAAK2B,+BACzBrB,gBAAiB,EAAK7S,MAAM6S,gBAC5BG,aAAc,EAAKhT,MAAMgT,aACzBJ,uBAAuB,IAGrBgD,EACJ,kBAAC,GAAD,CACE/B,eAAgB,EAAK7T,MAAM6T,eAC3BJ,eAAgB,EAAKa,gCAGzB,OAAQ,EAAKtU,MAAMgT,cACjB,IAAK,QACH,OAAO0C,EACT,IAAK,WACH,OAAOC,EACT,QACE,OAAOC,I,0EAKX,OACE,yBAAK3K,UAAU,gBACb,yBAAKA,UAAU,oBACb,8CACCc,KAAK/L,MAAMH,MACV,kBAACoO,GAAA,EAAD,CAAO/C,QAAQ,QACb,yCACCa,KAAK/L,MAAMH,OAGd,GAEF,kBAACqO,GAAA,EAAD,CACEC,SAC8B,gBAA5BpC,KAAK/L,MAAMgT,aACPjH,KAAKiK,oCACLjK,KAAK+J,qCAGX,kBAAC5H,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,cACA,kBAACJ,GAAA,EAAKK,QAAN,CACEgB,SAAUxD,KAAKkI,yBACfzF,YAAY,OACZtO,KAAK,OACL4N,MAAO/B,KAAK/L,MAAM+T,gBAGtB,kBAAC7F,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,qCACA,kBAACJ,GAAA,EAAKK,QAAN,CACET,MAAO/B,KAAK/L,MAAMgT,aAClBzD,SAAUxD,KAAKiI,yBACf3I,GAAG,UAEH,4BAAQyC,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,eAAd,mBAGH/B,KAAK0J,iBACN,kBAAC3K,GAAA,EAAD,CAAQI,QAAQ,OAAOhL,KAAK,UAA5B,wB,GApQeiN,IAAMC,YCkDlB6I,I,OAxDU,SAACpL,GAAW,IAAD,EACMA,EAAM/C,SAAtC5H,EAD0B,EAC1BA,KAAMuI,EADoB,EACpBA,KAAMC,EADc,EACdA,OAAQG,EADM,EACNA,QACxBf,EACO,gBAAT5H,EACE,oCACE,kBAACgO,GAAA,EAAKI,MAAN,KACGzD,EAAMuF,MAAN,UAAiBvF,EAAMuF,MAAvB,MAAmC,GACnC3H,GAEH,yBAAKwC,UAAU,sBACb,kBAACiD,GAAA,EAAKwF,MAAN,CACEwC,UAAQ,EACRhD,QAAuB,SAAdxK,EAAO,GAChBiL,QAAM,EACNzT,KAAK,QACL0T,MAAM,SAER,kBAAC1F,GAAA,EAAKwF,MAAN,CACEwC,UAAQ,EACRvC,QAAM,EACNT,QAAuB,UAAdxK,EAAO,GAChBxI,KAAK,QACL0T,MAAM,YAKZ,oCACE,kBAAC1F,GAAA,EAAKI,MAAN,KACGzD,EAAMuF,MAAN,UAAiBvF,EAAMuF,MAAvB,MAAmC,GACnC3H,GAEH,yBAAKwC,UAAU,mBACZpC,EAAQhB,KAAI,SAACiB,GAAD,OACX,kBAACoF,GAAA,EAAKwF,MAAN,CACEwC,UAAQ,EACRhD,SAAwB,IAAfpK,EAAIJ,OACb4H,IAAKxH,EAAIC,SACT7I,KAAMA,EACN0T,MAAO9K,EAAIL,YAMvB,OACE,yBACEwC,UAAS,2BACiB,gBAAxBJ,EAAM/C,SAAS5H,KAAyB,cAAgB,cADjD,aAIR4H,KCpBQqO,I,OA5BM,SAACtL,GAAW,IAE7B4F,EAEE5F,EAFF4F,SACYhI,EACVoC,EADF/C,SAAYW,KAGd,OACE,yBAAKwC,UAAU,gBACb,kBAACoF,GAAA,EAAD,KACE,kBAACF,GAAA,EAAUI,OAAX,CAAkBlF,GAAIgF,KAAKG,OAAQC,SAAUA,GAC1CA,EAAW,EADd,KACmBhI,GAEnB,kBAAC0H,GAAA,EAAUO,SAAX,CAAoBD,SAAUA,GAC5B,kBAACJ,GAAA,EAAKM,KAAN,KACE,kBAAC,GAAD,CAAkB7I,SAAU+C,EAAM/C,WAClC,kBAACgD,GAAA,EAAD,CAAQC,QAASF,EAAMkL,aAAc7K,QAAQ,OAAO4F,OAAK,GAAzD,iBAGA,kBAAChG,GAAA,EAAD,CAAQC,QAASF,EAAMuL,eAAgBlL,QAAQ,SAAS4F,OAAK,GAA7D,yBCeGuF,I,OAlCQ,SAACxL,GAOtB,OACE,yBAAKI,UAAU,kBACb,yBAAKA,UAAU,oBACb,gDACA,kBAACkF,GAAA,EAAD,KACGtF,EAAM7H,UAAU6E,KAAI,SAACC,EAAUsI,GAC9B,OACE,kBAAC,GAAD,CACEE,IAAKV,KAAQC,WACbY,SAAUL,EACVtI,SAAUA,EACViO,aAAc,WAhBtBpK,OAAOC,YAAc,KACvBf,EAAM+F,UAAU,kBAiBJ/F,EAAMyL,kBAAkBxO,IAE1BsO,eAAgB,WACdvL,EAAMuL,eAAetO,EAASC,eCgIjCwO,I,qNAnJbvW,MAAQ,CACNgD,UAAW,EAAK6H,MAAM2L,cACtBC,mBAAoB,GACpBhL,oBAAoB,EACpB0F,iBAAkB,iBAClBuF,qBAAqB,G,EAgBvBhL,yBAA2B,WACOC,OAAOC,YAAc,MACnB,EAAK5L,MAAMyL,oBAC3C,EAAKI,SAAS,CAAEJ,mBAAoBE,OAAOC,YAAc,O,EAI7DgF,UAAY,SAACS,GACX,EAAKxF,SAAS,CAAEsF,iBAAkBE,K,EAGpCsF,qBAAuB,SAACF,GACtB,EAAK5K,SAAS,CACZ4K,wB,EAIJV,aAAe,SAACjO,GACd,IAAM9E,EAAYc,IAAU,EAAK9D,MAAMgD,WACjC4T,EAAiB9S,IAAUgE,GAC3BO,EAAkBrF,EAAU6E,KAAI,SAACC,GACrC,OAAIA,EAASC,KAAO6O,EAAe7O,GAC1B6O,EAEA9O,KAGX,EAAK+D,SAAS,CACZ7I,UAAWqF,EACXoO,mBAAoB,GACpBC,qBAAqB,K,EAIzBG,YAAc,SAAC/O,GACb,IAAM9E,EAAYc,IAAU,EAAK9D,MAAMgD,WACvCA,EAAUuO,KAAKzJ,GACf,EAAK+D,SAAS,CACZ7I,YACA0T,qBAAqB,K,EAIzBN,eAAiB,SAAClO,GAChB,IACMG,EADYvE,IAAU,EAAK9D,MAAMgD,WACLmC,QAChC,SAAC2C,GAAD,OAAcA,EAASC,KAAOG,KAE5B,EAAKlI,MAAMyW,mBAAmB1O,KAAOG,EACvC,EAAK2D,SAAS,CACZ7I,UAAWqF,EACXoO,mBAAoB,KAGtB,EAAK5K,SAAS,CACZ7I,UAAWqF,EACXqO,qBAAqB,K,qFApEzB/K,OAAOG,iBAAiB,SAAUC,KAAKL,yBAAyBM,KAAKD,OACrEA,KAAKL,6B,6CAILK,KAAKlB,MAAMiM,sBACT/K,KAAK/L,MAAMgD,UACX+I,KAAK/L,MAAM0W,qBAEb/K,OAAOM,oBAAoB,SAAUF,KAAKL,4B,+BAiE1C,IAAIqL,EACF,yBAAK9L,UAAU,2BACb,kBAAC,GAAD,CACEqL,kBAAmBvK,KAAK4K,qBACxB3T,UAAW+I,KAAK/L,MAAMgD,UACtBoT,eAAgBrK,KAAKqK,iBAEtBrK,KAAK/L,MAAMyW,mBAAmB1O,GAC7B,kBAAC,GAAD,CACED,SAAUiE,KAAK/L,MAAMyW,mBACrBV,aAAchK,KAAKgK,aACnBzF,IAAKvE,KAAK/L,MAAMyW,mBAAmB1O,KAGrC,kBAAC,GAAD,CAAgBsN,iBAAkBtJ,KAAK8K,eAyC7C,OArCI9K,KAAK/L,MAAMyL,qBACbsL,EACE,yBAAK9L,UAAU,iCACb,kBAAC0G,GAAA,EAAD,CACEC,UAAW7F,KAAK/L,MAAMmR,iBACtBU,SAAU9F,KAAK6E,WAEf,kBAACkB,GAAA,EAAD,CACErB,SAAS,iBACT1N,MACEgJ,KAAK/L,MAAMyW,mBAAmB1O,GAC1B,gBACA,mBAGLgE,KAAK/L,MAAMyW,mBAAmB1O,GAC7B,kBAAC,GAAD,CACED,SAAUiE,KAAK/L,MAAMyW,mBACrBV,aAAchK,KAAKgK,aACnBzF,IAAKvE,KAAK/L,MAAMyW,mBAAmB1O,KAGrC,kBAAC,GAAD,CAAgBsN,iBAAkBtJ,KAAK8K,eAG3C,kBAAC/E,GAAA,EAAD,CAAKrB,SAAS,YAAY1N,MAAM,oBAC9B,kBAAC,GAAD,CACEuT,kBAAmBvK,KAAK4K,qBACxB3T,UAAW+I,KAAK/L,MAAMgD,UACtBoT,eAAgBrK,KAAKqK,eACrBxF,UAAW7E,KAAK6E,gBAQ1B,yBAAK3F,UAAU,uBACb,4BAAKc,KAAKlB,MAAMyE,SACfyH,O,GA9IyB5J,IAAMC,Y,kBCmEzB4J,I,OA/Da,SAACnM,GAC3B,IAAIoM,EAA2B,4BAC3BC,EACF,kBAACpM,GAAA,EAAD,CACEG,UAAU,UACVE,KAAK,KACLD,QAAQ,OACRH,QAASF,EAAMsM,gBACfC,SAAUvM,EAAMwM,gBALlB,QAOO,kBAAC,KAAD,CAAiBC,KAAMC,QAGhC,OAAQ1M,EAAM9G,UACZ,IAAK,QACHkT,EAA2B,0BAC3B,MACF,IAAK,SACHA,EAA2B,2BAC3BC,EAAarM,EAAMnL,eACjB,kBAAC,GAAD,CACEgN,QAAQ,YACRvB,KAAK,KACLD,QAAQ,OACRhL,KAAK,SACL8K,YAAaH,EAAM2M,eACnB5X,QAASiL,EAAMjL,SANjB,QAQO,kBAAC,KAAD,CAAiB0X,KAAMG,QAG9B,kBAAC,IAAD,CAAMlL,GAAG,SACP,kBAACzB,GAAA,EAAD,CAAQG,UAAU,YAAYE,KAAK,KAAKD,QAAQ,QAAhD,QACO,kBAAC,KAAD,CAAiBoM,KAAMG,SAOtC,OACE,yBAAKxM,UAAS,8BAAyBgM,IACrC,kBAACnM,GAAA,EAAD,CACEG,UAAU,UACVE,KAAK,KACLJ,QAASF,EAAM6M,iBACfxM,QAAQ,QAER,kBAAC,KAAD,CAAiBoM,KAAMK,OANzB,SAQA,kBAAC7M,GAAA,EAAD,CACEG,UAAU,WACVE,KAAK,KACLJ,QAASF,EAAM+M,cACf1M,QAAQ,QAER,kBAAC,KAAD,CAAiBoM,KAAMO,QAExBX,KCCQY,I,OAnEW,SAACjN,GACzB,IAAMkN,EAA0D,IAAhClN,EAAMnG,KAAK1B,UAAUuH,OAC/CyN,EAAwD,IAA/BnN,EAAMnG,KAAKzB,SAASsH,OAS/C0N,EAAkB,GAQtB,OAPIF,GAA2BC,EAC7BC,EAAkB,wBACTF,EACTE,EAAkB,cACTD,IACTC,EAAkB,cAGlB,yBAAKhN,UAAU,oBACb,8CACCgN,EACC,kBAAChK,GAAA,EAAD,CAAO/C,QAAQ,QApBD,CAClBgN,WACE,8IACFC,YACE,+IACFC,sBACE,yKAcuCH,IAErC,GAEF,2BAAIpN,EAAMwN,MACV,yBAAKpN,UAAU,eACb,yBAAKA,UAAU,oBACb,4BAAKJ,EAAMnG,KAAK3B,OACfgV,EACC,+DAEA,GAEDlN,EAAMnG,KAAK1B,UAAU6E,KAAI,SAACC,EAAUsI,GACnC,OACE,kBAAC,GAAD,CACEE,IAAKxI,EAASC,GACdqI,MAAOA,EAAQ,EACftI,SAAUA,OAIhB,6BACA,uBAAGmD,UAAU,oBAAb,gBACA,wBACEA,UAAS,uBACP+M,EAAyB,iBAAmB,KAG7CA,EACC,8DAEA,GAEDnN,EAAMnG,KAAKzB,SAAS4E,KAAI,SAACyB,GACxB,OAAO,wBAAIgH,IAAKhH,EAAQvB,IAAKuB,EAAQb,eC5C7C6P,I,qNACJtY,MAAQ,CACNqX,eAAgB,QAAQjI,KAAK,EAAKvE,MAAMnG,KAAK3B,Q,EAG/CwV,qBAAuB,SAAClB,GACtB,EAAKxL,SAAS,CAAEwL,oB,EAGlBmB,iBAAmB,WACjB,OAAQ,EAAK3N,MAAM9G,UACjB,IAAK,QACH,EAAK8G,MAAM7G,qBAAqB,SAChC,MACF,IAAK,QACH,EAAK6G,MAAM7G,qBAAqB,aAChC,MACF,IAAK,YACH,EAAK6G,MAAM7G,qBAAqB,YAChC,MACF,IAAK,WACH,EAAK6G,MAAM7G,qBAAqB,UAChC,MACF,QACE,S,EAINyU,kBAAoB,WAClB,OAAQ,EAAK5N,MAAM9G,UACjB,IAAK,YACH,EAAK8G,MAAM7G,qBAAqB,SAChC,MACF,IAAK,WACH,EAAK6G,MAAM7G,qBAAqB,aAChC,MACF,IAAK,SACH,EAAK6G,MAAM7G,qBAAqB,c,EAMtC0U,WAAa,WACX,IAAMxO,EAAcpG,IAAU,EAAK+G,MAAMnG,MACzCwF,EAAYlH,UAAU6E,KAAI,SAACC,GAIzB,MAHsB,gBAAlBA,EAAS5H,OACX4H,EAAS5H,KAAO,cAEX4H,KAET,EAAK+C,MAAM6N,WAAWxO,I,0EAGd,IAAD,SACgC6B,KAAKlB,MAAMnG,KAA1C3B,EADD,EACCA,MAAOC,EADR,EACQA,UAAWC,EADnB,EACmBA,SACtB0V,EACF,kBAAC,GAAD,CACEjZ,eAAgBqM,KAAKlB,MAAMnL,eAC3BoP,aAAc/C,KAAKyM,mBAGvB,OAAQzM,KAAKlB,MAAM9G,UACjB,IAAK,QACH4U,EACE,kBAAC,GAAD,CACE3J,UAAWjM,EACXsM,kBAAmB,SAACtM,GAAD,OAAW,EAAK8H,MAAM3G,gBAAgBnB,IACzDoM,cAAepD,KAAKwM,qBACpBjJ,QAAQ,+BAGZ,MACF,IAAK,YACHqJ,EACE,kBAAC,GAAD,CACEnC,cAAexT,EACf8T,sBAAuB,SAAC9T,GAAD,OACrB,EAAK6H,MAAM1G,oBAAoBnB,IAEjCsM,QAAQ,mCAGZ,MACF,IAAK,WACHqJ,EACE,kBAAC,GAAD,CACE1H,aAAchO,EACdwO,qBAAsB,SAACxO,GAAD,OACpB,EAAK4H,MAAMzG,mBAAmBnB,IAEhCqM,QAAQ,8BAGZ,MACF,IAAK,SACHqJ,EACE,kBAAC,GAAD,CACEjU,KAAMqH,KAAKlB,MAAMnG,KACjB2T,KAAK,8BAGT,MACF,QACEM,EACE,kBAAC,GAAD,CACEjZ,eAAgBqM,KAAKlB,MAAMnL,eAC3BoP,aAAc/C,KAAKyM,mBAI3B,OACE,yBAAKvN,UAAU,eACZ0N,EACwB,UAAxB5M,KAAKlB,MAAM9G,SACV,kBAAC,GAAD,CACEA,SAAUgI,KAAKlB,MAAM9G,SACrBoT,gBAAiBpL,KAAKyM,iBACtBd,iBAAkB3L,KAAK0M,kBACvBb,cAAe,kBAAM,EAAK/M,MAAM5G,mBAChCoT,eAAgBtL,KAAK/L,MAAMqX,eAC3BG,eAAgBzL,KAAK2M,WACrBhZ,eAAgBqM,KAAKlB,MAAMnL,eAC3BE,QAASmM,KAAKlB,MAAMjL,UAGtB,Q,GA9HgBuN,IAAMC,YA8JjBC,oBAzBf,SAAyBrN,GAAQ,IAErBN,EAENM,EAFFsN,KAAQ5N,eAFoB,EAI1BM,EADF0E,KAAQ5B,EAHoB,EAGpBA,iBAEV,MAAO,CACLpD,iBACAqE,SAP4B,EAGFX,4BAK1BsB,KAAM5B,EACNlD,QAT4B,EAG2B0D,sBAU3D,SAA4BiK,GAC1B,MAAO,CACLvJ,qBAAsB,SAAC4U,GAAD,OAAUrL,EzBpI3B,CACLrN,KAAMa,EACNgD,SyBkI8D6U,KAC9D3U,gBAAiB,kBAAMsJ,EzB9HlB,CACLrN,KAAMc,KyB8HNkD,gBAAiB,SAACnB,GAAD,OAAWwK,EzB1HhC,SAAyBxK,GACvB,MAAO,CACL7C,KAAMe,EACN8B,SyBuHqCmB,CAAgBnB,KACrDoB,oBAAqB,SAACnB,GAAD,OACnBuK,EzBrHN,SAA6BvK,GAC3B,MAAO,CACL9C,KAAMgB,EACN8B,ayBkHWmB,CAAoBnB,KAC/BoB,mBAAoB,SAACnB,GAAD,OAAcsK,EzB/GtC,SAA4BtK,GAC1B,MAAO,CACL/C,KAAMiB,EACN8B,YyB4G2CmB,CAAmBnB,KAC9DyV,WAAY,SAAChU,GAAD,OAAU6I,EzBzG1B,SAAoB7I,GAClB,MAAO,CACLxE,KAAMkB,EACNsD,QyBsG+BgU,CAAWhU,QAI/B2I,CAA6CiL,ICxKtDO,I,qNACJ7Y,MAAQ,CACNuF,aAAc,I,EAOhBuT,iBAAmB,SAACnL,GAClB,IAAMpI,EAAe,EAAKsF,MAAMlH,UAAU4E,MACxC,SAAC7D,GAAD,OAAUA,EAAKU,MAAQuI,EAAEE,OAAOC,SAElC,EAAKjC,SAAS,CAAEtG,kB,EAGlBwT,oBAAsB,WACpB,IAAMxT,EAAe,EAAKvF,MAAMuF,aAAaH,IACzC,EAAKpF,MAAMuF,aACXzB,IAAU,EAAK+G,MAAMlH,WAAWqV,MAAK,SAACC,EAAOC,GAAR,OACnCD,EAAMlW,MAAQmW,EAAMnW,MAAQ,GAAK,KACjC,GACN,EAAK8H,MAAMsO,WAAW5T,GACtB,EAAKsF,MAAMiE,aAAa,U,qFAjBxB/C,KAAKlB,MAAM5E,iB,+BAqBX,IAAMmT,EAAkBtV,IACtBiI,KAAKlB,MAAMlH,WACXqV,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMlW,MAAQmW,EAAMnW,MAAQ,GAAK,KAC3D,OACE,yBAAKkI,UAAU,kBACb,yBAAKA,UAAU,MAAf,eACCc,KAAKlB,MAAMjL,QACV,yBAAKqL,UAAU,WACb,kBAACG,GAAA,EAAD,CAASE,UAAU,SAASJ,QAAQ,QAClC,0BAAMD,UAAU,WAAhB,gBAGFc,KAAKlB,MAAMlH,UAAU4G,OAAS,EAChC,oCACE,kBAAC2D,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,+BACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcgB,SAAUxD,KAAK+M,iBAAkBzN,GAAG,UAC/C+N,EAAgBvR,KAAI,SAACnD,GAAD,OACnB,4BAAQoJ,MAAOpJ,EAAKU,IAAKkL,IAAK5L,EAAKU,KAChCV,EAAK3B,YAKd,kBAAC+H,GAAA,EAAD,CAAQC,QAASgB,KAAKgN,oBAAqB5N,KAAK,KAAKD,QAAQ,QAA7D,UAKF,4DACiC,IAC/B,uBAAGmO,KAAK,gBAAR,wB,GA1DiBlM,IAAMC,YAkFpBC,oBAhBf,SAAyBrN,GAAQ,IAAD,EAG1BA,EADF0E,KAEF,MAAO,CACLf,UAL4B,EAEpBA,UAIR/D,QAN4B,EAET4D,wBAQvB,SAA4B+J,GAC1B,MAAO,CACLtH,aAAc,kBAAMsH,EAAStH,UAIlBoH,CAA6CwL,ICU7CS,I,OAzFW,SAACzO,GACzB,IAAI0O,EAAyB,2BACzBC,EACF,oCACE,kBAAC1O,GAAA,EAAD,CACEG,UAAU,WACVE,KAAK,KACLJ,QAASF,EAAM+M,cACf1M,QAAQ,QAER,sDACA,kBAAC,KAAD,CAAiBoM,KAAMO,QAEzB,kBAAC,GAAD,CACEnL,QAAQ,YACRvB,KAAK,KACLD,QAAQ,OACRhL,KAAK,SACL8K,YAAaH,EAAM4O,mBACnB7Z,QAASiL,EAAMjL,SAEf,oDACA,kBAAC,KAAD,CAAiB0X,KAAMG,SAIzBiC,EACF,kBAAC5O,GAAA,EAAD,CACEG,UAAU,UACVE,KAAK,KACLD,QAAQ,OACRH,QAASF,EAAMsM,gBACfC,SAAUvM,EAAMwM,gBAEhB,uCACA,kBAAC,KAAD,CAAiBC,KAAMC,QAI3B,OAAQ1M,EAAM9G,UACZ,IAAK,QACHwV,EAAyB,yBACzB,MACF,IAAK,SACHA,EAAyB,0BACzBC,EACE,kBAAC1O,GAAA,EAAD,CACEG,UAAU,WACVE,KAAK,KACLJ,QAASF,EAAM+M,cACf1M,QAAQ,QAER,sDACA,kBAAC,KAAD,CAAiBoM,KAAMO,QAG3B6B,EACE,kBAAC,GAAD,CACEhN,QAAQ,YACRvB,KAAK,KACLD,QAAQ,OACRhL,KAAK,SACL8K,YAAaH,EAAM2M,eACnB5X,QAASiL,EAAMjL,SAEf,oDACA,kBAAC,KAAD,CAAiB0X,KAAMG,QAM/B,OACE,yBAAKxM,UAAS,4BAAuBsO,IACnC,kBAACzO,GAAA,EAAD,CACEG,UAAU,UACVE,KAAK,KACLJ,QAASF,EAAM6M,iBACfxM,QAAQ,QAER,kBAAC,KAAD,CAAiBoM,KAAMK,OACvB,wCAED6B,EACAE,KC5EDC,I,qNACJ3Z,MAAQ,CACNqX,eAAgB,QAAQjI,KAAK,EAAKvE,MAAMnG,KAAK3B,Q,EAG/CwV,qBAAuB,SAAClB,GACtB,EAAKxL,SAAS,CAAEwL,oB,EAGlBmB,iBAAmB,WACjB,OAAQ,EAAK3N,MAAM9G,UACjB,IAAK,QACH,EAAK8G,MAAMnF,mBAAmB,SAC9B,MACF,IAAK,QACH,EAAKmF,MAAMnF,mBAAmB,aAC9B,MACF,IAAK,YACH,EAAKmF,MAAMnF,mBAAmB,YAC9B,MACF,IAAK,WACH,EAAKmF,MAAMnF,mBAAmB,UAC9B,MACF,QACE,S,EAIN+S,kBAAoB,WAClB,OAAQ,EAAK5N,MAAM9G,UACjB,IAAK,YACH,EAAK8G,MAAMnF,mBAAmB,SAC9B,MACF,IAAK,WACH,EAAKmF,MAAMnF,mBAAmB,aAC9B,MACF,IAAK,SACH,EAAKmF,MAAMnF,mBAAmB,c,EAMpCyT,WAAa,SAACzU,GACZ,IAAIa,EAAezB,IAAUY,GAC7Ba,EAAavC,UAAYuC,EAAavC,UAAU6E,KAAI,SAACC,GAYnD,OAXAA,EAASC,GAAKD,EAAS1C,IAED,eAAlB0C,EAAS5H,OACX4H,EAAS5H,KAAO,eAGlB4H,EAASe,QAAUf,EAASe,QAAQhB,KAAI,SAACiB,GAEvC,OADAA,EAAIJ,OAASZ,EAASY,OAAOC,MAAK,SAACiR,GAAD,OAAWA,IAAU9Q,EAAIC,YACpDD,KAGFhB,KAGTvC,EAAatC,SAAWsC,EAAatC,SAAS4E,KAAI,SAACyB,GAEjD,OADAA,EAAQvB,GAAKuB,EAAQlE,IACdkE,KAGT,EAAKuB,MAAMrF,mBAAmBD,I,EAGhCsU,YAAc,SAAC9W,EAAOkM,GAChBA,GACF,EAAKpE,MAAMlF,cAAc5C,I,EAI7B+W,gBAAkB,SAAC9W,EAAW0T,GACxBA,GACF,EAAK7L,MAAMjF,kBAAkB5C,I,EAIjC+W,eAAiB,SAAC9W,EAAUmO,GACtBA,GACF,EAAKvG,MAAMhF,iBAAiB5C,I,EAIhC+W,SAAW,WACT,EAAKnP,MAAMoP,SAAS,EAAKpP,MAAMnG,KAAM,EAAKmG,MAAM1H,uB,0EAGxC,IAAD,SACgC4I,KAAKlB,MAApC1H,EADD,EACCA,qBAAsBuB,EADvB,EACuBA,KACxB3B,EACkC,IAAtCI,EAAqBJ,MAAMwH,OACvB7F,EAAK3B,MACLI,EAAqBJ,MACrBC,EACsC,IAA1CG,EAAqBH,UAAUuH,OAC3B7F,EAAK1B,UACLG,EAAqBH,UACrBC,EACqC,IAAzCE,EAAqBF,SAASsH,OAC1B7F,EAAKzB,SACLE,EAAqBF,SACvBiX,EAAcpW,IAAUiI,KAAKlB,MAAMnG,MACvCwV,EAAYnX,MAAQA,EACpBmX,EAAYlX,UAAYA,EACxBkX,EAAYjX,SAAWA,EAEvB,IAAI0V,EACF,kBAAC,GAAD,CACEjZ,eAAgBqM,KAAKlB,MAAMnL,eAC3BoP,aAAc/C,KAAKyM,iBACnBW,WAAYpN,KAAKoN,aAIrB,OAAQpN,KAAKlB,MAAM9G,UACjB,IAAK,QACH4U,EACE,kBAAC,GAAD,CACE3J,UAAWjM,EACXsM,kBAAmBtD,KAAK8N,YACxB1K,cAAepD,KAAKwM,qBACpBjJ,QAAQ,yBAGZ,MACF,IAAK,YACHqJ,EACE,kBAAC,GAAD,CACEnC,cAAexT,EACf8T,sBAAuB/K,KAAK+N,gBAC5BxK,QAAQ,6BAGZ,MACF,IAAK,WACHqJ,EACE,kBAAC,GAAD,CACE1H,aAAchO,EACdwO,qBAAsB1F,KAAKgO,eAC3BzK,QAAQ,4BAGZ,MACF,IAAK,SACHqJ,EACE,kBAAC,GAAD,CACEN,KAAK,0CACL3T,KAAMwV,IAGV,MACF,QACEvB,EACE,kBAAC,GAAD,CACEjZ,eAAgBqM,KAAKlB,MAAMnL,eAC3ByZ,WAAYpN,KAAKoN,WACjBrK,aAAc/C,KAAKyM,mBAI3B,OACE,yBAAKvN,UAAU,aACZ0N,EACwB,UAAxB5M,KAAKlB,MAAM9G,SACV,kBAAC,GAAD,CACEA,SAAUgI,KAAKlB,MAAM9G,SACrBoT,gBAAiBpL,KAAKyM,iBACtBd,iBAAkB3L,KAAK0M,kBACvBpB,eAAgBtL,KAAK/L,MAAMqX,eAC3BG,eAAgBzL,KAAKiO,SACrBP,mBAAoB,kBAAM,EAAK5O,MAAMnF,mBAAmB,WACxDkS,cAAe,kBAAM,EAAK/M,MAAMpF,iBAChC7F,QAASmM,KAAKlB,MAAMjL,UAGtB,Q,GAlLcuN,IAAMC,YAyNfC,oBAhCf,SAAyBrN,GAAQ,IAAD,EAS1BA,EAPF0E,KACExB,EAH0B,EAG1BA,eACAC,EAJ0B,EAI1BA,qBACAE,EAL0B,EAK1BA,2BACAI,EAN0B,EAM1BA,gBAIJ,MAAO,CACL/D,eAFEM,EADFsN,KAAQ5N,eAIRgF,KAAMxB,EACNa,SAAUV,EACVF,uBACAvD,QAAS6D,MAIb,SAA4B8J,GAC1B,MAAO,CACL/H,mBAAoB,SAACd,GAAD,OAAU6I,EAAS/H,GAAmBd,KAC1De,cAAe,kBAAM8H,E5B/DhB,CAAErN,KAAMmC,M4BgEbqD,mBAAoB,SAACkT,GAAD,OAAUrL,EAAS7H,GAAmBkT,KAC1DjT,cAAe,SAAC5C,GAAD,OAAWwK,E5BvD9B,SAAuBxK,GACrB,MAAO,CACL7C,KAAMqC,GACNQ,S4BoDmC4C,CAAc5C,KACjD6C,kBAAmB,SAAC5C,GAAD,OAAeuK,E5BjDtC,SAA2BvK,GACzB,MAAO,CACL9C,KAAMsC,GACNQ,a4B8C2C4C,CAAkB5C,KAC7D6C,iBAAkB,SAAC5C,GAAD,OAAcsK,E5B3CpC,SAA0BtK,GACxB,MAAO,CACL/C,KAAMuC,GACNQ,Y4BwCyC4C,CAAiB5C,KAC1DgX,SAAU,SAACvV,EAAMvB,GAAP,OACRoK,E5BtCN,SAAkB7I,EAAMvB,GACtB,MAAO,CACLjD,KAAMwC,GACNgC,OACAvB,wB4BkCW8W,CAASvV,EAAMvB,QAIfkK,CAA6CsM,I,4BC9I7CQ,I,OA1FO,SAACtP,GAAW,IAAD,EACqBuP,oBAAS,GAD9B,oBACxB3O,EADwB,KACJ4O,EADI,KAG/BC,qBAAU,WACR,SAAS5O,IACyBC,OAAOC,YAAc,MACnBH,GAChC4O,EAAsB1O,OAAOC,YAAc,KAO/C,OAHAD,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,WACLC,OAAOM,oBAAoB,SAAUP,MAEtC,CAACD,IAmBJ,IAAMuM,EAAmD,IAA1BnN,EAAM5H,SAASsH,OAE9C,OACE,yBAAKU,UAAU,gBACb,uBAAGA,UAAU,SAAb,gBACA,yBAAKA,UAAU,gBACZ+M,EACC,8DAEA,kBAACuC,GAAA,EAAD,CAAWrP,QAAQ,SAChBL,EAAM5H,SAAS4E,KAAI,SAACyB,GACnB,IA5BYkR,EAAkBC,EA4BxBC,GA5BMF,EA6BVlR,EAAQkR,iBA7BoBC,EA8B5BnR,EAAQmR,mBAhBb,CAAEE,uBAbsBH,EAAiB3S,KAAI,SAACK,GAInD,OAHe2C,EAAM7H,UAAU6R,WAC7B,SAAC/M,GAAD,OAAcA,EAAS1C,MAAQ8C,KAEjB,KASe0S,yBANAH,EAAmB5S,KAAI,SAACK,GAIvD,OAHe2C,EAAM7H,UAAU6R,WAC7B,SAAC/M,GAAD,OAAcA,EAAS1C,MAAQ8C,KAEjB,OAoBR,OACE,kBAACqS,GAAA,EAAUxN,KAAX,CAAgBuD,IAAKhH,EAAQlE,KAC3B,uBAAG6F,UAAU,eAAe3B,EAAQb,MACpC,kBAACmE,GAAA,EAAD,CACEiO,KAAMpP,EAAqB,OAAS,QACpCP,QAAQ,OACRnI,MAAM,mBACNqU,UAAW9N,EAAQwR,WAEnB,iDACA,yBAAK7P,UAAU,eACb,yBAAKA,UAAU,oBACb,gDACA,4BACGyP,EAAYC,uBAAuB9S,KAAI,SAACkT,GAAD,OACtC,wBAAIzK,IAAKyK,GAAMA,QAIrB,yBAAK9P,UAAU,sBACb,kDACA,4BACGyP,EAAYE,yBAAyB/S,KAAI,SAACkT,GAAD,OACxC,wBAAIzK,IAAKyK,GAAMA,mBC2B5BC,I,OAnGK,SAACnQ,GAAW,IAAD,EACmBuP,oBAAS,GAD5B,oBACtBa,EADsB,KACJC,EADI,KAEvBnD,EAA0D,IAAhClN,EAAMnG,KAAK1B,UAAUuH,OACjDiM,EAAgB1S,IAAU+G,EAAMnG,KAAK1B,WA0CzC,OATAwT,GAJAA,EAAgBA,EAAc3O,KAAI,SAACC,GACjC,OA5BF,SAAoCA,GAUlC,OATAA,EAASY,OAAOb,KAAI,SAAC+R,GAOnB,OANA9R,EAASe,QAAUf,EAASe,QAAQhB,KAAI,SAACiB,GAIvC,OAHI8Q,IAAU9Q,EAAIC,WAChBD,EAAIJ,QAAS,GAERI,KAEF8Q,KAEF9R,EAkBAqT,CAA2BrT,OAGND,KAAI,SAACC,GACjC,MAAsB,eAAlBA,EAAS5H,MACX4H,EAAS5H,KAAO,cACT4H,GAEAA,KAKT,yBAAKmD,UAAU,eACb,yBAAKA,UAAU,aACb,gCAASJ,EAAMnG,KAAK3B,OACpB,kBAAC+H,GAAA,EAAD,CACEC,QAAS,kBAhCjB,SAAuCT,GACrC,IAAM8Q,EAAQ,8DAA0D9Q,GAClE+Q,EAAKC,SAASC,cAAc,YAClCF,EAAGvN,MAAQsN,EACXC,EAAGG,aAAa,WAAY,IAC5BH,EAAGI,MAAMC,SAAW,WACpBL,EAAGI,MAAME,KAAO,UAChBL,SAASnU,KAAKyU,YAAYP,GAC1BA,EAAGQ,SACHP,SAASQ,YAAY,QACrBR,SAASnU,KAAK4U,YAAYV,GAC1BH,GAAoB,GAqBCc,CAA8BnR,EAAMnG,KAAKU,MACxD+F,KAAK,KACLD,QAAQ,OACRD,UAAU,kBACVmM,SACiC,IAA/BvM,EAAMnG,KAAKzB,SAASsH,QACY,IAAhCM,EAAMnG,KAAK1B,UAAUuH,QAGtB0Q,EAAmB,UAAY,qBAElC,kBAACnQ,GAAA,EAAD,CACEC,QAAS,kBAAMF,EAAMoR,aAAapR,EAAMnG,KAAKU,MAC7C+F,KAAK,KACLD,QAAQ,OACRD,UAAU,eAJZ,aAQA,kBAACH,GAAA,EAAD,CACEC,QAASF,EAAMqR,eACf/Q,KAAK,KACLD,QAAQ,SACRD,UAAU,iBAJZ,gBASD8M,EAA0B,+DAA0C,GACrE,yBAAK9M,UAAU,iBACZuL,EAAc3O,KAAI,SAACC,EAAUsI,GAC5B,OACE,kBAAC,GAAD,CACEE,IAAKxI,EAAS1C,IACdgL,MAAOA,EAAQ,EACftI,SAAUA,QAKlB,6BACA,kBAAC,GAAD,CACE9E,UAAW6H,EAAMnG,KAAK1B,UACtBC,SAAU4H,EAAMnG,KAAKzB,cClFvBkZ,I,qNACJnc,MAAQ,CACNoc,aAAc,GACdC,WAAW,EACXC,YAAY,G,EAOdC,UAAY,WACV,EAAK1Q,SAAS,CACZwQ,WAAW,K,EAIfA,UAAY,WACV,EAAKxQ,SAAS,CACZwQ,WAAW,K,EAIfG,sBAAwB,WACtB,IAAMC,EAAiB,EAAKzc,MAAMoc,aAAahX,IAC3C,EAAKpF,MAAMoc,aAAahX,IACxBtB,IAAU,EAAK+G,MAAMlH,WAAWqV,MAAK,SAACC,EAAOC,GAAR,OACnCD,EAAMlW,MAAQmW,EAAMnW,MAAQ,GAAK,KACjC,GAAGqC,IACHG,EAAe,EAAKsF,MAAMlH,UAAU4E,MACxC,SAAC7D,GAAD,OAAUA,EAAKU,MAAQqX,KAGzBlX,EAAavC,UAAYuC,EAAavC,UAAU6E,KAAI,SAACC,GAYnD,OAXAA,EAASC,GAAKD,EAAS1C,IAED,eAAlB0C,EAAS5H,OACX4H,EAAS5H,KAAO,eAGlB4H,EAASe,QAAUf,EAASe,QAAQhB,KAAI,SAACiB,GAEvC,OADAA,EAAIJ,OAASZ,EAASY,OAAOC,MAAK,SAACiR,GAAD,OAAWA,IAAU9Q,EAAIC,YACpDD,KAGFhB,KAGTvC,EAAatC,SAAWsC,EAAatC,SAAS4E,KAAI,SAACyB,GAEjD,OADAA,EAAQvB,GAAKuB,EAAQlE,IACdkE,KAGT,EAAKuB,MAAMrF,mBAAmBD,GAC9B,EAAKsF,MAAMnF,mBAAmB,SAC9B,EAAKmG,SAAS,CAAEyQ,YAAY,K,EAG9BI,mBAAqB,WACnB,EAAKH,YACL,IAAME,EAAiB,EAAKzc,MAAMoc,aAAahX,IAC3C,EAAKpF,MAAMoc,aAAahX,IACxBtB,IAAU,EAAK+G,MAAMlH,WAAWqV,MAAK,SAACC,EAAOC,GAAR,OACnCD,EAAMlW,MAAQmW,EAAMnW,MAAQ,GAAK,KACjC,GAAGqC,IACT,EAAKyF,MAAM8R,WAAWF,GAEtB,IAGML,EAHkBtY,IACtB,EAAK+G,MAAMlH,WACXqV,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMlW,MAAQmW,EAAMnW,MAAQ,GAAK,KACtBoC,QACnC,SAACT,GAAD,OAAUA,EAAKU,MAAQqX,KACvB,GACF,EAAK5Q,SAAS,CAAEuQ,kB,EAGlBrD,oBAAsB,SAACzO,GACrB,IAAM8R,EAAe,EAAKvR,MAAMlH,UAAU4E,MACxC,SAAC7D,GAAD,OAAUA,EAAKU,MAAQkF,KAEzB,EAAKuB,SAAS,CAAEuQ,kB,qFAxEhBrQ,KAAKlB,MAAM5E,iB,+BA2EH,IAAD,OACP,GAAI8F,KAAK/L,MAAMsc,WACb,OAAO,kBAAC,KAAD,CAAU/P,GAAG,eAGtB,IAAM6M,EAAkBtV,IACtBiI,KAAKlB,MAAMlH,WACXqV,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMlW,MAAQmW,EAAMnW,MAAQ,GAAK,KAE3D,OACE,yBAAKkI,UAAU,SACb,kBAAC2R,GAAA,EAAD,CAAOC,OAAQ9Q,KAAKwQ,UAAWO,KAAM/Q,KAAK/L,MAAMqc,WAC9C,kBAACO,GAAA,EAAMjM,KAAP,kDAEE,yBAAK1F,UAAU,aACb,kBAACH,GAAA,EAAD,CAAQI,QAAQ,OAAOH,QAASgB,KAAKwQ,WAArC,UAGA,kBAACzR,GAAA,EAAD,CAAQI,QAAQ,SAASH,QAASgB,KAAK2Q,oBAAvC,kBAMN,0CACC3Q,KAAKlB,MAAMrH,qBAAuBuI,KAAKlB,MAAM7F,kBAC5C,yBAAKiG,UAAU,WACb,kBAACG,GAAA,EAAD,CAASE,UAAU,SAASJ,QAAQ,QAClC,0BAAMD,UAAU,WAAhB,gBAGFc,KAAKlB,MAAMlH,UAAU4G,OAAS,EAChC,oCACE,yBAAKU,UAAU,oBACb,kBAAC2B,GAAA,EAAD,CAAgB1B,QAAQ,OAAOnI,MAAM,iBAClCqW,EAAgBvR,KAAI,SAACnD,GAAD,OACnB,kBAACoI,GAAA,EAASC,KAAV,CACEuD,IAAK5L,EAAKU,IACV2F,QAAS,kBAAM,EAAKgO,oBAAoBrU,EAAKU,OAE5CV,EAAK3B,YAKd,kBAAC,GAAD,CACE2B,KACEqH,KAAK/L,MAAMoc,aAAahX,IACpB2G,KAAK/L,MAAMoc,aACXhD,EAAgB,GAEtB9I,IAAKvE,KAAK/L,MAAMoc,aAAahX,KAAOgU,EAAgB,GAAGhU,IACvD8W,eAAgBnQ,KAAKsQ,UACrBJ,aAAclQ,KAAKyQ,yBAIvB,4DACiC,IAC/B,uBAAGnD,KAAK,gBAAR,wB,GA9IQlM,IAAMC,YA0KXC,oBApBf,SAAyBrN,GAAQ,IAAD,EAG1BA,EADF0E,KAEF,MAAO,CACLf,UAL4B,EAEpBA,UAIRH,oBAN4B,EAETA,oBAKnBwB,kBAP4B,EAEYA,sBAS5C,SAA4BuI,GAC1B,MAAO,CACLtH,aAAc,kBAAMsH,EAAStH,OAC7B0W,WAAY,SAACrS,GAAD,OAAYiD,E/B1C5B,SAAoBjD,GAClB,MAAO,CACLpK,KAAM8B,EACNsI,U+BuCiCqS,CAAWrS,KAC5C9E,mBAAoB,SAACd,GAAD,OAAU6I,EAAS/H,GAAmBd,KAC1DgB,mBAAoB,SAACkT,GAAD,OAAUrL,EAAS7H,GAAmBkT,QAI/CvL,CAA6C8O,I,6BClJ7CY,GAvCE,SAAClS,GAAW,IAEzBuF,EAEEvF,EAFFuF,MAFwB,EAItBvF,EADF/C,SAAY1C,EAHY,EAGZA,IAAKqD,EAHO,EAGPA,KAAMvI,EAHC,EAGDA,KAAM2I,EAHL,EAGKA,QAG3BmU,EACF,oCACGnU,EAAQhB,KAAI,SAACiB,GAAD,OACX,kBAACoF,GAAA,EAAKwF,MAAN,CACEpD,IAAKxH,EAAIC,SACT6K,MAAO9K,EAAIL,KACXA,KAAMrD,EACNlF,KAAMA,EACN4N,MAAOhF,EAAIC,eAenB,MATa,eAAT7I,IACF8c,EACE,oCACE,kBAAC9O,GAAA,EAAKwF,MAAN,CAAY5F,MAAM,OAAO8F,MAAM,OAAOnL,KAAMrD,EAAKlF,KAAK,UACtD,kBAACgO,GAAA,EAAKwF,MAAN,CAAY5F,MAAM,QAAQ8F,MAAM,QAAQnL,KAAMrD,EAAKlF,KAAK,YAM5D,kBAACgO,GAAA,EAAKE,MAAN,KACE,kBAACF,GAAA,EAAKI,MAAN,KACG8B,EADH,KACY3H,GAEZ,yBAAKwC,UAAU,mBAAmB+R,KCgCzBC,I,OA1DE,SAACpS,GAChB,IAAIqS,EACFrS,EAAMsS,qBAAuBtS,EAAMuS,gBAAgB3U,KACjD,kBAAC,GAAD,CACEvI,KAAK,SACLgL,QAAQ,OACRC,KAAK,KACLvL,QAASiL,EAAMwS,wBAJjB,UASA,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,KACG3S,EAAMuS,gBAAgB3U,KACnB,+CACA,+BAIR,8BACE,kBAACqC,GAAA,EAAD,CAAQI,QAAQ,OAAOkM,UAAQ,EAACqE,MAAO,CAAEgC,cAAe,SAAxD,YAOR,OACE,yBAAKxS,UAAU,YACb,kBAAC2B,GAAA,EAAD,CACE1B,QAAQ,OACRnI,MAAO8H,EAAMuS,gBAAgB3U,MAAQ,qBAEpCoC,EAAMnG,KAAKzB,SAAS4E,KAAI,SAACyB,GAAD,OACvB,kBAACwD,GAAA,EAASC,KAAV,CACEuD,IAAKhH,EAAQlE,IACb2F,QAAS,kBAAMF,EAAM6S,oBAAoBpU,IACzC8N,SAAU9N,EAAQwR,WAEjBxR,EAAQb,UAIf,kBAACyF,GAAA,EAAD,CACEqB,SAAU1E,EAAM8S,iBAChBxP,SAAUtD,EAAM+S,sBAEf/S,EAAMnG,KAAK1B,UAAU6E,KAAI,SAACC,EAAUc,GAAX,OACxB,kBAAC,GAAD,CAAUwH,MAAOxH,EAAI,EAAG0H,IAAKxI,EAAS1C,IAAK0C,SAAUA,OAEtDoV,M,OCoGM1P,oBAAWH,YAAQ,MANlC,SAA4BE,GAC1B,MAAO,CACLsQ,QAAS,SAACvT,GAAD,OAAYiD,ElCxEzB,SAAiBjD,GACf,MAAO,CACLpK,KAAMsB,EACN8I,UkCqE8BuT,CAAQvT,QAIhB+C,EAzJT,SAACxC,GAAW,IAAD,EACIuP,oBAAS,GADb,oBACnBxa,EADmB,KACVke,EADU,OAEF1D,mBAAS,IAFP,oBAEnB1V,EAFmB,KAEbqZ,EAFa,OAGA3D,mBAAS,IAHT,oBAGnBva,EAHmB,KAGZme,EAHY,OAIoB5D,mBAAS,IAJ7B,oBAInBgD,EAJmB,KAIFa,EAJE,OAK4B7D,oBAAS,GALrC,oBAKnB+C,EALmB,KAKEe,EALF,OAMQ9D,oBAAS,GANjB,oBAMnBiC,EANmB,KAMR8B,EANQ,OAO8B/D,mBAAS,IAPvC,oBAOnBgE,EAPmB,KAOGC,EAPH,OAQkCjE,oBAAS,GAR3C,oBAQnBiD,EARmB,KAQKiB,EARL,KAYZhU,EAEVO,EAHF0T,MACEC,OAAUlU,OAZY,8CAwD1B,WAA+BkQ,EAAkBC,GAAjD,kBAAAgE,EAAA,sEAEIH,GAA0B,GAF9B,SAGsB9X,MAAM,4CAAD,OACuB9B,EAAKU,KACjD,CACE8B,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACnBoC,UAAW2T,EAAgBhY,IAC3BoV,mBACAC,uBAEFnT,QAAS,CAAE,eAAgB,sBAZnC,cAGUb,EAHV,gBAe4BA,EAAIC,OAfhC,UAeUC,EAfV,OAgBSF,EAAIG,GAhBb,uBAiBYC,MAAMF,EAAU9G,OAjB5B,QAmBIye,GAA0B,GAC1BH,GAAa,GApBjB,kDAsBIG,GAA0B,GAC1BD,EAAwB,4BAvB5B,2DAxD0B,sBAgB1B/D,qBAAU,WAAM,8CACd,WAAuBhQ,GAAvB,kBAAAmU,EAAA,sEAEIX,GAAW,GAFf,SAGsBtX,MAAM,GAAD,OAClBD,+CADkB,yBACwB+D,IAJnD,cAGU7D,EAHV,gBAM4BA,EAAIC,OANhC,UAMUC,EANV,OAOSF,EAAIG,GAPb,uBAQYC,MAAMF,EAAU9G,OAR5B,QAUIke,EAAQpX,EAAUjC,MAClBoZ,GAAW,GAXf,kDAaIE,EAAS,4BACTF,GAAW,GAdf,2DADc,uBAAC,SAAD,2BAkBdD,CAAQvT,KACP,CAACA,IA4EJ,IAAIoU,EAAU9e,EACZ,yBAAKqL,UAAU,mBACb,kBAACG,GAAA,EAAD,CAASF,QAAQ,OAAOI,UAAU,UAChC,0BAAML,UAAU,WAAhB,gBAGFpL,EACF,kBAACoO,GAAA,EAAD,CAAO/C,QAAQ,QAAQrL,GAEvB,oCACE,kBAAC+c,GAAA,EAAD,CAAOE,KAAMT,EAAWQ,OAAQ,cAC9B,kBAACD,GAAA,EAAMpM,OAAP,KACE,kBAACoM,GAAA,EAAM+B,MAAP,6BAEF,kBAAC/B,GAAA,EAAMjM,KAAP,oCAEF,wBAAI1F,UAAU,MAAMvG,EAAK3B,OACxBqb,EACC,kBAACnQ,GAAA,EAAD,CAAO/C,QAAQ,QAAQkT,GAEvB,GAEF,kBAAC,GAAD,CACEjB,oBAAqBA,EACrBC,gBAAiBA,EACjB1Y,KAAMA,EACNgZ,oBApGN,SAAuBpU,GACrB2U,EAAmB3U,IAoGfsU,qBAvDN,SAA8BjQ,GAC5BA,EAAEC,iBACF,IAAI4M,EAAmB,GACnBC,EAAqB,GACzB/V,EAAK1B,UAAU6E,KAAI,SAACC,GAIlB,IAHA,IAAI8W,EAAiB,GACf/V,EAAUyS,SAASuD,kBAAkB/W,EAAS1C,KAE3CwD,EAAI,EAAGA,EAAIC,EAAQ0B,OAAQ3B,IAC9BC,EAAQD,GAAGsK,SACb0L,EAAerN,KAAK1I,EAAQD,GAAGkF,OAanC,OAREhG,EAASY,OAAOoW,OAAM,SAAClF,EAAOhR,GAAR,OAAcgR,IAAUgF,EAAehW,OAC7DgW,EAAeE,OAAM,SAAClF,EAAOhR,GAAR,OAAcgR,IAAU9R,EAASY,OAAOE,MAG7D4R,EAAiBjJ,KAAKzJ,EAAS1C,KAE/BqV,EAAmBlJ,KAAKzJ,EAAS1C,KAE5B0C,KA1Ge,sCA4GxBiX,CAAgBvE,EAAkBC,IA+B9BkD,iBAlGN,SAA0BhQ,GACxB,IAAMwP,EAAsBzY,EAAK1B,UAAU8b,OAAM,SAAChX,GAGhD,IAFA,IAAMe,EAAUyS,SAASuD,kBAAkB/W,EAAS1C,KAChD4Z,GAAyB,EACpBpW,EAAI,EAAGA,EAAIC,EAAQ0B,OAAQ3B,IAClC,GAAIC,EAAQD,GAAGsK,QAAS,CACtB8L,GAAyB,EACzB,MAGJ,OAAOA,KAETd,EAAuBf,IAuFnBE,uBAAwBA,KAI9B,OAAO,yBAAKpS,UAAU,YAAYyT,OC7I9BO,I,wMAEFlT,KAAKlB,MAAMqU,sB,+BAIX,IAAIC,EACF,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,QAAQC,UAAW5R,KAC/B,kBAAC,KAAD,CAAO2R,KAAK,SAASC,UAAW3Q,KAChC,kBAAC,KAAD,CAAO0Q,KAAK,eAAeC,UAAW/G,KACtC,kBAAC,KAAD,CAAO8G,KAAK,qBAAqBC,UAAWC,KAC5C,kBAAC,KAAD,CAAUC,KAAK,IAAIhT,GAAG,kBAgB1B,OAbIR,KAAKlB,MAAMnL,iBACbyf,EACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAUI,KAAK,SAAShT,GAAG,gBAC3B,kBAAC,KAAD,CAAUgT,KAAK,QAAQhT,GAAG,gBAC1B,kBAAC,KAAD,CAAO6S,KAAK,SAASC,UAAWlD,KAChC,kBAAC,KAAD,CAAOiD,KAAK,eAAeC,UAAW/G,KACtC,kBAAC,KAAD,CAAO8G,KAAK,aAAaC,UAAW1F,KACpC,kBAAC,KAAD,CAAOyF,KAAK,qBAAqBC,UAAWC,KAC5C,kBAAC,KAAD,CAAUC,KAAK,IAAIhT,GAAG,mBAK1B,yBAAKtB,UAAU,OACmC,cAA/Cc,KAAKlB,MAAMsB,SAASD,SAASsT,MAAM,KAAK,GACvC,kBAAC,GAAD,MAEA,GAEDL,O,GAnCShS,IAAMC,YAsDTI,oBAAWH,aAb1B,SAAyBrN,GAIvB,MAAO,CAAEN,eADLM,EADFsN,KAAQ5N,mBAKZ,SAA4B6N,GAC1B,MAAO,CACL2R,kBAAmB,kBAAM3R,EpC3CpB,CACLrN,KAAMzB,QoC8CgB4O,CAA6C4R,KCvDjEQ,I,OAAmB9T,OAAO+T,sCAAwCC,KAElEC,GAAcC,YAAgB,CAClCvS,KAAMvN,EACN2E,KAAMob,KAGFC,GAAiBC,cAEjBC,GAAQC,YACZN,GACAH,GAAiBU,YAAgBJ,MAGnCA,GAAeK,IAAI3V,IACnBsV,GAAeK,IAAI1V,IAEnB,IAAM2V,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,CAAYK,SAAS,KACnB,kBAAC,GAAD,QAKNC,IAASC,OAAOH,GAAY/E,SAASmF,eAAe,W","file":"static/js/main.079d02a9.chunk.js","sourcesContent":["const AUTH_LOGIN_EXISTING_USER = 'LOGIN_EXISTING_USER';\r\nconst AUTH_LOGIN_EXISTING_USER_SUCCESS = 'AUTH_LOGIN_EXISTING_USER_SUCCESS';\r\nconst AUTH_LOGIN_EXISTING_USER_FAIL = 'AUTH_LOGIN_EXISTING_USER_FAIL';\r\n\r\nconst AUTH_SIGNUP = 'AUTH_SIGNUP';\r\nconst AUTH_SIGNUP_START = 'AUTH_SIGNUP_START';\r\nconst AUTH_SIGNUP_SUCCESS = 'AUTH_SIGNUP_SUCCESS';\r\nconst AUTH_SIGNUP_FAIL = 'AUTH_SIGNUP_FAIL';\r\n\r\nconst AUTH_LOGIN = 'AUTH_LOGIN';\r\nconst AUTH_LOGIN_START = 'AUTH_LOGIN_START';\r\nconst AUTH_LOGIN_SUCCESS = 'AUTH_LOGIN_SUCCESS';\r\nconst AUTH_LOGIN_FAIL = 'AUTH_LOGIN_FAIL';\r\n\r\nconst AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nconst AUTH_LOGOUT_START = 'AUTH_LOGOUT_START';\r\nconst AUTH_LOGOUT_SUCCESS = 'AUTH_LOGOUT_SUCCESS';\r\nconst AUTH_LOGOUT_FAIL = 'AUTH_LOGOUT_FAIL';\r\n\r\nconst AUTH_CLEAR_ERROR = 'AUTH_CLEAR_ERROR';\r\n\r\nexport {\r\n  AUTH_LOGIN_EXISTING_USER,\r\n  AUTH_LOGIN_EXISTING_USER_SUCCESS,\r\n  AUTH_LOGIN_EXISTING_USER_FAIL,\r\n  AUTH_SIGNUP,\r\n  AUTH_SIGNUP_START,\r\n  AUTH_SIGNUP_SUCCESS,\r\n  AUTH_SIGNUP_FAIL,\r\n  AUTH_LOGIN,\r\n  AUTH_LOGIN_START,\r\n  AUTH_LOGIN_SUCCESS,\r\n  AUTH_LOGIN_FAIL,\r\n  AUTH_LOGOUT,\r\n  AUTH_LOGOUT_START,\r\n  AUTH_LOGOUT_SUCCESS,\r\n  AUTH_LOGOUT_FAIL,\r\n  AUTH_CLEAR_ERROR,\r\n};\r\n","import {\r\n  AUTH_LOGIN_EXISTING_USER_SUCCESS,\r\n  AUTH_LOGIN_EXISTING_USER_FAIL,\r\n  AUTH_SIGNUP_START,\r\n  AUTH_SIGNUP_SUCCESS,\r\n  AUTH_SIGNUP_FAIL,\r\n  AUTH_LOGIN_START,\r\n  AUTH_LOGIN_SUCCESS,\r\n  AUTH_LOGIN_FAIL,\r\n  AUTH_LOGOUT_START,\r\n  AUTH_LOGOUT_SUCCESS,\r\n  AUTH_LOGOUT_FAIL,\r\n  AUTH_CLEAR_ERROR,\r\n} from '../actions/authActionTypes';\r\n\r\nconst initialState = {\r\n  isUserLoggedIn: false,\r\n  userId: '',\r\n  loading: false,\r\n  error: '',\r\n  user: {},\r\n};\r\n\r\nfunction authLoginExistingUserSuccess(state, action) {\r\n  return {\r\n    ...state,\r\n    isUserLoggedIn: true,\r\n    userId: action.userId,\r\n  };\r\n}\r\n\r\nfunction authLoginExistingUserFail(state) {\r\n  return state;\r\n}\r\n\r\nfunction authSignupStart(state) {\r\n  return { ...state, loading: true };\r\n}\r\n\r\nfunction authSignupSuccess(state, action) {\r\n  return {\r\n    ...state,\r\n    isUserLoggedIn: true,\r\n    userId: action.userId,\r\n    loading: false,\r\n  };\r\n}\r\n\r\nfunction authSignupFail(state, action) {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    error: action.error,\r\n  };\r\n}\r\n\r\nfunction authLoginStart(state) {\r\n  return { ...state, loading: true };\r\n}\r\n\r\nfunction authLoginSuccess(state, action) {\r\n  return {\r\n    ...state,\r\n    isUserLoggedIn: true,\r\n    userId: action.userId,\r\n    loading: false,\r\n  };\r\n}\r\n\r\nfunction authLoginFail(state, action) {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    error: action.error,\r\n  };\r\n}\r\n\r\nfunction authLogoutStart(state) {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n  };\r\n}\r\n\r\nfunction authLogoutSuccess(state) {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    isUserLoggedIn: false,\r\n    userId: '',\r\n    user: {},\r\n  };\r\n}\r\n\r\nfunction authLogoutFail(state, action) {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    error: action.error,\r\n  };\r\n}\r\n\r\nfunction authClearError(state) {\r\n  return {\r\n    ...state,\r\n    error: '',\r\n  };\r\n}\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_LOGIN_EXISTING_USER_SUCCESS:\r\n      return authLoginExistingUserSuccess(state, action);\r\n    case AUTH_LOGIN_EXISTING_USER_FAIL:\r\n      return authLoginExistingUserFail(state);\r\n    case AUTH_SIGNUP_START:\r\n      return authSignupStart(state);\r\n    case AUTH_SIGNUP_SUCCESS:\r\n      return authSignupSuccess(state, action);\r\n    case AUTH_SIGNUP_FAIL:\r\n      return authSignupFail(state, action);\r\n    case AUTH_LOGIN_START:\r\n      return authLoginStart(state);\r\n    case AUTH_LOGIN_SUCCESS:\r\n      return authLoginSuccess(state, action);\r\n    case AUTH_LOGIN_FAIL:\r\n      return authLoginFail(state, action);\r\n    case AUTH_LOGOUT_START:\r\n      return authLogoutStart(state);\r\n    case AUTH_LOGOUT_SUCCESS:\r\n      return authLogoutSuccess(state);\r\n    case AUTH_LOGOUT_FAIL:\r\n      return authLogoutFail(state, action);\r\n    case AUTH_CLEAR_ERROR:\r\n      return authClearError(state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","const CREATE_EXAM_CHANGE_PART = 'CREATE_EXAM_CHANGE_PART';\r\nconst CREATE_EXAM_RESET = 'CREATE_EXAM_RESET';\r\nconst CREATE_EXAM_TITLE = 'CREATE_EXAM_TITLE';\r\nconst CREATE_EXAM_QUESTIONS = 'CREATE_EXAM_QUESTIONS';\r\nconst CREATE_EXAM_STUDENTS = 'CREATE_EXAM_STUDENTS';\r\nconst CREATE_EXAM = 'CREATE_EXAM';\r\nconst CREATE_EXAM_START = 'CREATE_EXAM_START';\r\nconst CREATE_EXAM_FAIL = 'CREATE_EXAM_FAIL';\r\nconst CREATE_EXAM_SUCCESS = 'CREATE_EXAM_SUCCESS';\r\n\r\nconst GET_EXAM = 'GET_EXAM';\r\nconst GET_EXAM_START = 'GET_EXAM_START';\r\nconst GET_EXAM_SUCCESS = 'GET_EXAM_SUCCESS';\r\nconst GET_EXAM_FAIL = 'GET_EXAM_FAIL';\r\nconst GET_USER_EXAMS = 'GET_USER_EXAMS';\r\nconst GET_USER_EXAMS_START = 'GET_USER_EXAMS_START';\r\nconst GET_USER_EXAMS_SUCCESS = 'GET_USER_EXAMS_SUCCESS';\r\nconst GET_USER_EXAMS_FAIL = 'GET_USER_EXAMS_FAIL';\r\n\r\nconst DELETE_EXAM = 'DELETE_EXAM';\r\nconst DELETE_EXAM_START = 'DELETE_EXAM_START';\r\nconst DELETE_EXAM_SUCCESS = 'DELETE_EXAM_SUCCESS';\r\nconst DELETE_EXAM_FAIL = 'DELETE_EXAM_FAIL';\r\n\r\nconst EDIT_EXAM_SELECT_EXAM = 'EDIT_EXAM_SELECT_EXAM';\r\nconst EDIT_EXAM_RESET = 'EDIT_EXAM_RESET';\r\nconst EDIT_EXAM_CHANGE_PART = 'EDIT_EXAM_CHANGE_PART';\r\nconst EDIT_EXAM_TITLE = 'EDIT_EXAM_TITLE';\r\nconst EDIT_EXAM_QUESTIONS = 'EDIT_EXAM_QUESTIONS';\r\nconst EDIT_EXAM_STUDENTS = 'EDIT_EXAM_STUDENTS';\r\nconst EDIT_EXAM = 'EDIT_EXAM';\r\nconst EDIT_EXAM_START = 'EDIT_EXAM_START';\r\nconst EDIT_EXAM_FAIL = 'EDIT_EXAM_FAIL';\r\nconst EDIT_EXAM_SUCCESS = 'EDIT_EXAM_SUCCESS';\r\n\r\nexport {\r\n  CREATE_EXAM_CHANGE_PART,\r\n  CREATE_EXAM_RESET,\r\n  CREATE_EXAM_TITLE,\r\n  CREATE_EXAM_QUESTIONS,\r\n  CREATE_EXAM_STUDENTS,\r\n  CREATE_EXAM,\r\n  CREATE_EXAM_START,\r\n  CREATE_EXAM_FAIL,\r\n  CREATE_EXAM_SUCCESS,\r\n  GET_EXAM,\r\n  GET_EXAM_START,\r\n  GET_EXAM_SUCCESS,\r\n  GET_EXAM_FAIL,\r\n  GET_USER_EXAMS,\r\n  GET_USER_EXAMS_START,\r\n  GET_USER_EXAMS_SUCCESS,\r\n  GET_USER_EXAMS_FAIL,\r\n  DELETE_EXAM,\r\n  DELETE_EXAM_START,\r\n  DELETE_EXAM_SUCCESS,\r\n  DELETE_EXAM_FAIL,\r\n  EDIT_EXAM_SELECT_EXAM,\r\n  EDIT_EXAM_RESET,\r\n  EDIT_EXAM_CHANGE_PART,\r\n  EDIT_EXAM_TITLE,\r\n  EDIT_EXAM_QUESTIONS,\r\n  EDIT_EXAM_STUDENTS,\r\n  EDIT_EXAM,\r\n  EDIT_EXAM_START,\r\n  EDIT_EXAM_FAIL,\r\n  EDIT_EXAM_SUCCESS,\r\n};\r\n","import clonedeep from 'lodash.clonedeep';\r\nimport {\r\n  CREATE_EXAM_CHANGE_PART,\r\n  CREATE_EXAM_RESET,\r\n  CREATE_EXAM_TITLE,\r\n  CREATE_EXAM_QUESTIONS,\r\n  CREATE_EXAM_STUDENTS,\r\n  CREATE_EXAM_START,\r\n  CREATE_EXAM_SUCCESS,\r\n  CREATE_EXAM_FAIL,\r\n  GET_EXAM_START,\r\n  GET_EXAM_SUCCESS,\r\n  GET_EXAM_FAIL,\r\n  GET_USER_EXAMS_START,\r\n  GET_USER_EXAMS_SUCCESS,\r\n  GET_USER_EXAMS_FAIL,\r\n  DELETE_EXAM_START,\r\n  DELETE_EXAM_FAIL,\r\n  DELETE_EXAM_SUCCESS,\r\n  EDIT_EXAM_SELECT_EXAM,\r\n  EDIT_EXAM_RESET,\r\n  EDIT_EXAM_CHANGE_PART,\r\n  EDIT_EXAM_TITLE,\r\n  EDIT_EXAM_QUESTIONS,\r\n  EDIT_EXAM_STUDENTS,\r\n  EDIT_EXAM_START,\r\n  EDIT_EXAM_FAIL,\r\n  EDIT_EXAM_SUCCESS,\r\n} from '../actions/examActionTypes';\r\n\r\nconst initialState = {\r\n  examBeingCreated: {\r\n    title: '',\r\n    questions: [],\r\n    students: [],\r\n  },\r\n  examToBeEdited: {},\r\n  examPartsBeingEdited: {\r\n    title: '',\r\n    questions: [],\r\n    students: [],\r\n  },\r\n  currentExamBeingCreatedPart: 'start',\r\n  currentExamBeingEditedPart: 'start',\r\n  createExamLoading: false,\r\n  getExamLoading: false,\r\n  getUserExamsLoading: false,\r\n  editExamLoading: false,\r\n  error: '',\r\n  retrievedExam: {},\r\n  userExams: [],\r\n};\r\n\r\nfunction createExamChangePart(newState, action) {\r\n  newState.currentExamBeingCreatedPart = action.examPart;\r\n  return newState;\r\n}\r\n\r\nfunction createExamReset(newState) {\r\n  newState.examBeingCreated = {\r\n    title: '',\r\n    questions: [],\r\n    students: [],\r\n  };\r\n  newState.currentExamBeingCreatedPart = 'start';\r\n  return newState;\r\n}\r\n\r\nfunction createExamTitle(newState, action) {\r\n  newState.examBeingCreated.title = action.title;\r\n  return newState;\r\n}\r\n\r\nfunction createExamQuestions(newState, action) {\r\n  newState.examBeingCreated.questions = action.questions;\r\n  return newState;\r\n}\r\n\r\nfunction createExamStudents(newState, action) {\r\n  newState.examBeingCreated.students = action.students;\r\n  return newState;\r\n}\r\n\r\nfunction createExamStart(newState) {\r\n  newState.createExamLoading = true;\r\n  return newState;\r\n}\r\n\r\nfunction createExamSuccess(newState) {\r\n  newState.examBeingCreated = {\r\n    title: '',\r\n    questions: [],\r\n    students: [],\r\n  };\r\n  newState.currentExamBeingCreatedPart = 'start';\r\n  newState.createExamLoading = false;\r\n  return newState;\r\n}\r\n\r\nfunction createExamFail(newState, action) {\r\n  newState.createExamLoading = false;\r\n  newState.error = action.error;\r\n  return newState;\r\n}\r\n\r\nfunction getExamStart(newState) {\r\n  newState.getExamLoading = true;\r\n  return newState;\r\n}\r\n\r\nfunction getExamSuccess(newState, action) {\r\n  newState.getExamLoading = false;\r\n  newState.retrievedExam = action.exam;\r\n  return newState;\r\n}\r\n\r\nfunction getExamFail(newState) {\r\n  newState.getExamLoading = false;\r\n  return newState;\r\n}\r\n\r\nfunction getUserExamsStart(newState) {\r\n  newState.getUserExamsLoading = true;\r\n  return newState;\r\n}\r\n\r\nfunction getUserExamsSuccess(newState, action) {\r\n  newState.getUserExamsLoading = false;\r\n  newState.userExams = action.exams;\r\n  return newState;\r\n}\r\n\r\nfunction getUserExamsFail(newState, action) {\r\n  newState.getUserExamsLoading = false;\r\n  newState.error = action.error;\r\n  return newState;\r\n}\r\n\r\nfunction deleteExamStart(newState) {\r\n  newState.deleteExamLoading = true;\r\n  return newState;\r\n}\r\n\r\nfunction deleteExamSuccess(newState, action) {\r\n  newState.deleteExamLoading = false;\r\n  newState.userExams = newState.userExams.filter(\r\n    (exam) => exam._id !== action.deletedExamId,\r\n  );\r\n  return newState;\r\n}\r\n\r\nfunction deleteExamFail(newState, action) {\r\n  newState.deleteExamLoading = false;\r\n  newState.error = action.error;\r\n  return newState;\r\n}\r\n\r\nfunction editExamSelectExam(newState, action) {\r\n  newState.examToBeEdited = action.selectedExam;\r\n  return newState;\r\n}\r\n\r\nfunction editExamReset(newState) {\r\n  newState.examToBeEdited = {};\r\n  newState.examPartsBeingEdited = {\r\n    title: '',\r\n    questions: [],\r\n    students: [],\r\n  };\r\n  newState.currentExamBeingEditedPart = 'start';\r\n  return newState;\r\n}\r\n\r\nfunction editExamChangePart(newState, action) {\r\n  newState.currentExamBeingEditedPart = action.examPart;\r\n  return newState;\r\n}\r\n\r\nfunction editExamTitle(newState, action) {\r\n  newState.examPartsBeingEdited.title = action.title;\r\n  return newState;\r\n}\r\n\r\nfunction editExamQuestions(newState, action) {\r\n  newState.examPartsBeingEdited.questions = action.questions;\r\n  return newState;\r\n}\r\n\r\nfunction editExamStudents(newState, action) {\r\n  newState.examPartsBeingEdited.students = action.students;\r\n  return newState;\r\n}\r\n\r\nfunction editExamStart(newState) {\r\n  newState.editExamLoading = true;\r\n  return newState;\r\n}\r\n\r\nfunction editExamSuccess(newState) {\r\n  newState.examToBeEdited = {};\r\n  newState.examPartsBeingEdited = {\r\n    title: '',\r\n    questions: [],\r\n    students: [],\r\n  };\r\n  newState.currentExamBeingEditedPart = 'start';\r\n  newState.editExamLoading = false;\r\n  return newState;\r\n}\r\n\r\nfunction editExamFail(newState, action) {\r\n  newState.editExamLoading = false;\r\n  newState.error = action.error;\r\n  return newState;\r\n}\r\n\r\nfunction createExamReducer(state = initialState, action) {\r\n  const newState = clonedeep(state);\r\n  switch (action.type) {\r\n    case CREATE_EXAM_CHANGE_PART:\r\n      return createExamChangePart(newState, action);\r\n    case CREATE_EXAM_RESET:\r\n      return createExamReset(newState);\r\n    case CREATE_EXAM_TITLE:\r\n      return createExamTitle(newState, action);\r\n    case CREATE_EXAM_QUESTIONS:\r\n      return createExamQuestions(newState, action);\r\n    case CREATE_EXAM_STUDENTS:\r\n      return createExamStudents(newState, action);\r\n    case CREATE_EXAM_START:\r\n      return createExamStart(newState);\r\n    case CREATE_EXAM_SUCCESS:\r\n      return createExamSuccess(newState);\r\n    case CREATE_EXAM_FAIL:\r\n      return createExamFail(newState, action);\r\n    case GET_EXAM_START:\r\n      return getExamStart(newState);\r\n    case GET_EXAM_FAIL:\r\n      return getExamFail(newState, action);\r\n    case GET_EXAM_SUCCESS:\r\n      return getExamSuccess(newState, action);\r\n    case GET_USER_EXAMS_START:\r\n      return getUserExamsStart(newState);\r\n    case GET_USER_EXAMS_FAIL:\r\n      return getUserExamsFail(newState, action);\r\n    case GET_USER_EXAMS_SUCCESS:\r\n      return getUserExamsSuccess(newState, action);\r\n    case DELETE_EXAM_START:\r\n      return deleteExamStart(newState);\r\n    case DELETE_EXAM_FAIL:\r\n      return deleteExamFail(newState, action);\r\n    case DELETE_EXAM_SUCCESS:\r\n      return deleteExamSuccess(newState, action);\r\n    case EDIT_EXAM_SELECT_EXAM:\r\n      return editExamSelectExam(newState, action);\r\n    case EDIT_EXAM_RESET:\r\n      return editExamReset(newState);\r\n    case EDIT_EXAM_CHANGE_PART:\r\n      return editExamChangePart(newState, action);\r\n    case EDIT_EXAM_TITLE:\r\n      return editExamTitle(newState, action);\r\n    case EDIT_EXAM_QUESTIONS:\r\n      return editExamQuestions(newState, action);\r\n    case EDIT_EXAM_STUDENTS:\r\n      return editExamStudents(newState, action);\r\n    case EDIT_EXAM_START:\r\n      return editExamStart(newState);\r\n    case EDIT_EXAM_SUCCESS:\r\n      return editExamSuccess(newState);\r\n    case EDIT_EXAM_FAIL:\r\n      return editExamFail(newState, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default createExamReducer;\r\n","import {\r\n  AUTH_LOGIN_EXISTING_USER,\r\n  AUTH_LOGIN_EXISTING_USER_SUCCESS,\r\n  AUTH_LOGIN_EXISTING_USER_FAIL,\r\n  AUTH_SIGNUP,\r\n  AUTH_SIGNUP_START,\r\n  AUTH_SIGNUP_SUCCESS,\r\n  AUTH_SIGNUP_FAIL,\r\n  AUTH_LOGIN,\r\n  AUTH_LOGIN_START,\r\n  AUTH_LOGIN_SUCCESS,\r\n  AUTH_LOGIN_FAIL,\r\n  AUTH_LOGOUT,\r\n  AUTH_LOGOUT_START,\r\n  AUTH_LOGOUT_SUCCESS,\r\n  AUTH_LOGOUT_FAIL,\r\n  AUTH_CLEAR_ERROR,\r\n} from '../actions/authActionTypes';\r\n\r\nfunction authLoginExistingUser() {\r\n  return {\r\n    type: AUTH_LOGIN_EXISTING_USER,\r\n  };\r\n}\r\n\r\nfunction authLoginExistingUserSuccess(userId) {\r\n  return {\r\n    type: AUTH_LOGIN_EXISTING_USER_SUCCESS,\r\n    userId,\r\n  };\r\n}\r\n\r\nfunction authLoginExistingUserFail() {\r\n  return { type: AUTH_LOGIN_EXISTING_USER_FAIL };\r\n}\r\n\r\nfunction authSignup(username, email, password) {\r\n  return {\r\n    type: AUTH_SIGNUP,\r\n    username,\r\n    email,\r\n    password,\r\n  };\r\n}\r\n\r\nfunction authSignupStart() {\r\n  return {\r\n    type: AUTH_SIGNUP_START,\r\n  };\r\n}\r\n\r\nfunction authSignupSuccess(userId) {\r\n  return {\r\n    type: AUTH_SIGNUP_SUCCESS,\r\n    userId,\r\n  };\r\n}\r\n\r\nfunction authSignupFail(error) {\r\n  return {\r\n    type: AUTH_SIGNUP_FAIL,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction authLogin(email, password) {\r\n  return {\r\n    type: AUTH_LOGIN,\r\n    email,\r\n    password,\r\n  };\r\n}\r\n\r\nfunction authLoginStart() {\r\n  return {\r\n    type: AUTH_LOGIN_START,\r\n  };\r\n}\r\n\r\nfunction authLoginSuccess(userId) {\r\n  return {\r\n    type: AUTH_LOGIN_SUCCESS,\r\n    userId,\r\n  };\r\n}\r\n\r\nfunction authLoginFail(error) {\r\n  return {\r\n    type: AUTH_LOGIN_FAIL,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction authLogout() {\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  };\r\n}\r\n\r\nfunction authLogoutStart() {\r\n  return {\r\n    type: AUTH_LOGOUT_START,\r\n  };\r\n}\r\n\r\nfunction authLogoutSuccess() {\r\n  return {\r\n    type: AUTH_LOGOUT_SUCCESS,\r\n  };\r\n}\r\n\r\nfunction authLogoutFail(error) {\r\n  return {\r\n    type: AUTH_LOGOUT_FAIL,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction authClearError() {\r\n  return {\r\n    type: AUTH_CLEAR_ERROR,\r\n  };\r\n}\r\n\r\nexport {\r\n  authLoginExistingUser,\r\n  authLoginExistingUserFail,\r\n  authLoginExistingUserSuccess,\r\n  authSignup,\r\n  authSignupStart,\r\n  authSignupSuccess,\r\n  authSignupFail,\r\n  authLogin,\r\n  authLoginStart,\r\n  authLoginSuccess,\r\n  authLoginFail,\r\n  authLogout,\r\n  authLogoutStart,\r\n  authLogoutSuccess,\r\n  authLogoutFail,\r\n  authClearError,\r\n};\r\n","import {\r\n  CREATE_EXAM_CHANGE_PART,\r\n  CREATE_EXAM_RESET,\r\n  CREATE_EXAM_TITLE,\r\n  CREATE_EXAM_QUESTIONS,\r\n  CREATE_EXAM_STUDENTS,\r\n  CREATE_EXAM,\r\n  CREATE_EXAM_START,\r\n  CREATE_EXAM_FAIL,\r\n  CREATE_EXAM_SUCCESS,\r\n  GET_EXAM,\r\n  GET_EXAM_START,\r\n  GET_EXAM_SUCCESS,\r\n  GET_EXAM_FAIL,\r\n  GET_USER_EXAMS,\r\n  GET_USER_EXAMS_START,\r\n  GET_USER_EXAMS_SUCCESS,\r\n  GET_USER_EXAMS_FAIL,\r\n  DELETE_EXAM,\r\n  DELETE_EXAM_START,\r\n  DELETE_EXAM_SUCCESS,\r\n  DELETE_EXAM_FAIL,\r\n  EDIT_EXAM_SELECT_EXAM,\r\n  EDIT_EXAM_RESET,\r\n  EDIT_EXAM_CHANGE_PART,\r\n  EDIT_EXAM_TITLE,\r\n  EDIT_EXAM_QUESTIONS,\r\n  EDIT_EXAM_STUDENTS,\r\n  EDIT_EXAM,\r\n  EDIT_EXAM_START,\r\n  EDIT_EXAM_FAIL,\r\n  EDIT_EXAM_SUCCESS,\r\n} from './examActionTypes';\r\n\r\nfunction createExamChangePart(examPart) {\r\n  return {\r\n    type: CREATE_EXAM_CHANGE_PART,\r\n    examPart,\r\n  };\r\n}\r\n\r\nfunction createExamReset() {\r\n  return {\r\n    type: CREATE_EXAM_RESET,\r\n  };\r\n}\r\n\r\nfunction createExamTitle(title) {\r\n  return {\r\n    type: CREATE_EXAM_TITLE,\r\n    title,\r\n  };\r\n}\r\n\r\nfunction createExamQuestions(questions) {\r\n  return {\r\n    type: CREATE_EXAM_QUESTIONS,\r\n    questions,\r\n  };\r\n}\r\n\r\nfunction createExamStudents(students) {\r\n  return {\r\n    type: CREATE_EXAM_STUDENTS,\r\n    students,\r\n  };\r\n}\r\n\r\nfunction createExam(exam) {\r\n  return {\r\n    type: CREATE_EXAM,\r\n    exam,\r\n  };\r\n}\r\n\r\nfunction createExamStart() {\r\n  return { type: CREATE_EXAM_START };\r\n}\r\n\r\nfunction createExamFail(error) {\r\n  return { type: CREATE_EXAM_FAIL, error };\r\n}\r\n\r\nfunction createExamSuccess() {\r\n  return { type: CREATE_EXAM_SUCCESS };\r\n}\r\n\r\nfunction getExam(examId) {\r\n  return {\r\n    type: GET_EXAM,\r\n    examId,\r\n  };\r\n}\r\n\r\nfunction getExamStart() {\r\n  return {\r\n    type: GET_EXAM_START,\r\n  };\r\n}\r\n\r\nfunction getExamSuccess(exam) {\r\n  return {\r\n    type: GET_EXAM_SUCCESS,\r\n    exam,\r\n  };\r\n}\r\n\r\nfunction getExamFail(error) {\r\n  return {\r\n    type: GET_EXAM_FAIL,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction getUserExams() {\r\n  return {\r\n    type: GET_USER_EXAMS,\r\n  };\r\n}\r\n\r\nfunction getUserExamsStart() {\r\n  return {\r\n    type: GET_USER_EXAMS_START,\r\n  };\r\n}\r\n\r\nfunction getUserExamsSuccess(exams) {\r\n  return {\r\n    type: GET_USER_EXAMS_SUCCESS,\r\n    exams,\r\n  };\r\n}\r\n\r\nfunction getUserExamsFail(error) {\r\n  return {\r\n    type: GET_USER_EXAMS_FAIL,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction deleteExam(examId) {\r\n  return {\r\n    type: DELETE_EXAM,\r\n    examId,\r\n  };\r\n}\r\n\r\nfunction deleteExamStart() {\r\n  return { type: DELETE_EXAM_START };\r\n}\r\n\r\nfunction deleteExamSuccess(deletedExamId) {\r\n  return { type: DELETE_EXAM_SUCCESS, deletedExamId };\r\n}\r\n\r\nfunction deleteExamFail(error) {\r\n  return { type: DELETE_EXAM_FAIL, error };\r\n}\r\n\r\nfunction editExamSelectExam(selectedExam) {\r\n  return { type: EDIT_EXAM_SELECT_EXAM, selectedExam };\r\n}\r\n\r\nfunction editExamReset() {\r\n  return { type: EDIT_EXAM_RESET };\r\n}\r\n\r\nfunction editExamChangePart(examPart) {\r\n  return {\r\n    type: EDIT_EXAM_CHANGE_PART,\r\n    examPart,\r\n  };\r\n}\r\n\r\nfunction editExamTitle(title) {\r\n  return {\r\n    type: EDIT_EXAM_TITLE,\r\n    title,\r\n  };\r\n}\r\n\r\nfunction editExamQuestions(questions) {\r\n  return {\r\n    type: EDIT_EXAM_QUESTIONS,\r\n    questions,\r\n  };\r\n}\r\n\r\nfunction editExamStudents(students) {\r\n  return {\r\n    type: EDIT_EXAM_STUDENTS,\r\n    students,\r\n  };\r\n}\r\n\r\nfunction editExam(exam, examPartsBeingEdited) {\r\n  return {\r\n    type: EDIT_EXAM,\r\n    exam,\r\n    examPartsBeingEdited,\r\n  };\r\n}\r\n\r\nfunction editExamStart() {\r\n  return { type: EDIT_EXAM_START };\r\n}\r\n\r\nfunction editExamFail(error) {\r\n  return { type: EDIT_EXAM_FAIL, error };\r\n}\r\n\r\nfunction editExamSuccess() {\r\n  return { type: EDIT_EXAM_SUCCESS };\r\n}\r\n\r\nexport {\r\n  createExamChangePart,\r\n  createExamReset,\r\n  createExamTitle,\r\n  createExamQuestions,\r\n  createExamStudents,\r\n  createExam,\r\n  createExamStart,\r\n  createExamFail,\r\n  createExamSuccess,\r\n  getExam,\r\n  getExamStart,\r\n  getExamSuccess,\r\n  getExamFail,\r\n  getUserExams,\r\n  getUserExamsStart,\r\n  getUserExamsFail,\r\n  getUserExamsSuccess,\r\n  deleteExam,\r\n  deleteExamStart,\r\n  deleteExamSuccess,\r\n  deleteExamFail,\r\n  editExamSelectExam,\r\n  editExamReset,\r\n  editExamChangePart,\r\n  editExamTitle,\r\n  editExamQuestions,\r\n  editExamStudents,\r\n  editExam,\r\n  editExamStart,\r\n  editExamFail,\r\n  editExamSuccess,\r\n};\r\n","import { put } from 'redux-saga/effects';\r\nimport {\r\n  authLoginExistingUserSuccess,\r\n  authLoginExistingUserFail,\r\n  authSignupStart,\r\n  authSignupSuccess,\r\n  authSignupFail,\r\n  authLoginStart,\r\n  authLoginSuccess,\r\n  authLoginFail,\r\n  authLogoutStart,\r\n  authLogoutSuccess,\r\n  authLogoutFail,\r\n} from '../actions/index';\r\nconst { REACT_APP_API } = process.env;\r\n\r\nfunction* authLoginExistingUserSaga() {\r\n  try {\r\n    const res = yield fetch(`${REACT_APP_API}/api/v1/users`);\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    yield put(authLoginExistingUserSuccess(parsedRes.user._id));\r\n  } catch (err) {\r\n    yield put(authLoginExistingUserFail());\r\n  }\r\n}\r\n\r\nfunction* authSignupSaga(action) {\r\n  yield put(authSignupStart());\r\n  const { username, email, password } = action;\r\n  const user = {\r\n    username,\r\n    email,\r\n    password,\r\n  };\r\n  try {\r\n    const res = yield fetch(`${REACT_APP_API}/api/v1/users/signup`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    const {\r\n      newUser: { _id },\r\n    } = parsedRes;\r\n    yield put(authSignupSuccess(_id));\r\n  } catch (err) {\r\n    yield put(authSignupFail(err.message));\r\n  }\r\n}\r\n\r\nfunction* authLoginSaga(action) {\r\n  yield put(authLoginStart());\r\n  const { email, password } = action;\r\n  const user = {\r\n    email,\r\n    password,\r\n  };\r\n  try {\r\n    const res = yield fetch(`${REACT_APP_API}/api/v1/users/login`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(user),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    const {\r\n      user: { _id },\r\n    } = parsedRes;\r\n    yield put(authLoginSuccess(_id));\r\n  } catch (err) {\r\n    yield put(authLoginFail(err.message));\r\n  }\r\n}\r\n\r\nfunction* authLogoutSaga() {\r\n  yield put(authLogoutStart());\r\n  try {\r\n    const res = yield fetch(`${REACT_APP_API}/api/v1/users/logout`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    yield put(authLogoutSuccess());\r\n  } catch (err) {\r\n    yield put(authLogoutFail(err.message));\r\n  }\r\n}\r\n\r\nexport {\r\n  authLoginExistingUserSaga,\r\n  authSignupSaga,\r\n  authLoginSaga,\r\n  authLogoutSaga,\r\n};\r\n","function isQuestionEdited(originalQuestion, newQuestion) {\r\n  const isQuestionNameEdited = originalQuestion.name !== newQuestion.name;\r\n  const isQuestionTypeEdited = originalQuestion.type !== newQuestion.type;\r\n  const isQuestionAnswerEdited =\r\n    originalQuestion.answer.some(\r\n      (answer, i) => answer !== newQuestion.answer[i],\r\n    ) ||\r\n    newQuestion.answer.some(\r\n      (answer, i) => answer !== originalQuestion.answer[i],\r\n    );\r\n  const areQuestionOptionIdsEdited =\r\n    originalQuestion.options.some(\r\n      (opt, i) => opt.optionId !== newQuestion.options[i].optionId,\r\n    ) ||\r\n    newQuestion.options.some(\r\n      (opt, i) => opt.optionId !== originalQuestion.options[i].optionId,\r\n    );\r\n  const areQuestionOptionNamesEdited =\r\n    originalQuestion.options.some(\r\n      (opt, i) => opt.name !== newQuestion.options[i].name,\r\n    ) ||\r\n    newQuestion.options.some(\r\n      (opt, i) => opt.name !== originalQuestion.options[i].name,\r\n    );\r\n\r\n  return [\r\n    isQuestionNameEdited,\r\n    isQuestionTypeEdited,\r\n    isQuestionAnswerEdited,\r\n    areQuestionOptionIdsEdited,\r\n    areQuestionOptionNamesEdited,\r\n  ].some((isQuestionPartEdited) => isQuestionPartEdited);\r\n}\r\n\r\nfunction howHaveQuestionsBeenEdited(originalQuestions, newQuestions) {\r\n  const originalQuestionIds = originalQuestions.map((question) => question.id);\r\n  const newQuestionIds = newQuestions.map((question) => question.id);\r\n\r\n  const deletedQuestions = originalQuestionIds.filter(\r\n    (questionId) => !newQuestionIds.includes(questionId),\r\n  );\r\n\r\n  const addedQuestions = newQuestionIds.filter(\r\n    (questionId) => !originalQuestionIds.includes(questionId),\r\n  );\r\n\r\n  const originalQuestionsWithDeletions = originalQuestions.filter(\r\n    (question) => !deletedQuestions.includes(question.id),\r\n  );\r\n  const editedQuestions = originalQuestionsWithDeletions\r\n    .filter((question) => {\r\n      const newQuestion = newQuestions.find(\r\n        (newQuestion) => newQuestion.id === question.id,\r\n      );\r\n      return isQuestionEdited(question, newQuestion);\r\n    })\r\n    .map((question) => question.id);\r\n\r\n  return { deletedQuestions, addedQuestions, editedQuestions };\r\n}\r\n\r\nfunction howHaveStudentsBeenEdited(originalStudents, newStudents) {\r\n  const originalStudentIds = originalStudents.map((student) => student._id);\r\n  const newStudentIds = newStudents.map((student) => student.id);\r\n\r\n  const deletedStudents = originalStudentIds.filter(\r\n    (studentId) => !newStudentIds.includes(studentId),\r\n  );\r\n\r\n  const addedStudents = newStudentIds.filter(\r\n    (studentId) => !originalStudentIds.includes(studentId),\r\n  );\r\n\r\n  const originalStudentsWithDeletions = originalStudents.filter(\r\n    (student) => !deletedStudents.includes(student._id),\r\n  );\r\n  const editedStudents = originalStudentsWithDeletions\r\n    .filter((student) => {\r\n      const newStudentName = newStudents.find(\r\n        (newStudent) => newStudent.id === student.id,\r\n      ).name;\r\n      return newStudentName !== student.name;\r\n    })\r\n    .map((student) => student.id);\r\n\r\n  return { deletedStudents, addedStudents, editedStudents };\r\n}\r\n\r\nexport { howHaveQuestionsBeenEdited, howHaveStudentsBeenEdited };\r\n","import { put } from 'redux-saga/effects';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport {\r\n  createExamStart,\r\n  createExamFail,\r\n  createExamSuccess,\r\n  getExamStart,\r\n  getExamFail,\r\n  getExamSuccess,\r\n  getUserExamsStart,\r\n  getUserExamsFail,\r\n  getUserExamsSuccess,\r\n  deleteExamStart,\r\n  deleteExamSuccess,\r\n  deleteExamFail,\r\n  editExamStart,\r\n  editExamFail,\r\n  editExamSuccess,\r\n} from '../actions/index';\r\nimport {\r\n  howHaveQuestionsBeenEdited,\r\n  howHaveStudentsBeenEdited,\r\n} from './helper';\r\n\r\nfunction* createExamSaga(action) {\r\n  try {\r\n    yield put(createExamStart());\r\n    const createdExam = clonedeep(action.exam);\r\n\r\n    const userRes = yield fetch('/api/v1/users');\r\n    const parsedUserRes = yield userRes.json();\r\n    if (!userRes.ok) {\r\n      throw Error(parsedUserRes.error);\r\n    }\r\n    createdExam.creator = parsedUserRes.user._id;\r\n\r\n    const res = yield fetch('/api/v1/exams', {\r\n      method: 'POST',\r\n      body: JSON.stringify(createdExam),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    yield put(createExamSuccess());\r\n  } catch (err) {\r\n    yield put(createExamFail('Something went wrong. :('));\r\n  }\r\n}\r\n\r\nfunction* getExamSaga(action) {\r\n  try {\r\n    yield put(getExamStart());\r\n    const res = yield fetch(`/api/v1/exams/${action.examId}`);\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    yield put(getExamSuccess(parsedRes.exam));\r\n  } catch (err) {\r\n    yield put(getExamFail('Something went wrong. :('));\r\n  }\r\n}\r\n\r\nfunction* getUserExamsSaga() {\r\n  try {\r\n    yield put(getUserExamsStart());\r\n    const res = yield fetch('/api/v1/users/exams');\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    yield put(getUserExamsSuccess(parsedRes.exams));\r\n  } catch (err) {\r\n    yield put(getUserExamsFail('Something went wrong. :('));\r\n  }\r\n}\r\n\r\nfunction* deleteExamSaga(action) {\r\n  try {\r\n    yield put(deleteExamStart());\r\n    const res = yield fetch(`/api/v1/exams/${action.examId}`, {\r\n      method: 'DELETE',\r\n    });\r\n    const parsedRes = yield res.json();\r\n    if (!res.ok) {\r\n      throw Error(parsedRes.error);\r\n    }\r\n    yield put(deleteExamSuccess(action.examId));\r\n  } catch (err) {\r\n    yield put(deleteExamFail('Something went wrong. :('));\r\n  }\r\n}\r\n\r\nfunction* editExamSaga(action) {\r\n  try {\r\n    yield put(editExamStart());\r\n    const { exam, examPartsBeingEdited } = action;\r\n    if (examPartsBeingEdited.title) {\r\n      const res = yield fetch(`/api/v1/exams/${exam._id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({ title: examPartsBeingEdited.title }),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      const parsedRes = yield res.json();\r\n      if (!res.ok) {\r\n        throw Error(parsedRes.error);\r\n      }\r\n    }\r\n\r\n    if (examPartsBeingEdited.questions.length !== 0) {\r\n      const {\r\n        deletedQuestions,\r\n        addedQuestions,\r\n        editedQuestions,\r\n      } = howHaveQuestionsBeenEdited(\r\n        exam.questions,\r\n        examPartsBeingEdited.questions,\r\n      );\r\n\r\n      for (let i = 0; i < deletedQuestions.length; i++) {\r\n        const res = yield fetch(`api/v1/exams/questions/${exam._id}`, {\r\n          method: 'DELETE',\r\n          body: JSON.stringify({ questionId: deletedQuestions[i] }),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const parsedRes = yield res.json();\r\n        if (!res.ok) {\r\n          throw Error(parsedRes.error);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < addedQuestions.length; i++) {\r\n        let body = examPartsBeingEdited.questions.find(\r\n          (question) => question.id === addedQuestions[i],\r\n        );\r\n        body.type = body.type === 'trueOrFalse' ? 'true_false' : body.type;\r\n        const res = yield fetch(`api/v1/exams/questions/${exam._id}`, {\r\n          method: 'POST',\r\n          body: JSON.stringify(body),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const parsedRes = yield res.json();\r\n        if (!res.ok) {\r\n          throw Error(parsedRes.error);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < editedQuestions.length; i++) {\r\n        let body = examPartsBeingEdited.questions.find(\r\n          (question) => question.id === editedQuestions[i],\r\n        );\r\n        body.questionId = body.id;\r\n        body.type = body.type === 'trueOrFalse' ? 'true_false' : body.type;\r\n\r\n        const res = yield fetch(`api/v1/exams/questions/${exam._id}`, {\r\n          method: 'PUT',\r\n          body: JSON.stringify(body),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const parsedRes = yield res.json();\r\n        if (!res.ok) {\r\n          throw Error(parsedRes.error);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (examPartsBeingEdited.students.length !== 0) {\r\n      const {\r\n        deletedStudents,\r\n        addedStudents,\r\n        editedStudents,\r\n      } = howHaveStudentsBeenEdited(\r\n        exam.students,\r\n        examPartsBeingEdited.students,\r\n      );\r\n\r\n      for (let i = 0; i < deletedStudents.length; i++) {\r\n        const res = yield fetch(`api/v1/exams/students/${exam._id}`, {\r\n          method: 'DELETE',\r\n          body: JSON.stringify({ studentId: deletedStudents[i] }),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const parsedRes = yield res.json();\r\n        if (!res.ok) {\r\n          throw Error(parsedRes.error);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < addedStudents.length; i++) {\r\n        const newStudent = examPartsBeingEdited.students.find(\r\n          (student) => student.id === addedStudents[i],\r\n        );\r\n        const res = yield fetch(`api/v1/exams/students/${exam._id}`, {\r\n          method: 'POST',\r\n          body: JSON.stringify({ name: newStudent.name }),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const parsedRes = yield res.json();\r\n        if (!res.ok) {\r\n          throw Error(parsedRes.error);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < editedStudents.length; i++) {\r\n        const editedStudent = examPartsBeingEdited.students.find(\r\n          (student) => student.id === editedStudents[i],\r\n        );\r\n        const res = yield fetch(`api/v1/exams/students/${exam._id}`, {\r\n          method: 'PUT',\r\n          body: JSON.stringify({\r\n            studentId: editedStudent.id,\r\n            name: editedStudent.name,\r\n          }),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const parsedRes = yield res.json();\r\n        if (!res.ok) {\r\n          throw Error(parsedRes.error);\r\n        }\r\n      }\r\n    }\r\n\r\n    yield put(editExamSuccess());\r\n  } catch (err) {\r\n    yield put(editExamFail('Something went wrong. :('));\r\n  }\r\n}\r\n\r\nexport {\r\n  createExamSaga,\r\n  getExamSaga,\r\n  getUserExamsSaga,\r\n  deleteExamSaga,\r\n  editExamSaga,\r\n};\r\n","import { takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  authLoginExistingUserSaga,\r\n  authSignupSaga,\r\n  authLoginSaga,\r\n  authLogoutSaga,\r\n} from './auth';\r\nimport {\r\n  createExamSaga,\r\n  getExamSaga,\r\n  getUserExamsSaga,\r\n  deleteExamSaga,\r\n  editExamSaga,\r\n} from './exam';\r\nimport {\r\n  AUTH_LOGIN_EXISTING_USER,\r\n  AUTH_SIGNUP,\r\n  AUTH_LOGIN,\r\n  AUTH_LOGOUT,\r\n} from '../actions/authActionTypes';\r\nimport {\r\n  CREATE_EXAM,\r\n  GET_EXAM,\r\n  GET_USER_EXAMS,\r\n  DELETE_EXAM,\r\n  EDIT_EXAM,\r\n} from '../actions/examActionTypes';\r\n\r\nfunction* watchAuth() {\r\n  yield takeEvery(AUTH_LOGIN_EXISTING_USER, authLoginExistingUserSaga);\r\n  yield takeEvery(AUTH_SIGNUP, authSignupSaga);\r\n  yield takeEvery(AUTH_LOGIN, authLoginSaga);\r\n  yield takeEvery(AUTH_LOGOUT, authLogoutSaga);\r\n}\r\n\r\nfunction* watchExam() {\r\n  yield takeEvery(CREATE_EXAM, createExamSaga);\r\n  yield takeEvery(GET_EXAM, getExamSaga);\r\n  yield takeEvery(GET_USER_EXAMS, getUserExamsSaga);\r\n  yield takeEvery(DELETE_EXAM, deleteExamSaga);\r\n  yield takeEvery(EDIT_EXAM, editExamSaga);\r\n}\r\n\r\nexport { watchAuth, watchExam };\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport './LoadingButton.css';\r\n\r\nconst LoadingButton = (props) => {\r\n  return (\r\n    <Button\r\n      onClick={props.type === 'button' ? props.onClickFunc : () => {}}\r\n      className=\"LoadingButton\"\r\n      variant={props.variant}\r\n      type={props.type}\r\n      size={props.size}\r\n    >\r\n      <div className={`spinner ${!props.loading ? 'invisible' : ''}`}>\r\n        <Spinner as=\"span\" animation=\"border\" />\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <div className={props.loading ? 'invisible' : ''}>{props.children}</div>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { connect } from 'react-redux';\r\nimport { authLogout } from '../../store/actions/index';\r\nimport LoadingButton from '../common/LoadingButton/LoadingButton';\r\nimport './NavigationBar.css';\r\n\r\nclass NavigationBar extends React.Component {\r\n  state = {\r\n    isWindowMobileSize: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateIsWindowMobileSize.bind(this));\r\n    this.updateIsWindowMobileSize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateIsWindowMobileSize);\r\n  }\r\n\r\n  updateIsWindowMobileSize = () => {\r\n    let isCurrentWindowMobileSize = window.innerWidth <= 500;\r\n    if (isCurrentWindowMobileSize !== this.state.isWindowMobileSize) {\r\n      this.setState({ isWindowMobileSize: window.innerWidth <= 500 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isUserLoggedIn,\r\n      location: { pathname },\r\n    } = this.props;\r\n\r\n    let authenticatedNavItems = (\r\n      <Nav className=\"ml-auto\">\r\n        <Nav.Link\r\n          as={Link}\r\n          to=\"/create-exam\"\r\n          active={pathname === '/create-exam'}\r\n        >\r\n          Create A Exam\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} to=\"/edit-exam\" active={pathname === '/edit-exam'}>\r\n          Edit A Exam\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} to=\"/exams\" active={pathname === '/exams'}>\r\n          Exams\r\n        </Nav.Link>\r\n        <LoadingButton\r\n          variant=\"outline-info\"\r\n          type=\"button\"\r\n          onClickFunc={() => this.props.onLogout()}\r\n          loading={this.props.loading}\r\n          size=\"md\"\r\n          classes=\"\"\r\n        >\r\n          Logout\r\n        </LoadingButton>\r\n      </Nav>\r\n    );\r\n\r\n    let unauthenticatedNavItems = (\r\n      <Nav className=\"ml-auto\">\r\n        <Nav.Link\r\n          as={Link}\r\n          to=\"/create-exam\"\r\n          active={pathname === '/create-exam'}\r\n        >\r\n          Create A Exam\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} to=\"/auth\" active={pathname === '/auth'}>\r\n          Login/Signup\r\n        </Nav.Link>\r\n      </Nav>\r\n    );\r\n\r\n    if (this.state.isWindowMobileSize) {\r\n      authenticatedNavItems = (\r\n        <DropdownButton\r\n          alignRight\r\n          className=\"ml-auto\"\r\n          id=\"dropdown-button\"\r\n          title=\"Menu\"\r\n          variant=\"info\"\r\n        >\r\n          <Dropdown.Item\r\n            as={Link}\r\n            to=\"/create-exam\"\r\n            active={pathname === '/create-exam'}\r\n          >\r\n            Create A Exam\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            as={Link}\r\n            to=\"/edit-exam\"\r\n            active={pathname === '/edit-exam'}\r\n          >\r\n            Edit A Exam\r\n          </Dropdown.Item>\r\n          <Dropdown.Item as={Link} to=\"/exams\" active={pathname === '/exams'}>\r\n            Exams\r\n          </Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item onClick={() => this.props.onLogout}>\r\n            Logout\r\n          </Dropdown.Item>\r\n        </DropdownButton>\r\n      );\r\n\r\n      unauthenticatedNavItems = (\r\n        <DropdownButton\r\n          alignRight\r\n          className=\"ml-auto\"\r\n          id=\"dropdown-button\"\r\n          title=\"Menu\"\r\n          variant=\"info\"\r\n        >\r\n          <Dropdown.Item\r\n            as={Link}\r\n            to=\"/create-exam\"\r\n            active={pathname === '/create-exam'}\r\n          >\r\n            Create A Exam\r\n          </Dropdown.Item>\r\n          <Dropdown.Item as={Link} to=\"/auth\" active={pathname === '/auth'}>\r\n            Login/Signup\r\n          </Dropdown.Item>\r\n        </DropdownButton>\r\n      );\r\n    }\r\n    return (\r\n      <Navbar variant=\"light\" className=\"NavigationBar\">\r\n        <Navbar.Brand className=\"NavBarBrand\">Exam Creator</Navbar.Brand>\r\n        {isUserLoggedIn ? authenticatedNavItems : unauthenticatedNavItems}\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isUserLoggedIn, loading } = state.auth;\r\n  return {\r\n    isUserLoggedIn,\r\n    loading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onLogout: () => dispatch(authLogout()),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withRouter(NavigationBar));\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { authSignup, authClearError } from '../../../store/actions/index';\r\nimport LoadingButton from '../../common/LoadingButton/LoadingButton';\r\nimport './Signup.css';\r\n\r\nclass Signup extends React.Component {\r\n  componentWillUnmount() {\r\n    this.props.onClearError();\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      username: e.target[0].value,\r\n      email: e.target[1].value,\r\n      password: e.target[2].value,\r\n    };\r\n    this.props.onSignup(user);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Signup\">\r\n        {this.props.error ? (\r\n          <Alert variant=\"info\">\r\n            <span>&#9888; </span>\r\n            {this.props.error}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <h1>Signup</h1>\r\n        <Link to=\"/login\">Already have an account?</Link>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username:</Form.Label>\r\n            <Form.Control type=\"username\" placeholder=\"Username\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Email\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password:</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n          <LoadingButton\r\n            variant=\"info\"\r\n            type=\"submit\"\r\n            loading={this.props.loading}\r\n            size=\"md\"\r\n            classes=\"\"\r\n          >\r\n            Signup\r\n          </LoadingButton>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isUserLoggedIn, userId, loading, error } = state.auth;\r\n  return {\r\n    isUserLoggedIn,\r\n    userId,\r\n    loading,\r\n    error,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onSignup: ({ username, email, password }) =>\r\n      dispatch(authSignup(username, email, password)),\r\n    onClearError: () => dispatch(authClearError()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Form from 'react-bootstrap/Form';\r\nimport LoadingButton from '../../common/LoadingButton/LoadingButton';\r\nimport { authLogin, authClearError } from '../../../store/actions/index';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n  componentWillUnmount() {\r\n    this.props.onClearError();\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: e.target[0].value,\r\n      password: e.target[1].value,\r\n    };\r\n    this.props.onLogin(user);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        {this.props.error ? (\r\n          <Alert variant=\"info\">\r\n            <span>&#9888; </span>\r\n            {this.props.error}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <h1>Login</h1>\r\n        <Link to=\"/auth\">Haven't made an account?</Link>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Email\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password:</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n          <LoadingButton\r\n            variant=\"info\"\r\n            type=\"submit\"\r\n            loading={this.props.loading}\r\n            size=\"md\"\r\n            classes=\"\"\r\n          >\r\n            Login\r\n          </LoadingButton>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const {\r\n    auth: { isUserLoggedIn, error, loading },\r\n  } = state;\r\n  return { isUserLoggedIn, error, loading };\r\n}\r\n\r\nfunction mapDispatchtoProps(dispatch) {\r\n  return {\r\n    onLogin: ({ email, password }) => dispatch(authLogin(email, password)),\r\n    onClearError: () => dispatch(authClearError()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(Login);\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './CreateAExamStart.css';\r\n\r\nclass CreateAExamStart extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"CreateAExamStart\">\r\n        <div\r\n          className={`${\r\n            this.props.isUserLoggedIn ? 'title' : 'titleAndIntroduction'\r\n          }`}\r\n        >\r\n          <h1>Create A Exam</h1>\r\n          {!this.props.isUserLoggedIn ? (\r\n            <p>\r\n              You cannot save your exam until you login or create a account.\r\n            </p>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n        <Button size=\"lg\" variant=\"info\" onClick={this.props.nextExamPart}>\r\n          Start\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAExamStart;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './WorkOnExamTitle.css';\r\n\r\nclass WorkOnExamTitle extends React.Component {\r\n  state = {\r\n    title: this.props.examTitle,\r\n    hasTitleChanged: false,\r\n  };\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({\r\n      title: e.target.value,\r\n      hasTitleChanged: true,\r\n    });\r\n    this.props.changeNextBtn(/^\\s*$/.test(e.target.value));\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.completeExamTitle(this.state.title, this.state.hasTitleChanged);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"WorkOnExamTitle\">\r\n        <h1>{this.props.heading}</h1>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Control\r\n            value={this.state.title}\r\n            onChange={this.handleTitleChange}\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n          />\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkOnExamTitle;\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './CreateStudent.css';\r\n\r\nclass CreateStudent extends React.Component {\r\n  state = {\r\n    studentName: '',\r\n    error: '',\r\n  };\r\n\r\n  handleStudentNameChange = (e) => {\r\n    this.setState({ studentName: e.target.value });\r\n  };\r\n\r\n  handleCreatingStudent = () => {\r\n    const student = {\r\n      name: this.state.studentName,\r\n      id: shortid.generate(),\r\n    };\r\n    const isNameEmpty = /^\\s*$/.test(student.name);\r\n    if (isNameEmpty) {\r\n      this.setState({\r\n        error: 'Your student must have a name.',\r\n      });\r\n    } else {\r\n      this.props.onCreateStudent(student);\r\n      this.setState({\r\n        studentName: '',\r\n        error: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreateStudent\">\r\n        <div className=\"scrollOnOverflow\">\r\n          <h2>Create Student</h2>\r\n          {this.state.error ? (\r\n            <Alert variant=\"info\">\r\n              <span>&#9888; </span>\r\n              {this.state.error}\r\n            </Alert>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control\r\n              onChange={this.handleStudentNameChange}\r\n              placeholder=\"Name\"\r\n              value={this.state.studentName}\r\n              type=\"text\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button onClick={this.handleCreatingStudent} variant=\"info\">\r\n            Create Student\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateStudent;\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './EditStudent.css';\r\n\r\nclass EditStudent extends React.Component {\r\n  state = {\r\n    studentName: this.props.student.name,\r\n    error: '',\r\n  };\r\n\r\n  handleStudentNameChange = (e) => {\r\n    this.setState({ studentName: e.target.value });\r\n  };\r\n\r\n  handleEditingStudent = () => {\r\n    const student = {\r\n      name: this.state.studentName,\r\n      id: this.props.student.id,\r\n    };\r\n    const isNameEmpty = /^\\s*$/.test(student.name);\r\n    if (isNameEmpty) {\r\n      this.setState({\r\n        error: 'Your student must have a name.',\r\n      });\r\n    } else {\r\n      this.props.editStudent(student);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditStudent\">\r\n        <div className=\"scrollOnOverflow\">\r\n          <h2>Edit Student</h2>\r\n          {this.state.error ? (\r\n            <Alert variant=\"info\">\r\n              <span>&#9888; </span>\r\n              {this.state.error}\r\n            </Alert>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control\r\n              onChange={this.handleStudentNameChange}\r\n              placeholder=\"Name\"\r\n              value={this.state.studentName}\r\n              type=\"text\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button onClick={this.handleEditingStudent} variant=\"info\">\r\n            Edit Student\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditStudent;\r\n","import React from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './StudentsSoFar.css';\r\n\r\nconst StudentsSoFar = (props) => {\r\n  function handleTabChange() {\r\n    if (window.innerWidth <= 500) {\r\n      props.changeTab('workOnStudent');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"StudentsSoFar\">\r\n      <div className=\"scrollOnOverflow\">\r\n        <h2>Students So Far</h2>\r\n        <Accordion>\r\n          {props.students.map((student, index) => {\r\n            return (\r\n              <Card key={student.id}>\r\n                <Accordion.Toggle as={Card.Header} eventKey={index}>\r\n                  {index + 1}. {student.name}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={index}>\r\n                  <Card.Body>\r\n                    <Button\r\n                      onClick={() => {\r\n                        handleTabChange();\r\n                        props.editStudentStart(student);\r\n                      }}\r\n                      variant=\"info\"\r\n                      block\r\n                    >\r\n                      Edit Student\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => props.deleteStudent(student.id)}\r\n                      variant=\"danger\"\r\n                      block\r\n                    >\r\n                      Delete Student\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentsSoFar;\r\n","import React from 'react';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport CreateStudent from './CreateStudent/CreateStudent';\r\nimport EditStudent from './EditStudent/EditStudent';\r\nimport StudentsSoFar from './StudentsSoFar/StudentsSoFar';\r\nimport './WorkOnExamStudents.css';\r\n\r\nclass WorkOnExamStudents extends React.Component {\r\n  state = {\r\n    students: this.props.examStudents,\r\n    studentToBeEdited: {},\r\n    isWindowMobileSize: false,\r\n    currentActiveTab: 'workOnStudent',\r\n    hasStudentsChanged: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateIsWindowMobileSize.bind(this));\r\n    this.updateIsWindowMobileSize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.completeExamStudents(\r\n      this.state.students,\r\n      this.state.hasStudentsChanged,\r\n    );\r\n    window.removeEventListener('resize', this.updateIsWindowMobileSize);\r\n  }\r\n\r\n  updateIsWindowMobileSize = () => {\r\n    let isCurrentWindowMobileSize = window.innerWidth <= 500;\r\n    if (isCurrentWindowMobileSize !== this.state.isWindowMobileSize) {\r\n      this.setState({ isWindowMobileSize: window.innerWidth <= 500 });\r\n    }\r\n  };\r\n\r\n  changeTab = (tab) => {\r\n    this.setState({ currentActiveTab: tab });\r\n  };\r\n\r\n  editStudent = (student) => {\r\n    const students = clonedeep(this.state.students);\r\n    const editedStudent = clonedeep(student);\r\n    const editedStudents = students.map((student) => {\r\n      if (student.id === editedStudent.id) {\r\n        return editedStudent;\r\n      } else {\r\n        return student;\r\n      }\r\n    });\r\n    this.setState({\r\n      students: editedStudents,\r\n      hasStudentsChanged: true,\r\n      studentToBeEdited: {},\r\n    });\r\n  };\r\n\r\n  addStudent = (student) => {\r\n    const students = clonedeep(this.state.students);\r\n    students.push(student);\r\n    this.setState({ students, hasStudentsChanged: true });\r\n  };\r\n\r\n  deleteStudent = (studentId) => {\r\n    const students = clonedeep(this.state.students);\r\n    const editedStudents = students.filter(\r\n      (student) => student.id !== studentId,\r\n    );\r\n    if (this.state.studentToBeEdited.id === studentId) {\r\n      this.setState({\r\n        questions: editedStudents,\r\n        studentToBeEdited: {},\r\n        hasStudentsChanged: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        students: editedStudents,\r\n        hasStudentsChanged: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  startEditingStudent = (studentToBeEdited) => {\r\n    this.setState({\r\n      studentToBeEdited,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let workOnExamStudentsMain = (\r\n      <div className=\"WorkOnExamStudentsMain\">\r\n        <StudentsSoFar\r\n          editStudentStart={this.startEditingStudent}\r\n          students={this.state.students}\r\n          deleteStudent={this.deleteStudent}\r\n        />\r\n        {this.state.studentToBeEdited.id ? (\r\n          <EditStudent\r\n            student={this.state.studentToBeEdited}\r\n            editStudent={this.editStudent}\r\n            key={this.state.studentToBeEdited.id}\r\n          />\r\n        ) : (\r\n          <CreateStudent onCreateStudent={this.addStudent} />\r\n        )}\r\n      </div>\r\n    );\r\n    if (window.innerWidth <= 500) {\r\n      workOnExamStudentsMain = (\r\n        <div className=\"MobileWorkOnExamStudentsMain\">\r\n          <Tabs\r\n            activeKey={this.state.currentActiveTab}\r\n            onSelect={this.changeTab}\r\n          >\r\n            <Tab\r\n              eventKey=\"workOnStudent\"\r\n              title={\r\n                this.state.studentToBeEdited.id\r\n                  ? 'Edit Student'\r\n                  : 'Create Student'\r\n              }\r\n            >\r\n              {this.state.studentToBeEdited.id ? (\r\n                <EditStudent\r\n                  student={this.state.studentToBeEdited}\r\n                  editStudent={this.editStudent}\r\n                  key={this.state.studentToBeEdited.id}\r\n                />\r\n              ) : (\r\n                <CreateStudent onCreateStudent={this.addStudent} />\r\n              )}\r\n            </Tab>\r\n            <Tab eventKey=\"students\" title=\"Students So Far\">\r\n              <StudentsSoFar\r\n                editStudentStart={this.startEditingStudent}\r\n                students={this.state.students}\r\n                deleteStudent={this.deleteStudent}\r\n                changeTab={this.changeTab}\r\n              />\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"WorkOnExamStudents\">\r\n        <h1>{this.props.heading}</h1>\r\n        <p>\r\n          Each person that is given the link to your exam will need to choose\r\n          his or her name from your student list.\r\n        </p>\r\n        {workOnExamStudentsMain}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkOnExamStudents;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './MultipleQuestionOptionsForm.css';\r\n\r\nconst MultipleQuestionOptionsForm = (props) => {\r\n  function handleOptionAnswerChange(e) {\r\n    const inputId = e.target.getAttribute('data-id');\r\n    const childInput = e.target.querySelector('input');\r\n    if (inputId) {\r\n      props.onChangeOptionAnswer(inputId);\r\n    } else {\r\n      props.onChangeOptionAnswer(childInput.getAttribute('data-id'));\r\n    }\r\n  }\r\n\r\n  function handleOptionNameChange(e) {\r\n    props.onChangeOptionName(e.target.getAttribute('data-id'), e.target.value);\r\n  }\r\n\r\n  function handleOptionDelete(e) {\r\n    props.onDeleteOption(e.target.getAttribute('data-id'));\r\n  }\r\n\r\n  function handleOptionAdd(e) {\r\n    props.onAddOption(e.target.getAttribute('data-id'));\r\n  }\r\n\r\n  return (\r\n    <div className=\"MultipleQuestionOptionsForm\">\r\n      <Form.Label>\r\n        {props.areOptionsBeingEdited ? 'Edit' : 'Create'} Your Options:\r\n      </Form.Label>\r\n      <p>\r\n        Add or delete as many question options as you would like. Check the\r\n        correct options.\r\n      </p>\r\n      {props.questionOptions.map((opt) => (\r\n        <InputGroup key={`option-${opt.optionId}`}>\r\n          <InputGroup.Prepend onClick={handleOptionAnswerChange}>\r\n            {props.questionType === 'checkbox' ? (\r\n              <InputGroup.Checkbox\r\n                checked={opt.answer === true}\r\n                name=\"answer\"\r\n                data-id={opt.optionId}\r\n                onChange={handleOptionAnswerChange}\r\n              />\r\n            ) : (\r\n              <InputGroup.Radio\r\n                data-id={opt.optionId}\r\n                checked={opt.answer === true}\r\n                name=\"answer\"\r\n                onChange={handleOptionAnswerChange}\r\n              />\r\n            )}\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            data-id={opt.optionId}\r\n            onChange={handleOptionNameChange}\r\n            value={opt.name}\r\n            name=\"option\"\r\n          />\r\n          <InputGroup.Append>\r\n            <Button\r\n              variant=\"success\"\r\n              data-id={opt.optionId}\r\n              onClick={handleOptionAdd}\r\n            >\r\n              +\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              data-id={opt.optionId}\r\n              onClick={handleOptionDelete}\r\n            >\r\n              &times;\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleQuestionOptionsForm;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './TrueOrFalseQuestionForm.css';\r\n\r\nconst TrueOrFalseQuestionForm = (props) => {\r\n  function handleAnswerChange(e) {\r\n    const value = e.target.value;\r\n    const answer = value === 'true';\r\n    props.onChangeAnswer(answer);\r\n  }\r\n\r\n  return (\r\n    <div className=\"TrueOrFalseQuestionForm\">\r\n      <Form.Group>\r\n        <Form.Label>What's the correct answer?</Form.Label>\r\n        <div className=\"radio\">\r\n          <Form.Check\r\n            value=\"true\"\r\n            name=\"trueOrFalse\"\r\n            type=\"radio\"\r\n            inline\r\n            label=\"true\"\r\n            checked={props.questionAnswer === true}\r\n            onChange={handleAnswerChange}\r\n          />\r\n          <Form.Check\r\n            value=\"false\"\r\n            name=\"trueOrFalse\"\r\n            type=\"radio\"\r\n            inline\r\n            label=\"false\"\r\n            checked={props.questionAnswer === false}\r\n            onChange={handleAnswerChange}\r\n          />\r\n        </div>\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrueOrFalseQuestionForm;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport shortid from 'shortid';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport MultipleQuestionOptionsForm from '../MultipleQuestionOptionsForm/MultipleQuestionOptionsForm';\r\nimport TrueOrFalseQuestionForm from '../TrueOrFalseQuestionForm/TrueOrFalseQuestionForm';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './CreateQuestion.css';\r\n\r\nclass CreateQuestion extends React.Component {\r\n  state = {\r\n    questionType: 'radio',\r\n    questionName: '',\r\n    error: '',\r\n    questionOptions: [\r\n      {\r\n        optionId: shortid.generate(),\r\n        name: '',\r\n        answer: false,\r\n      },\r\n      {\r\n        optionId: shortid.generate(),\r\n        name: '',\r\n        answer: false,\r\n      },\r\n    ],\r\n    questionAnswer: [],\r\n  };\r\n\r\n  handleQuestionTypeChange = (e) => {\r\n    const questionType = e.target.value;\r\n    const questionOptions =\r\n      questionType === 'trueOrFalse'\r\n        ? []\r\n        : [\r\n            {\r\n              optionId: shortid.generate(),\r\n              name: '',\r\n              answer: false,\r\n            },\r\n            {\r\n              optionId: shortid.generate(),\r\n              name: '',\r\n              answer: false,\r\n            },\r\n          ];\r\n    const questionAnswer = questionType === 'trueOrFalse' ? true : [];\r\n    this.setState({ questionType, questionOptions, questionAnswer });\r\n  };\r\n\r\n  handleQuestionNameChange = (e) => {\r\n    this.setState({ questionName: e.target.value });\r\n  };\r\n\r\n  handleQuestionOptionNameChange = (optionId, newName) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.map((opt) => {\r\n      if (opt.optionId === optionId) {\r\n        opt.name = newName;\r\n      }\r\n      return opt;\r\n    });\r\n    const editedAnswer = editedOptions\r\n      .filter((opt) => opt.answer === true)\r\n      .map((opt) => opt.optionId);\r\n    this.setState({\r\n      questionOptions: editedOptions,\r\n      questionAnswer: editedAnswer,\r\n    });\r\n  };\r\n\r\n  handleTrueOrFalseAnswerChange = () => {\r\n    this.setState({ questionAnswer: !this.state.questionAnswer });\r\n  };\r\n\r\n  handleCheckboxAnswerChange = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.map((opt) => {\r\n      if (optionId === opt.optionId) {\r\n        opt.answer = !opt.answer;\r\n      }\r\n      return opt;\r\n    });\r\n    const editedAnswer = editedOptions\r\n      .filter((opt) => opt.answer === true)\r\n      .map((opt) => opt.optionId);\r\n    this.setState({\r\n      questionOptions: editedOptions,\r\n      questionAnswer: editedAnswer,\r\n    });\r\n  };\r\n\r\n  handleRadioAnswerChange = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.map((opt) => {\r\n      if (opt.optionId === optionId) {\r\n        opt.answer = true;\r\n      } else {\r\n        opt.answer = false;\r\n      }\r\n      return opt;\r\n    });\r\n    const editedAnswer = editedOptions\r\n      .filter((opt) => opt.answer === true)\r\n      .map((opt) => opt.optionId);\r\n    this.setState({\r\n      questionOptions: editedOptions,\r\n      questionAnswer: editedAnswer,\r\n    });\r\n  };\r\n\r\n  handleQuestionOptionAdd = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const newQuestionOption = {\r\n      optionId: shortid.generate(),\r\n      name: '',\r\n      answer: false,\r\n    };\r\n    const optionIndex = newQuestionOptions.findIndex(\r\n      (option) => option.optionId === optionId,\r\n    );\r\n    newQuestionOptions.splice(optionIndex + 1, 0, newQuestionOption);\r\n    this.setState({\r\n      questionOptions: newQuestionOptions,\r\n    });\r\n  };\r\n\r\n  handleQuestionOptionDelete = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.filter(\r\n      (opt) => opt.optionId !== optionId,\r\n    );\r\n    if (this.state.questionOptions.length > 2) {\r\n      const editedAnswer = editedOptions\r\n        .filter((opt) => opt.answer === true)\r\n        .map((opt) => opt.optionId);\r\n      this.setState({\r\n        questionOptions: editedOptions,\r\n        questionAnswer: editedAnswer,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCreatingMultiOptionQuestion = (e) => {\r\n    e.preventDefault();\r\n    const question = {\r\n      name: this.state.questionName,\r\n      type: this.state.questionType,\r\n      options: this.state.questionOptions,\r\n      answer: this.state.questionAnswer,\r\n      id: shortid.generate(),\r\n    };\r\n\r\n    const isNameEmpty = /^\\s*$/.test(question.name);\r\n    const isAOptionEmpty = question.options.some((opt) =>\r\n      /^\\s*$/.test(opt.name),\r\n    );\r\n    const doesQuestionHaveAnswer = this.state.questionAnswer.length !== 0;\r\n\r\n    if (isNameEmpty) {\r\n      this.setState({\r\n        error: 'Your exam question must have a name.',\r\n      });\r\n    } else if (isAOptionEmpty) {\r\n      this.setState({\r\n        error: 'Your question options must not be empty.',\r\n      });\r\n    } else if (!doesQuestionHaveAnswer) {\r\n      this.setState({\r\n        error: `Your question must have ${\r\n          this.state.questionType === 'checkbox' ? 'some options' : 'an option'\r\n        } checked as correct.`,\r\n      });\r\n    } else {\r\n      this.props.onCreateQuestion(question);\r\n      this.setState({\r\n        questionName: '',\r\n        questionType: question.type,\r\n        questionOptions: [\r\n          {\r\n            optionId: shortid.generate(),\r\n            name: '',\r\n            answer: false,\r\n          },\r\n          {\r\n            optionId: shortid.generate(),\r\n            name: '',\r\n            answer: false,\r\n          },\r\n        ],\r\n        questionAnswer: [],\r\n        error: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCreatingTrueOrFalseQuestion = (e) => {\r\n    e.preventDefault();\r\n    const question = {\r\n      name: this.state.questionName,\r\n      type: this.state.questionType,\r\n      options: this.state.questionOptions,\r\n      answer: [this.state.questionAnswer.toString()],\r\n      id: shortid.generate(),\r\n    };\r\n\r\n    const isNameEmpty = /^\\s*$/.test(question.name);\r\n    const isAnswerBoolean = typeof this.state.questionAnswer === 'boolean';\r\n\r\n    if (isNameEmpty) {\r\n      this.setState({\r\n        error: 'Your exam question must have a name.',\r\n      });\r\n    } else if (!isAnswerBoolean) {\r\n      this.setState({\r\n        error: 'You must select true or false for your question.',\r\n      });\r\n    } else {\r\n      this.props.onCreateQuestion(question);\r\n      this.setState({\r\n        questionName: '',\r\n        questionType: 'trueOrFalse',\r\n        questionOptions: [],\r\n        questionAnswer: true,\r\n        error: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  renderFormType = () => {\r\n    const radioForm = (\r\n      <MultipleQuestionOptionsForm\r\n        onChangeOptionAnswer={this.handleRadioAnswerChange}\r\n        onAddOption={this.handleQuestionOptionAdd}\r\n        onDeleteOption={this.handleQuestionOptionDelete}\r\n        questionType={this.state.questionType}\r\n        questionOptions={this.state.questionOptions}\r\n        onChangeOptionName={this.handleQuestionOptionNameChange}\r\n        areOptionsBeingEdited={false}\r\n      />\r\n    );\r\n    const checkboxForm = (\r\n      <MultipleQuestionOptionsForm\r\n        onChangeOptionAnswer={this.handleCheckboxAnswerChange}\r\n        onAddOption={this.handleQuestionOptionAdd}\r\n        onDeleteOption={this.handleQuestionOptionDelete}\r\n        onChangeOptionName={this.handleQuestionOptionNameChange}\r\n        questionOptions={this.state.questionOptions}\r\n        questionType={this.state.questionType}\r\n        areOptionsBeingEdited={false}\r\n      />\r\n    );\r\n    const trueOrFalseForm = (\r\n      <TrueOrFalseQuestionForm\r\n        questionAnswer={this.state.questionAnswer}\r\n        onChangeAnswer={this.handleTrueOrFalseAnswerChange}\r\n      />\r\n    );\r\n    switch (this.state.questionType) {\r\n      case 'radio':\r\n        return radioForm;\r\n      case 'checkbox':\r\n        return checkboxForm;\r\n      default:\r\n        return trueOrFalseForm;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreateQuestion\">\r\n        <div className=\"scrollOnOverflow\">\r\n          <h2>Create Question:</h2>\r\n          {this.state.error ? (\r\n            <Alert variant=\"info\">\r\n              <span>&#9888; </span>\r\n              {this.state.error}\r\n            </Alert>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Form\r\n            onSubmit={\r\n              this.state.questionType === 'trueOrFalse'\r\n                ? this.handleCreatingTrueOrFalseQuestion\r\n                : this.handleCreatingMultiOptionQuestion\r\n            }\r\n          >\r\n            <Form.Group>\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                onChange={this.handleQuestionNameChange}\r\n                placeholder=\"Name\"\r\n                value={this.state.questionName}\r\n                type=\"text\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>What kind of question is it?</Form.Label>\r\n              <Form.Control\r\n                value={this.state.questionType}\r\n                onChange={this.handleQuestionTypeChange}\r\n                as=\"select\"\r\n              >\r\n                <option value=\"radio\">Radio</option>\r\n                <option value=\"checkbox\">Checkbox</option>\r\n                <option value=\"trueOrFalse\">True Or False</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            {this.renderFormType()}\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Create Question\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateQuestion;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport shortid from 'shortid';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport MultipleQuestionOptionsForm from '../MultipleQuestionOptionsForm/MultipleQuestionOptionsForm';\r\nimport TrueOrFalseQuestionForm from '../TrueOrFalseQuestionForm/TrueOrFalseQuestionForm';\r\nimport './EditQuestion.css';\r\n\r\nclass EditQuestion extends React.Component {\r\n  state = {\r\n    questionType: this.props.question.type,\r\n    questionName: this.props.question.name,\r\n    questionOptions: this.props.question.options,\r\n    questionAnswer:\r\n      this.props.question.type === 'trueOrFalse'\r\n        ? this.props.question.answer[0] === 'true'\r\n        : this.props.question.answer,\r\n    error: '',\r\n  };\r\n\r\n  handleQuestionTypeChange = (e) => {\r\n    const questionType = e.target.value;\r\n    const questionOptions =\r\n      questionType === 'trueOrFalse'\r\n        ? []\r\n        : [\r\n            {\r\n              optionId: shortid.generate(),\r\n              name: '',\r\n              answer: false,\r\n            },\r\n            {\r\n              optionId: shortid.generate(),\r\n              name: '',\r\n              answer: false,\r\n            },\r\n          ];\r\n    const questionAnswer = questionType === 'trueOrFalse' ? true : [];\r\n    this.setState({ questionType, questionOptions, questionAnswer });\r\n  };\r\n\r\n  handleQuestionNameChange = (e) => {\r\n    this.setState({ questionName: e.target.value });\r\n  };\r\n\r\n  handleQuestionOptionNameChange = (optionId, newName) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.map((opt) => {\r\n      if (opt.optionId === optionId) {\r\n        opt.name = newName;\r\n      }\r\n      return opt;\r\n    });\r\n    this.setState({\r\n      questionOptions: editedOptions,\r\n    });\r\n  };\r\n\r\n  handleQuestionOptionAdd = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const newQuestionOption = {\r\n      optionId: shortid.generate(),\r\n      name: '',\r\n      answer: false,\r\n    };\r\n    const optionIndex = newQuestionOptions.findIndex(\r\n      (opt) => opt.optionId === optionId,\r\n    );\r\n    newQuestionOptions.splice(optionIndex + 1, 0, newQuestionOption);\r\n    this.setState({\r\n      questionOptions: newQuestionOptions,\r\n    });\r\n  };\r\n\r\n  handleQuestionOptionDelete = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.filter(\r\n      (opt) => opt.optionId !== optionId,\r\n    );\r\n    if (this.state.questionOptions.length > 2) {\r\n      this.setState({\r\n        questionOptions: editedOptions,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleTrueOrFalseAnswerChange = () => {\r\n    this.setState({ questionAnswer: !this.state.questionAnswer });\r\n  };\r\n\r\n  handleCheckboxAnswerChange = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.map((opt) => {\r\n      if (optionId === opt.optionId) {\r\n        opt.answer = !opt.answer;\r\n      }\r\n      return opt;\r\n    });\r\n    const editedAnswer = editedOptions\r\n      .filter((opt) => opt.answer === true)\r\n      .map((opt) => opt.optionId);\r\n    this.setState({\r\n      questionOptions: editedOptions,\r\n      questionAnswer: editedAnswer,\r\n    });\r\n  };\r\n\r\n  handleRadioAnswerChange = (optionId) => {\r\n    const newQuestionOptions = clonedeep(this.state.questionOptions);\r\n    const editedOptions = newQuestionOptions.map((opt) => {\r\n      if (opt.optionId === optionId) {\r\n        opt.answer = true;\r\n      } else {\r\n        opt.answer = false;\r\n      }\r\n      return opt;\r\n    });\r\n    const editedAnswer = editedOptions\r\n      .filter((opt) => opt.answer === true)\r\n      .map((opt) => opt.optionId);\r\n    this.setState({\r\n      questionOptions: editedOptions,\r\n      questionAnswer: editedAnswer,\r\n    });\r\n  };\r\n\r\n  handleCompletingMultiOptionQuestion = (e) => {\r\n    e.preventDefault();\r\n    const question = {\r\n      id: this.props.question.id,\r\n      name: this.state.questionName,\r\n      type: this.state.questionType,\r\n      options: this.state.questionOptions,\r\n      answer: this.state.questionAnswer,\r\n    };\r\n\r\n    const isNameEmpty = /^\\s*$/.test(question.name);\r\n    const isAOptionEmpty = question.options.some((opt) => {\r\n      return /^\\s*$/.test(opt.name);\r\n    });\r\n    const doesQuestionHaveAnswer = question.answer.length !== 0;\r\n\r\n    if (isNameEmpty) {\r\n      this.setState({\r\n        error: 'Your exam question must have a name.',\r\n      });\r\n    } else if (isAOptionEmpty) {\r\n      this.setState({\r\n        error: 'Your question options must not be empty.',\r\n      });\r\n    } else if (!doesQuestionHaveAnswer) {\r\n      this.setState({\r\n        error: `Your question must have ${\r\n          question.type === 'checkbox' ? 'some options' : 'an option'\r\n        } checked as correct.`,\r\n      });\r\n    } else {\r\n      this.props.editQuestion(question);\r\n    }\r\n  };\r\n\r\n  handleCompletingTrueOrFalseQuestion = (e) => {\r\n    e.preventDefault();\r\n    const question = {\r\n      id: this.props.question.id,\r\n      name: this.state.questionName,\r\n      type: this.state.questionType,\r\n      options: [],\r\n      answer: [this.state.questionAnswer.toString()],\r\n    };\r\n\r\n    const isNameEmpty = /^\\s*$/.test(question.name);\r\n    const isAnswerBoolean = typeof this.state.questionAnswer === 'boolean';\r\n\r\n    if (isNameEmpty) {\r\n      this.setState({\r\n        error: 'Your exam question must have a name.',\r\n      });\r\n    } else if (!isAnswerBoolean) {\r\n      this.setState({\r\n        error: 'You must select true or false for your question.',\r\n      });\r\n    } else {\r\n      this.props.editQuestion(question);\r\n    }\r\n  };\r\n\r\n  renderFormType = () => {\r\n    const radioForm = (\r\n      <MultipleQuestionOptionsForm\r\n        onChangeOptionAnswer={this.handleRadioAnswerChange}\r\n        onAddOption={this.handleQuestionOptionAdd}\r\n        onDeleteOption={this.handleQuestionOptionDelete}\r\n        questionType={this.state.questionType}\r\n        questionOptions={this.state.questionOptions}\r\n        onChangeOptionName={this.handleQuestionOptionNameChange}\r\n        areOptionsBeingEdited={true}\r\n      />\r\n    );\r\n    const checkboxForm = (\r\n      <MultipleQuestionOptionsForm\r\n        onChangeOptionAnswer={this.handleCheckboxAnswerChange}\r\n        onAddOption={this.handleQuestionOptionAdd}\r\n        onDeleteOption={this.handleQuestionOptionDelete}\r\n        onChangeOptionName={this.handleQuestionOptionNameChange}\r\n        questionOptions={this.state.questionOptions}\r\n        questionType={this.state.questionType}\r\n        areOptionsBeingEdited={true}\r\n      />\r\n    );\r\n    const trueOrFalseForm = (\r\n      <TrueOrFalseQuestionForm\r\n        questionAnswer={this.state.questionAnswer}\r\n        onChangeAnswer={this.handleTrueOrFalseAnswerChange}\r\n      />\r\n    );\r\n    switch (this.state.questionType) {\r\n      case 'radio':\r\n        return radioForm;\r\n      case 'checkbox':\r\n        return checkboxForm;\r\n      default:\r\n        return trueOrFalseForm;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditQuestion\">\r\n        <div className=\"scrollOnOverflow\">\r\n          <h2>Edit Question:</h2>\r\n          {this.state.error ? (\r\n            <Alert variant=\"info\">\r\n              <span>&#9888; </span>\r\n              {this.state.error}\r\n            </Alert>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Form\r\n            onSubmit={\r\n              this.state.questionType === 'trueOrFalse'\r\n                ? this.handleCompletingTrueOrFalseQuestion\r\n                : this.handleCompletingMultiOptionQuestion\r\n            }\r\n          >\r\n            <Form.Group>\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                onChange={this.handleQuestionNameChange}\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                value={this.state.questionName}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>What kind of question is it?</Form.Label>\r\n              <Form.Control\r\n                value={this.state.questionType}\r\n                onChange={this.handleQuestionTypeChange}\r\n                as=\"select\"\r\n              >\r\n                <option value=\"radio\">Radio</option>\r\n                <option value=\"checkbox\">Checkbox</option>\r\n                <option value=\"trueOrFalse\">True Or False</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            {this.renderFormType()}\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Edit Question\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditQuestion;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './ReadOnlyQuestion.css';\r\n\r\nconst ReadOnlyQuestion = (props) => {\r\n  const { type, name, answer, options } = props.question;\r\n  let question =\r\n    type === 'trueOrFalse' ? (\r\n      <>\r\n        <Form.Label>\r\n          {props.index ? `${props.index}. ` : ''}\r\n          {name}\r\n        </Form.Label>\r\n        <div className=\"trueOrFalseOptions\">\r\n          <Form.Check\r\n            readOnly\r\n            checked={answer[0] === 'true'}\r\n            inline\r\n            type=\"radio\"\r\n            label=\"true\"\r\n          />\r\n          <Form.Check\r\n            readOnly\r\n            inline\r\n            checked={answer[0] === 'false'}\r\n            type=\"radio\"\r\n            label=\"false\"\r\n          />\r\n        </div>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <Form.Label>\r\n          {props.index ? `${props.index}. ` : ''}\r\n          {name}\r\n        </Form.Label>\r\n        <div className=\"questionOptions\">\r\n          {options.map((opt) => (\r\n            <Form.Check\r\n              readOnly\r\n              checked={opt.answer === true}\r\n              key={opt.optionId}\r\n              type={type}\r\n              label={opt.name}\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  return (\r\n    <div\r\n      className={`ReadOnlyQuestion ${\r\n        props.question.type === 'trueOrFalse' ? 'trueOrFalse' : 'multiChoice'\r\n      }Question`}\r\n    >\r\n      {question}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyQuestion;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ReadOnlyQuestion from '../ReadOnlyQuestion/ReadOnlyQuestion';\r\nimport './QuestionCard.css';\r\n\r\nconst QuestionCard = (props) => {\r\n  const {\r\n    eventKey,\r\n    question: { name },\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"QuestionCard\">\r\n      <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey={eventKey}>\r\n          {eventKey + 1}. {name}\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={eventKey}>\r\n          <Card.Body>\r\n            <ReadOnlyQuestion question={props.question} />\r\n            <Button onClick={props.editQuestion} variant=\"info\" block>\r\n              Edit Question\r\n            </Button>\r\n            <Button onClick={props.deleteQuestion} variant=\"danger\" block>\r\n              Delete Question\r\n            </Button>\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport QuestionCard from '../QuestionCard/QuestionCard';\r\nimport './QuestionsSoFar.css';\r\n\r\nconst QuestionsSoFar = (props) => {\r\n  function handleTabChange() {\r\n    if (window.innerWidth <= 500) {\r\n      props.changeTab('workOnQuestion');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"QuestionsSoFar\">\r\n      <div className=\"scrollOnOverflow\">\r\n        <h2>Questions So Far</h2>\r\n        <Accordion>\r\n          {props.questions.map((question, index) => {\r\n            return (\r\n              <QuestionCard\r\n                key={shortid.generate()}\r\n                eventKey={index}\r\n                question={question}\r\n                editQuestion={() => {\r\n                  handleTabChange();\r\n                  props.editQuestionStart(question);\r\n                }}\r\n                deleteQuestion={() => {\r\n                  props.deleteQuestion(question.id);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsSoFar;\r\n","import React from 'react';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport CreateQuestion from './CreateQuestion/CreateQuestion';\r\nimport EditQuestion from './EditQuestion/EditQuestion';\r\nimport QuestionsSoFar from './QuestionsSoFar/QuestionsSoFar';\r\nimport './WorkOnExamQuestions.css';\r\n\r\nclass WorkOnExamQuestions extends React.Component {\r\n  state = {\r\n    questions: this.props.examQuestions,\r\n    questionToBeEdited: {},\r\n    isWindowMobileSize: false,\r\n    currentActiveTab: 'workOnQuestion',\r\n    hasQuestionsChanged: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateIsWindowMobileSize.bind(this));\r\n    this.updateIsWindowMobileSize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.completeExamQuestions(\r\n      this.state.questions,\r\n      this.state.hasQuestionsChanged,\r\n    );\r\n    window.removeEventListener('resize', this.updateIsWindowMobileSize);\r\n  }\r\n\r\n  updateIsWindowMobileSize = () => {\r\n    let isCurrentWindowMobileSize = window.innerWidth <= 500;\r\n    if (isCurrentWindowMobileSize !== this.state.isWindowMobileSize) {\r\n      this.setState({ isWindowMobileSize: window.innerWidth <= 500 });\r\n    }\r\n  };\r\n\r\n  changeTab = (tab) => {\r\n    this.setState({ currentActiveTab: tab });\r\n  };\r\n\r\n  startEditingQuestion = (questionToBeEdited) => {\r\n    this.setState({\r\n      questionToBeEdited,\r\n    });\r\n  };\r\n\r\n  editQuestion = (question) => {\r\n    const questions = clonedeep(this.state.questions);\r\n    const editedQuestion = clonedeep(question);\r\n    const editedQuestions = questions.map((question) => {\r\n      if (question.id === editedQuestion.id) {\r\n        return editedQuestion;\r\n      } else {\r\n        return question;\r\n      }\r\n    });\r\n    this.setState({\r\n      questions: editedQuestions,\r\n      questionToBeEdited: {},\r\n      hasQuestionsChanged: true,\r\n    });\r\n  };\r\n\r\n  addQuestion = (question) => {\r\n    const questions = clonedeep(this.state.questions);\r\n    questions.push(question);\r\n    this.setState({\r\n      questions,\r\n      hasQuestionsChanged: true,\r\n    });\r\n  };\r\n\r\n  deleteQuestion = (questionId) => {\r\n    const questions = clonedeep(this.state.questions);\r\n    const editedQuestions = questions.filter(\r\n      (question) => question.id !== questionId,\r\n    );\r\n    if (this.state.questionToBeEdited.id === questionId) {\r\n      this.setState({\r\n        questions: editedQuestions,\r\n        questionToBeEdited: {},\r\n      });\r\n    } else {\r\n      this.setState({\r\n        questions: editedQuestions,\r\n        hasQuestionsChanged: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let workOnExamQuestionsMain = (\r\n      <div className=\"WorkOnExamQuestionsMain\">\r\n        <QuestionsSoFar\r\n          editQuestionStart={this.startEditingQuestion}\r\n          questions={this.state.questions}\r\n          deleteQuestion={this.deleteQuestion}\r\n        />\r\n        {this.state.questionToBeEdited.id ? (\r\n          <EditQuestion\r\n            question={this.state.questionToBeEdited}\r\n            editQuestion={this.editQuestion}\r\n            key={this.state.questionToBeEdited.id}\r\n          />\r\n        ) : (\r\n          <CreateQuestion onCreateQuestion={this.addQuestion} />\r\n        )}\r\n      </div>\r\n    );\r\n    if (this.state.isWindowMobileSize) {\r\n      workOnExamQuestionsMain = (\r\n        <div className=\"MobileWorkOnExamQuestionsMain\">\r\n          <Tabs\r\n            activeKey={this.state.currentActiveTab}\r\n            onSelect={this.changeTab}\r\n          >\r\n            <Tab\r\n              eventKey=\"workOnQuestion\"\r\n              title={\r\n                this.state.questionToBeEdited.id\r\n                  ? 'Edit Question'\r\n                  : 'Create Question'\r\n              }\r\n            >\r\n              {this.state.questionToBeEdited.id ? (\r\n                <EditQuestion\r\n                  question={this.state.questionToBeEdited}\r\n                  editQuestion={this.editQuestion}\r\n                  key={this.state.questionToBeEdited.id}\r\n                />\r\n              ) : (\r\n                <CreateQuestion onCreateQuestion={this.addQuestion} />\r\n              )}\r\n            </Tab>\r\n            <Tab eventKey=\"questions\" title=\"Questions So Far\">\r\n              <QuestionsSoFar\r\n                editQuestionStart={this.startEditingQuestion}\r\n                questions={this.state.questions}\r\n                deleteQuestion={this.deleteQuestion}\r\n                changeTab={this.changeTab}\r\n              />\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"WorkOnExamQuestions\">\r\n        <h1>{this.props.heading}</h1>\r\n        {workOnExamQuestionsMain}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkOnExamQuestions;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faArrowLeft,\r\n  faArrowRight,\r\n  faUndo,\r\n  faSave,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './CreateAExamControls.css';\r\nimport LoadingButton from '../../common/LoadingButton/LoadingButton';\r\n\r\nconst CreateAExamControls = (props) => {\r\n  let createAExamControlsClass = 'CreateExamGeneralControls';\r\n  let leftButton = (\r\n    <Button\r\n      className=\"nextBtn\"\r\n      size=\"lg\"\r\n      variant=\"info\"\r\n      onClick={props.forwardFunction}\r\n      disabled={props.disableNextBtn}\r\n    >\r\n      Next <FontAwesomeIcon icon={faArrowRight} />\r\n    </Button>\r\n  );\r\n  switch (props.examPart) {\r\n    case 'title':\r\n      createAExamControlsClass = 'CreateExamTitleControls';\r\n      break;\r\n    case 'finish':\r\n      createAExamControlsClass = 'CreateExamFinishControls';\r\n      leftButton = props.isUserLoggedIn ? (\r\n        <LoadingButton\r\n          classes=\"finishBtn\"\r\n          size=\"lg\"\r\n          variant=\"info\"\r\n          type=\"button\"\r\n          onClickFunc={props.finishFunction}\r\n          loading={props.loading}\r\n        >\r\n          Save <FontAwesomeIcon icon={faSave} />\r\n        </LoadingButton>\r\n      ) : (\r\n        <Link to=\"/auth\">\r\n          <Button className=\"finishBtn\" size=\"lg\" variant=\"info\">\r\n            Save <FontAwesomeIcon icon={faSave} />\r\n          </Button>\r\n        </Link>\r\n      );\r\n      break;\r\n    default:\r\n  }\r\n  return (\r\n    <div className={`CreateAExamControls ${createAExamControlsClass}`}>\r\n      <Button\r\n        className=\"backBtn\"\r\n        size=\"lg\"\r\n        onClick={props.backwardFunction}\r\n        variant=\"info\"\r\n      >\r\n        <FontAwesomeIcon icon={faArrowLeft} /> Back\r\n      </Button>\r\n      <Button\r\n        className=\"resetBtn\"\r\n        size=\"lg\"\r\n        onClick={props.resetFunction}\r\n        variant=\"info\"\r\n      >\r\n        <FontAwesomeIcon icon={faUndo} />\r\n      </Button>\r\n      {leftButton}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAExamControls;\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ReadOnlyQuestion from '../WorkOnExamQuestions/ReadOnlyQuestion/ReadOnlyQuestion';\r\nimport './WorkOnExamFinish.css';\r\n\r\nconst CreateAExamFinish = (props) => {\r\n  const doesExamHaveNoQuestions = props.exam.questions.length === 0;\r\n  const doesExamHaveNoStudents = props.exam.students.length === 0;\r\n  let errorMessages = {\r\n    noStudents:\r\n      \"Your exam doesn't contain any students. You can save your exam but nobody will be able to take the exam until you add at least one student.\",\r\n    noQuestions:\r\n      \"Your exam doesn't contain any questions. You can save your exam but nobody will be able to take the exam until you add at least one question\",\r\n    noStudentsOrQuestions:\r\n      \"Your exam doesn't contain any students or questions. You can save your exam but nobody will be able to take the exam until you add at least one student and question.\",\r\n  };\r\n  let errorMessageKey = '';\r\n  if (doesExamHaveNoQuestions && doesExamHaveNoStudents) {\r\n    errorMessageKey = 'noStudentsOrQuestions';\r\n  } else if (doesExamHaveNoQuestions) {\r\n    errorMessageKey = 'noQuestions';\r\n  } else if (doesExamHaveNoStudents) {\r\n    errorMessageKey = 'noStudents';\r\n  }\r\n  return (\r\n    <div className=\"WorkOnExamFinish\">\r\n      <h1>Save Your Exam</h1>\r\n      {errorMessageKey ? (\r\n        <Alert variant=\"info\">{errorMessages[errorMessageKey]}</Alert>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <p>{props.text}</p>\r\n      <div className=\"examExample\">\r\n        <div className=\"scrollOnOverflow\">\r\n          <h1>{props.exam.title}</h1>\r\n          {doesExamHaveNoQuestions ? (\r\n            <p>This exam contains no questions.</p>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {props.exam.questions.map((question, index) => {\r\n            return (\r\n              <ReadOnlyQuestion\r\n                key={question.id}\r\n                index={index + 1}\r\n                question={question}\r\n              />\r\n            );\r\n          })}\r\n          <hr />\r\n          <p className=\"studentListTitle\">Student List</p>\r\n          <ul\r\n            className={`studentsList ${\r\n              doesExamHaveNoStudents ? 'noStudentsList' : ''\r\n            }`}\r\n          >\r\n            {doesExamHaveNoStudents ? (\r\n              <p>This exam contains no students.</p>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {props.exam.students.map((student) => {\r\n              return <li key={student.id}>{student.name}</li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAExamFinish;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport CreateAExamStart from './CreateAExamStart/CreateAExamStart';\r\nimport WorkOnExamTitle from '../WorkOnExam/WorkOnExamTitle/WorkOnExamTitle';\r\nimport WorkOnExamStudents from '../WorkOnExam/WorkOnExamStudents/WorkOnExamStudents';\r\nimport WorkOnExamQuestions from '../WorkOnExam/WorkOnExamQuestions/WorkOnExamQuestions';\r\nimport CreateAExamControls from './CreateAExamControls/CreateAExamControls';\r\nimport WorkOnExamFinish from '../WorkOnExam/WorkOnExamFinish/WorkOnExamFinish';\r\nimport {\r\n  createExamChangePart,\r\n  createExamReset,\r\n  createExamTitle,\r\n  createExamQuestions,\r\n  createExamStudents,\r\n  createExam,\r\n} from '../../store/actions/index';\r\nimport './CreateAExam.css';\r\n\r\nclass CreateAExam extends React.Component {\r\n  state = {\r\n    disableNextBtn: /^\\s*$/.test(this.props.exam.title),\r\n  };\r\n\r\n  setDisableNextButton = (disableNextBtn) => {\r\n    this.setState({ disableNextBtn });\r\n  };\r\n\r\n  goToNextExamPart = () => {\r\n    switch (this.props.examPart) {\r\n      case 'start':\r\n        this.props.createExamChangePart('title');\r\n        break;\r\n      case 'title':\r\n        this.props.createExamChangePart('questions');\r\n        break;\r\n      case 'questions':\r\n        this.props.createExamChangePart('students');\r\n        break;\r\n      case 'students':\r\n        this.props.createExamChangePart('finish');\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  goBackOneExamPart = () => {\r\n    switch (this.props.examPart) {\r\n      case 'questions':\r\n        this.props.createExamChangePart('title');\r\n        break;\r\n      case 'students':\r\n        this.props.createExamChangePart('questions');\r\n        break;\r\n      case 'finish':\r\n        this.props.createExamChangePart('students');\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  createExam = () => {\r\n    const createdExam = clonedeep(this.props.exam);\r\n    createdExam.questions.map((question) => {\r\n      if (question.type === 'trueOrFalse') {\r\n        question.type = 'true_false';\r\n      }\r\n      return question;\r\n    });\r\n    this.props.createExam(createdExam);\r\n  };\r\n\r\n  render() {\r\n    const { title, questions, students } = this.props.exam;\r\n    let examPartComponent = (\r\n      <CreateAExamStart\r\n        isUserLoggedIn={this.props.isUserLoggedIn}\r\n        nextExamPart={this.goToNextExamPart}\r\n      />\r\n    );\r\n    switch (this.props.examPart) {\r\n      case 'title':\r\n        examPartComponent = (\r\n          <WorkOnExamTitle\r\n            examTitle={title}\r\n            completeExamTitle={(title) => this.props.createExamTitle(title)}\r\n            changeNextBtn={this.setDisableNextButton}\r\n            heading=\"What is your exam's title?\"\r\n          />\r\n        );\r\n        break;\r\n      case 'questions':\r\n        examPartComponent = (\r\n          <WorkOnExamQuestions\r\n            examQuestions={questions}\r\n            completeExamQuestions={(questions) =>\r\n              this.props.createExamQuestions(questions)\r\n            }\r\n            heading=\"Create Questions For Your Exam\"\r\n          />\r\n        );\r\n        break;\r\n      case 'students':\r\n        examPartComponent = (\r\n          <WorkOnExamStudents\r\n            examStudents={students}\r\n            completeExamStudents={(students) =>\r\n              this.props.createExamStudents(students)\r\n            }\r\n            heading=\"Add Students To Your Exam\"\r\n          />\r\n        );\r\n        break;\r\n      case 'finish':\r\n        examPartComponent = (\r\n          <WorkOnExamFinish\r\n            exam={this.props.exam}\r\n            text=\"Here is your exam so far:\"\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        examPartComponent = (\r\n          <CreateAExamStart\r\n            isUserLoggedIn={this.props.isUserLoggedIn}\r\n            nextExamPart={this.goToNextExamPart}\r\n          />\r\n        );\r\n    }\r\n    return (\r\n      <div className=\"CreateAExam\">\r\n        {examPartComponent}\r\n        {this.props.examPart !== 'start' ? (\r\n          <CreateAExamControls\r\n            examPart={this.props.examPart}\r\n            forwardFunction={this.goToNextExamPart}\r\n            backwardFunction={this.goBackOneExamPart}\r\n            resetFunction={() => this.props.createExamReset()}\r\n            disableNextBtn={this.state.disableNextBtn}\r\n            finishFunction={this.createExam}\r\n            isUserLoggedIn={this.props.isUserLoggedIn}\r\n            loading={this.props.loading}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const {\r\n    auth: { isUserLoggedIn },\r\n    exam: { examBeingCreated, currentExamBeingCreatedPart, createExamLoading },\r\n  } = state;\r\n  return {\r\n    isUserLoggedIn,\r\n    examPart: currentExamBeingCreatedPart,\r\n    exam: examBeingCreated,\r\n    loading: createExamLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createExamChangePart: (part) => dispatch(createExamChangePart(part)),\r\n    createExamReset: () => dispatch(createExamReset()),\r\n    createExamTitle: (title) => dispatch(createExamTitle(title)),\r\n    createExamQuestions: (questions) =>\r\n      dispatch(createExamQuestions(questions)),\r\n    createExamStudents: (students) => dispatch(createExamStudents(students)),\r\n    createExam: (exam) => dispatch(createExam(exam)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAExam);\r\n","import React from 'react';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport { getUserExams } from '../../../store/actions/index';\r\nimport './EditAExamStart.css';\r\n\r\nclass EditAExamStart extends React.Component {\r\n  state = {\r\n    selectedExam: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getUserExams();\r\n  }\r\n\r\n  handleExamChange = (e) => {\r\n    const selectedExam = this.props.userExams.find(\r\n      (exam) => exam._id === e.target.value,\r\n    );\r\n    this.setState({ selectedExam });\r\n  };\r\n\r\n  handleExamSelection = () => {\r\n    const selectedExam = this.state.selectedExam._id\r\n      ? this.state.selectedExam\r\n      : clonedeep(this.props.userExams).sort((examA, examB) =>\r\n          examA.title > examB.title ? 1 : -1,\r\n        )[0];\r\n    this.props.selectExam(selectedExam);\r\n    this.props.nextExamPart('title');\r\n  };\r\n\r\n  render() {\r\n    const sortedUserExams = clonedeep(\r\n      this.props.userExams,\r\n    ).sort((examA, examB) => (examA.title > examB.title ? 1 : -1));\r\n    return (\r\n      <div className=\"EditAExamStart\">\r\n        <div className=\"h1\">Edit A Exam</div>\r\n        {this.props.loading ? (\r\n          <div className=\"spinner\">\r\n            <Spinner animation=\"border\" variant=\"info\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        ) : this.props.userExams.length > 0 ? (\r\n          <>\r\n            <Form.Group>\r\n              <Form.Label>Choose A Exam To Edit:</Form.Label>\r\n              <Form.Control onChange={this.handleExamChange} as=\"select\">\r\n                {sortedUserExams.map((exam) => (\r\n                  <option value={exam._id} key={exam._id}>\r\n                    {exam.title}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button onClick={this.handleExamSelection} size=\"lg\" variant=\"info\">\r\n              Start\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <p>\r\n            You haven't created any exams.{' '}\r\n            <a href=\"/create-exam\">Create a exam.</a>\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const {\r\n    exam: { userExams, getUserExamsLoading },\r\n  } = state;\r\n  return {\r\n    userExams,\r\n    loading: getUserExamsLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getUserExams: () => dispatch(getUserExams()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAExamStart);\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faArrowLeft,\r\n  faArrowRight,\r\n  faUndo,\r\n  faSave,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport LoadingButton from '../../common/LoadingButton/LoadingButton';\r\nimport './EditAExamControls.css';\r\n\r\nconst EditAExamControls = (props) => {\r\n  let editAExamControlsClass = 'EditAExamGeneralControls';\r\n  let centerButtons = (\r\n    <>\r\n      <Button\r\n        className=\"resetBtn\"\r\n        size=\"lg\"\r\n        onClick={props.resetFunction}\r\n        variant=\"info\"\r\n      >\r\n        <span>Cancel Exam Changes </span>\r\n        <FontAwesomeIcon icon={faUndo} />\r\n      </Button>\r\n      <LoadingButton\r\n        classes=\"finishBtn\"\r\n        size=\"lg\"\r\n        variant=\"info\"\r\n        type=\"button\"\r\n        onClickFunc={props.goToFinishExamPart}\r\n        loading={props.loading}\r\n      >\r\n        <span>Save Exam Changes </span>\r\n        <FontAwesomeIcon icon={faSave} />\r\n      </LoadingButton>\r\n    </>\r\n  );\r\n  let rightButton = (\r\n    <Button\r\n      className=\"nextBtn\"\r\n      size=\"lg\"\r\n      variant=\"info\"\r\n      onClick={props.forwardFunction}\r\n      disabled={props.disableNextBtn}\r\n    >\r\n      <span>Next </span>\r\n      <FontAwesomeIcon icon={faArrowRight} />\r\n    </Button>\r\n  );\r\n\r\n  switch (props.examPart) {\r\n    case 'title':\r\n      editAExamControlsClass = 'EditAExamTitleControls';\r\n      break;\r\n    case 'finish':\r\n      editAExamControlsClass = 'EditAExamFinishControls';\r\n      centerButtons = (\r\n        <Button\r\n          className=\"resetBtn\"\r\n          size=\"lg\"\r\n          onClick={props.resetFunction}\r\n          variant=\"info\"\r\n        >\r\n          <span>Cancel Exam Changes </span>\r\n          <FontAwesomeIcon icon={faUndo} />\r\n        </Button>\r\n      );\r\n      rightButton = (\r\n        <LoadingButton\r\n          classes=\"finishBtn\"\r\n          size=\"lg\"\r\n          variant=\"info\"\r\n          type=\"button\"\r\n          onClickFunc={props.finishFunction}\r\n          loading={props.loading}\r\n        >\r\n          <span>Save Exam Changes </span>\r\n          <FontAwesomeIcon icon={faSave} />\r\n        </LoadingButton>\r\n      );\r\n      break;\r\n    default:\r\n  }\r\n  return (\r\n    <div className={`EditAExamControls ${editAExamControlsClass}`}>\r\n      <Button\r\n        className=\"backBtn\"\r\n        size=\"lg\"\r\n        onClick={props.backwardFunction}\r\n        variant=\"info\"\r\n      >\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n        <span> Back</span>\r\n      </Button>\r\n      {centerButtons}\r\n      {rightButton}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAExamControls;\r\n","import React from 'react';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport { connect } from 'react-redux';\r\nimport EditAExamStart from './EditAExamStart/EditAExamStart';\r\nimport WorkOnExamTitle from '../WorkOnExam/WorkOnExamTitle/WorkOnExamTitle';\r\nimport WorkOnExamStudents from '../WorkOnExam/WorkOnExamStudents/WorkOnExamStudents';\r\nimport WorkOnExamQuestions from '../WorkOnExam/WorkOnExamQuestions/WorkOnExamQuestions';\r\nimport WorkOnExamFinish from '../WorkOnExam/WorkOnExamFinish/WorkOnExamFinish';\r\nimport EditAExamControls from './EditAExamControls/EditAExamControls';\r\nimport {\r\n  editExamSelectExam,\r\n  editExamReset,\r\n  editExamChangePart,\r\n  editExamTitle,\r\n  editExamQuestions,\r\n  editExamStudents,\r\n  editExam,\r\n} from '../../store/actions/index';\r\nimport './EditAExam.css';\r\n\r\nclass EditAExam extends React.Component {\r\n  state = {\r\n    disableNextBtn: /^\\s*$/.test(this.props.exam.title),\r\n  };\r\n\r\n  setDisableNextButton = (disableNextBtn) => {\r\n    this.setState({ disableNextBtn });\r\n  };\r\n\r\n  goToNextExamPart = () => {\r\n    switch (this.props.examPart) {\r\n      case 'start':\r\n        this.props.editExamChangePart('title');\r\n        break;\r\n      case 'title':\r\n        this.props.editExamChangePart('questions');\r\n        break;\r\n      case 'questions':\r\n        this.props.editExamChangePart('students');\r\n        break;\r\n      case 'students':\r\n        this.props.editExamChangePart('finish');\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  goBackOneExamPart = () => {\r\n    switch (this.props.examPart) {\r\n      case 'questions':\r\n        this.props.editExamChangePart('title');\r\n        break;\r\n      case 'students':\r\n        this.props.editExamChangePart('questions');\r\n        break;\r\n      case 'finish':\r\n        this.props.editExamChangePart('students');\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  selectExam = (exam) => {\r\n    let selectedExam = clonedeep(exam);\r\n    selectedExam.questions = selectedExam.questions.map((question) => {\r\n      question.id = question._id;\r\n\r\n      if (question.type === 'true_false') {\r\n        question.type = 'trueOrFalse';\r\n      }\r\n\r\n      question.options = question.options.map((opt) => {\r\n        opt.answer = question.answer.some((optId) => optId === opt.optionId);\r\n        return opt;\r\n      });\r\n\r\n      return question;\r\n    });\r\n\r\n    selectedExam.students = selectedExam.students.map((student) => {\r\n      student.id = student._id;\r\n      return student;\r\n    });\r\n\r\n    this.props.editExamSelectExam(selectedExam);\r\n  };\r\n\r\n  updateTitle = (title, hasTitleChanged) => {\r\n    if (hasTitleChanged) {\r\n      this.props.editExamTitle(title);\r\n    }\r\n  };\r\n\r\n  updateQuestions = (questions, hasQuestionsChanged) => {\r\n    if (hasQuestionsChanged) {\r\n      this.props.editExamQuestions(questions);\r\n    }\r\n  };\r\n\r\n  updateStudents = (students, hasStudentsChanged) => {\r\n    if (hasStudentsChanged) {\r\n      this.props.editExamStudents(students);\r\n    }\r\n  };\r\n\r\n  saveExam = () => {\r\n    this.props.editExam(this.props.exam, this.props.examPartsBeingEdited);\r\n  };\r\n\r\n  render() {\r\n    const { examPartsBeingEdited, exam } = this.props;\r\n    const title =\r\n      examPartsBeingEdited.title.length === 0\r\n        ? exam.title\r\n        : examPartsBeingEdited.title;\r\n    const questions =\r\n      examPartsBeingEdited.questions.length === 0\r\n        ? exam.questions\r\n        : examPartsBeingEdited.questions;\r\n    const students =\r\n      examPartsBeingEdited.students.length === 0\r\n        ? exam.students\r\n        : examPartsBeingEdited.students;\r\n    let examExample = clonedeep(this.props.exam);\r\n    examExample.title = title;\r\n    examExample.questions = questions;\r\n    examExample.students = students;\r\n\r\n    let examPartComponent = (\r\n      <EditAExamStart\r\n        isUserLoggedIn={this.props.isUserLoggedIn}\r\n        nextExamPart={this.goToNextExamPart}\r\n        selectExam={this.selectExam}\r\n      />\r\n    );\r\n\r\n    switch (this.props.examPart) {\r\n      case 'title':\r\n        examPartComponent = (\r\n          <WorkOnExamTitle\r\n            examTitle={title}\r\n            completeExamTitle={this.updateTitle}\r\n            changeNextBtn={this.setDisableNextButton}\r\n            heading=\"Edit Your Exam Title\"\r\n          />\r\n        );\r\n        break;\r\n      case 'questions':\r\n        examPartComponent = (\r\n          <WorkOnExamQuestions\r\n            examQuestions={questions}\r\n            completeExamQuestions={this.updateQuestions}\r\n            heading=\"Edit Your Exam Questions\"\r\n          />\r\n        );\r\n        break;\r\n      case 'students':\r\n        examPartComponent = (\r\n          <WorkOnExamStudents\r\n            examStudents={students}\r\n            completeExamStudents={this.updateStudents}\r\n            heading=\"Edit Your Exam Students\"\r\n          />\r\n        );\r\n        break;\r\n      case 'finish':\r\n        examPartComponent = (\r\n          <WorkOnExamFinish\r\n            text=\"Here is your exam with its new changes:\"\r\n            exam={examExample}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        examPartComponent = (\r\n          <EditAExamStart\r\n            isUserLoggedIn={this.props.isUserLoggedIn}\r\n            selectExam={this.selectExam}\r\n            nextExamPart={this.goToNextExamPart}\r\n          />\r\n        );\r\n    }\r\n    return (\r\n      <div className=\"EditAExam\">\r\n        {examPartComponent}\r\n        {this.props.examPart !== 'start' ? (\r\n          <EditAExamControls\r\n            examPart={this.props.examPart}\r\n            forwardFunction={this.goToNextExamPart}\r\n            backwardFunction={this.goBackOneExamPart}\r\n            disableNextBtn={this.state.disableNextBtn}\r\n            finishFunction={this.saveExam}\r\n            goToFinishExamPart={() => this.props.editExamChangePart('finish')}\r\n            resetFunction={() => this.props.editExamReset()}\r\n            loading={this.props.loading}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const {\r\n    exam: {\r\n      examToBeEdited,\r\n      examPartsBeingEdited,\r\n      currentExamBeingEditedPart,\r\n      editExamLoading,\r\n    },\r\n    auth: { isUserLoggedIn },\r\n  } = state;\r\n  return {\r\n    isUserLoggedIn,\r\n    exam: examToBeEdited,\r\n    examPart: currentExamBeingEditedPart,\r\n    examPartsBeingEdited,\r\n    loading: editExamLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editExamSelectExam: (exam) => dispatch(editExamSelectExam(exam)),\r\n    editExamReset: () => dispatch(editExamReset()),\r\n    editExamChangePart: (part) => dispatch(editExamChangePart(part)),\r\n    editExamTitle: (title) => dispatch(editExamTitle(title)),\r\n    editExamQuestions: (questions) => dispatch(editExamQuestions(questions)),\r\n    editExamStudents: (students) => dispatch(editExamStudents(students)),\r\n    editExam: (exam, examPartsBeingEdited) =>\r\n      dispatch(editExam(exam, examPartsBeingEdited)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAExam);\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport './ExamsStudents.css';\r\n\r\nconst ExamsStudents = (props) => {\r\n  const [isWindowMobileSize, setIsWindowMobileSize] = useState(true);\r\n\r\n  useEffect(() => {\r\n    function updateIsWindowMobileSize() {\r\n      let isCurrentWindowMobileSize = window.innerWidth <= 500;\r\n      if (isCurrentWindowMobileSize !== isWindowMobileSize) {\r\n        setIsWindowMobileSize(window.innerWidth <= 500);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', updateIsWindowMobileSize);\r\n    updateIsWindowMobileSize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateIsWindowMobileSize);\r\n    };\r\n  }, [isWindowMobileSize]);\r\n\r\n  function getExamResults(questionsCorrect, questionsIncorrect) {\r\n    const correctQuestionNumbers = questionsCorrect.map((questionId) => {\r\n      const number = props.questions.findIndex(\r\n        (question) => question._id === questionId,\r\n      );\r\n      return number + 1;\r\n    });\r\n\r\n    const incorrectQuestionNumbers = questionsIncorrect.map((questionId) => {\r\n      const number = props.questions.findIndex(\r\n        (question) => question._id === questionId,\r\n      );\r\n      return number + 1;\r\n    });\r\n    return { correctQuestionNumbers, incorrectQuestionNumbers };\r\n  }\r\n\r\n  const doesExamHaveNoStudents = props.students.length === 0;\r\n\r\n  return (\r\n    <div className=\"ExamStudents\">\r\n      <p className=\"title\">Student List</p>\r\n      <div className=\"studentsList\">\r\n        {doesExamHaveNoStudents ? (\r\n          <p>This exam contains no students.</p>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {props.students.map((student) => {\r\n              const examResults = getExamResults(\r\n                student.questionsCorrect,\r\n                student.questionsIncorrect,\r\n              );\r\n              return (\r\n                <ListGroup.Item key={student._id}>\r\n                  <p className=\"studentName\">{student.name}</p>\r\n                  <DropdownButton\r\n                    drop={isWindowMobileSize ? 'down' : 'right'}\r\n                    variant=\"info\"\r\n                    title=\"See Exam Results\"\r\n                    disabled={!student.takenTest}\r\n                  >\r\n                    <strong>Exam Results:</strong>\r\n                    <div className=\"examResults\">\r\n                      <div className=\"correctQuestions\">\r\n                        <p>Correct Questions</p>\r\n                        <ul>\r\n                          {examResults.correctQuestionNumbers.map((num) => (\r\n                            <li key={num}>{num}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"incorrectQuestions\">\r\n                        <p>Incorrect Questions</p>\r\n                        <ul>\r\n                          {examResults.incorrectQuestionNumbers.map((num) => (\r\n                            <li key={num}>{num}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </DropdownButton>\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamsStudents;\r\n","import React, { useState } from 'react';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReadOnlyQuestion from '../../WorkOnExam/WorkOnExamQuestions/ReadOnlyQuestion/ReadOnlyQuestion';\r\nimport ExamsStudents from '../ExamsStudents/ExamsStudents';\r\nimport './ExamExample.css';\r\n\r\nconst ExamExample = (props) => {\r\n  const [isExamLinkCopied, setIsExamLinkCopied] = useState(false);\r\n  const doesExamHaveNoQuestions = props.exam.questions.length === 0;\r\n  let examQuestions = clonedeep(props.exam.questions);\r\n\r\n  function addAnswerToQuestionOptions(question) {\r\n    question.answer.map((optId) => {\r\n      question.options = question.options.map((opt) => {\r\n        if (optId === opt.optionId) {\r\n          opt.answer = true;\r\n        }\r\n        return opt;\r\n      });\r\n      return optId;\r\n    });\r\n    return question;\r\n  }\r\n\r\n  function handleCopyExamLinkButtonClick(examId) {\r\n    const examLink = `https://julieg18.github.io/exam-creator/#/take-exam/${examId}`;\r\n    const el = document.createElement('textarea');\r\n    el.value = examLink;\r\n    el.setAttribute('readonly', '');\r\n    el.style.position = 'absolute';\r\n    el.style.left = '-9999px';\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n    setIsExamLinkCopied(true);\r\n  }\r\n\r\n  examQuestions = examQuestions.map((question) => {\r\n    return addAnswerToQuestionOptions(question);\r\n  });\r\n\r\n  examQuestions = examQuestions.map((question) => {\r\n    if (question.type === 'true_false') {\r\n      question.type = 'trueOrFalse';\r\n      return question;\r\n    } else {\r\n      return question;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"ExamExample\">\r\n      <div className=\"container\">\r\n        <strong>{props.exam.title}</strong>\r\n        <Button\r\n          onClick={() => handleCopyExamLinkButtonClick(props.exam._id)}\r\n          size=\"sm\"\r\n          variant=\"info\"\r\n          className=\"copyExamLinkBtn\"\r\n          disabled={\r\n            props.exam.students.length === 0 ||\r\n            props.exam.questions.length === 0\r\n          }\r\n        >\r\n          {isExamLinkCopied ? 'Copied!' : 'Copy Link To Exam'}\r\n        </Button>\r\n        <Button\r\n          onClick={() => props.editExamFunc(props.exam._id)}\r\n          size=\"sm\"\r\n          variant=\"info\"\r\n          className=\"editExamBtn\"\r\n        >\r\n          Edit Exam\r\n        </Button>\r\n        <Button\r\n          onClick={props.deleteExamFunc}\r\n          size=\"sm\"\r\n          variant=\"danger\"\r\n          className=\"deleteExamBtn\"\r\n        >\r\n          Delete Exam\r\n        </Button>\r\n      </div>\r\n      {doesExamHaveNoQuestions ? <p>This exam contains no questions.</p> : ''}\r\n      <div className=\"examQuestions\">\r\n        {examQuestions.map((question, index) => {\r\n          return (\r\n            <ReadOnlyQuestion\r\n              key={question._id}\r\n              index={index + 1}\r\n              question={question}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <hr />\r\n      <ExamsStudents\r\n        questions={props.exam.questions}\r\n        students={props.exam.students}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamExample;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ExamExample from './ExamExample/ExamExample';\r\nimport {\r\n  getUserExams,\r\n  deleteExam,\r\n  editExamSelectExam,\r\n  editExamChangePart,\r\n} from '../../store/actions/index';\r\nimport './Exams.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Exams extends React.Component {\r\n  state = {\r\n    examSelected: {},\r\n    showModal: false,\r\n    toEditExam: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getUserExams();\r\n  }\r\n\r\n  hideModal = () => {\r\n    this.setState({\r\n      showModal: false,\r\n    });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      showModal: true,\r\n    });\r\n  };\r\n\r\n  handleStartOfEditExam = () => {\r\n    const examSelectedId = this.state.examSelected._id\r\n      ? this.state.examSelected._id\r\n      : clonedeep(this.props.userExams).sort((examA, examB) =>\r\n          examA.title > examB.title ? 1 : -1,\r\n        )[0]._id;\r\n    const selectedExam = this.props.userExams.find(\r\n      (exam) => exam._id === examSelectedId,\r\n    );\r\n\r\n    selectedExam.questions = selectedExam.questions.map((question) => {\r\n      question.id = question._id;\r\n\r\n      if (question.type === 'true_false') {\r\n        question.type = 'trueOrFalse';\r\n      }\r\n\r\n      question.options = question.options.map((opt) => {\r\n        opt.answer = question.answer.some((optId) => optId === opt.optionId);\r\n        return opt;\r\n      });\r\n\r\n      return question;\r\n    });\r\n\r\n    selectedExam.students = selectedExam.students.map((student) => {\r\n      student.id = student._id;\r\n      return student;\r\n    });\r\n\r\n    this.props.editExamSelectExam(selectedExam);\r\n    this.props.editExamChangePart('title');\r\n    this.setState({ toEditExam: true });\r\n  };\r\n\r\n  handleExamDeletion = () => {\r\n    this.hideModal();\r\n    const examSelectedId = this.state.examSelected._id\r\n      ? this.state.examSelected._id\r\n      : clonedeep(this.props.userExams).sort((examA, examB) =>\r\n          examA.title > examB.title ? 1 : -1,\r\n        )[0]._id;\r\n    this.props.deleteExam(examSelectedId);\r\n\r\n    const sortedUserExams = clonedeep(\r\n      this.props.userExams,\r\n    ).sort((examA, examB) => (examA.title > examB.title ? 1 : -1));\r\n    const examSelected = sortedUserExams.filter(\r\n      (exam) => exam._id !== examSelectedId,\r\n    )[0];\r\n    this.setState({ examSelected });\r\n  };\r\n\r\n  handleExamSelection = (examId) => {\r\n    const examSelected = this.props.userExams.find(\r\n      (exam) => exam._id === examId,\r\n    );\r\n    this.setState({ examSelected });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.toEditExam) {\r\n      return <Redirect to=\"/edit-exam\" />;\r\n    }\r\n\r\n    const sortedUserExams = clonedeep(\r\n      this.props.userExams,\r\n    ).sort((examA, examB) => (examA.title > examB.title ? 1 : -1));\r\n\r\n    return (\r\n      <div className=\"Exams\">\r\n        <Modal onHide={this.hideModal} show={this.state.showModal}>\r\n          <Modal.Body>\r\n            Are you sure you want to delete this exam?\r\n            <div className=\"modalBtns\">\r\n              <Button variant=\"info\" onClick={this.hideModal}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"danger\" onClick={this.handleExamDeletion}>\r\n                Delete Exam\r\n              </Button>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n        <h1>Your Exams</h1>\r\n        {this.props.getUserExamsLoading || this.props.deleteExamLoading ? (\r\n          <div className=\"spinner\">\r\n            <Spinner animation=\"border\" variant=\"info\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        ) : this.props.userExams.length > 0 ? (\r\n          <>\r\n            <div className=\"examsDropdownBtn\">\r\n              <DropdownButton variant=\"info\" title=\"Select A Exam\">\r\n                {sortedUserExams.map((exam) => (\r\n                  <Dropdown.Item\r\n                    key={exam._id}\r\n                    onClick={() => this.handleExamSelection(exam._id)}\r\n                  >\r\n                    {exam.title}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </div>\r\n            <ExamExample\r\n              exam={\r\n                this.state.examSelected._id\r\n                  ? this.state.examSelected\r\n                  : sortedUserExams[0]\r\n              }\r\n              key={this.state.examSelected._id || sortedUserExams[0]._id}\r\n              deleteExamFunc={this.showModal}\r\n              editExamFunc={this.handleStartOfEditExam}\r\n            />\r\n          </>\r\n        ) : (\r\n          <p>\r\n            You haven't created any exams.{' '}\r\n            <a href=\"/create-exam\">Create a exam.</a>\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const {\r\n    exam: { userExams, getUserExamsLoading, deleteExamLoading },\r\n  } = state;\r\n  return {\r\n    userExams,\r\n    getUserExamsLoading,\r\n    deleteExamLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getUserExams: () => dispatch(getUserExams()),\r\n    deleteExam: (examId) => dispatch(deleteExam(examId)),\r\n    editExamSelectExam: (exam) => dispatch(editExamSelectExam(exam)),\r\n    editExamChangePart: (part) => dispatch(editExamChangePart(part)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Exams);\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst Question = (props) => {\r\n  const {\r\n    index,\r\n    question: { _id, name, type, options },\r\n  } = props;\r\n\r\n  let questionTypeForm = (\r\n    <>\r\n      {options.map((opt) => (\r\n        <Form.Check\r\n          key={opt.optionId}\r\n          label={opt.name}\r\n          name={_id}\r\n          type={type}\r\n          value={opt.optionId}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n\r\n  if (type === 'true_false') {\r\n    questionTypeForm = (\r\n      <>\r\n        <Form.Check value=\"true\" label=\"True\" name={_id} type=\"radio\" />\r\n        <Form.Check value=\"false\" label=\"False\" name={_id} type=\"radio\" />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>\r\n        {index}. {name}\r\n      </Form.Label>\r\n      <div className=\"questionOptions\">{questionTypeForm}</div>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport LoadingButton from '../../common/LoadingButton/LoadingButton';\r\nimport Question from '../Question/Question';\r\nimport './ExamForm.css';\r\n\r\nconst ExamForm = (props) => {\r\n  let submitButton =\r\n    props.areQuestionsChecked && props.selectedStudent.name ? (\r\n      <LoadingButton\r\n        type=\"submit\"\r\n        variant=\"info\"\r\n        size=\"md\"\r\n        loading={props.saveExamResultsLoading}\r\n      >\r\n        Submit\r\n      </LoadingButton>\r\n    ) : (\r\n      <OverlayTrigger\r\n        overlay={\r\n          <Tooltip>\r\n            {props.selectedStudent.name\r\n              ? \"You haven't answered all the exam questions.\"\r\n              : 'You need to choose a name.'}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <span>\r\n          <Button variant=\"info\" disabled style={{ pointerEvents: 'none' }}>\r\n            Submit\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    );\r\n\r\n  return (\r\n    <div className=\"ExamForm\">\r\n      <DropdownButton\r\n        variant=\"info\"\r\n        title={props.selectedStudent.name || \"What's Your Name?\"}\r\n      >\r\n        {props.exam.students.map((student) => (\r\n          <Dropdown.Item\r\n            key={student._id}\r\n            onClick={() => props.handleStudentChange(student)}\r\n            disabled={student.takenTest}\r\n          >\r\n            {student.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      <Form\r\n        onChange={props.handleFormChange}\r\n        onSubmit={props.handleCompletingExam}\r\n      >\r\n        {props.exam.questions.map((question, i) => (\r\n          <Question index={i + 1} key={question._id} question={question} />\r\n        ))}\r\n        {submitButton}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { getExam } from '../../store/actions/index';\r\nimport ExamForm from './ExamForm/ExamForm';\r\nimport './TakeExam.css';\r\n\r\nconst TakeExam = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [exam, setExam] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [selectedStudent, setSelectedStudent] = useState({});\r\n  const [areQuestionsChecked, setAreQuestionsChecked] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [saveExamResultsError, setSaveExamResultsError] = useState('');\r\n  const [saveExamResultsLoading, setSaveExamResultsLoading] = useState(false);\r\n\r\n  const {\r\n    match: {\r\n      params: { examId },\r\n    },\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    async function getExam(examId) {\r\n      try {\r\n        setLoading(true);\r\n        const res = await fetch(\r\n          `${process.env.REACT_APP_API}/api/v1/exams/${examId}`,\r\n        );\r\n        const parsedRes = await res.json();\r\n        if (!res.ok) {\r\n          throw Error(parsedRes.error);\r\n        }\r\n        setExam(parsedRes.exam);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Something went wrong. :(');\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getExam(examId);\r\n  }, [examId]);\r\n\r\n  function changeStudent(student) {\r\n    setSelectedStudent(student);\r\n  }\r\n\r\n  function handleFormChange(e) {\r\n    const areQuestionsChecked = exam.questions.every((question) => {\r\n      const options = document.getElementsByName(question._id);\r\n      let isAtleastOneOptChecked = false;\r\n      for (let i = 0; i < options.length; i++) {\r\n        if (options[i].checked) {\r\n          isAtleastOneOptChecked = true;\r\n          break;\r\n        }\r\n      }\r\n      return isAtleastOneOptChecked;\r\n    });\r\n    setAreQuestionsChecked(areQuestionsChecked);\r\n  }\r\n\r\n  async function saveExamResults(questionsCorrect, questionsIncorrect) {\r\n    try {\r\n      setSaveExamResultsLoading(true);\r\n      const res = await fetch(\r\n        `/api/v1/exams/students/save-exam-results/${exam._id}`,\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify({\r\n            studentId: selectedStudent._id,\r\n            questionsCorrect,\r\n            questionsIncorrect,\r\n          }),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        },\r\n      );\r\n      const parsedRes = await res.json();\r\n      if (!res.ok) {\r\n        throw Error(parsedRes.error);\r\n      }\r\n      setSaveExamResultsLoading(false);\r\n      setShowModal(true);\r\n    } catch (err) {\r\n      setSaveExamResultsLoading(false);\r\n      setSaveExamResultsError('Something went wrong. :(');\r\n    }\r\n  }\r\n\r\n  function handleCompletingExam(e) {\r\n    e.preventDefault();\r\n    let questionsCorrect = [];\r\n    let questionsIncorrect = [];\r\n    exam.questions.map((question) => {\r\n      let optionsChecked = [];\r\n      const options = document.getElementsByName(question._id);\r\n\r\n      for (let i = 0; i < options.length; i++) {\r\n        if (options[i].checked) {\r\n          optionsChecked.push(options[i].value);\r\n        }\r\n      }\r\n\r\n      const isQuestionCorrect =\r\n        question.answer.every((optId, i) => optId === optionsChecked[i]) &&\r\n        optionsChecked.every((optId, i) => optId === question.answer[i]);\r\n\r\n      if (isQuestionCorrect) {\r\n        questionsCorrect.push(question._id);\r\n      } else {\r\n        questionsIncorrect.push(question._id);\r\n      }\r\n      return question;\r\n    });\r\n    saveExamResults(questionsCorrect, questionsIncorrect);\r\n  }\r\n\r\n  let content = loading ? (\r\n    <div className=\"takeExamSpinner\">\r\n      <Spinner variant=\"info\" animation=\"border\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  ) : error ? (\r\n    <Alert variant=\"info\">{error}</Alert>\r\n  ) : (\r\n    <>\r\n      <Modal show={showModal} onHide={() => {}}>\r\n        <Modal.Header>\r\n          <Modal.Title>Exam Results Saved!</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>You can now exit this tab.</Modal.Body>\r\n      </Modal>\r\n      <h1 className=\"h1\">{exam.title}</h1>\r\n      {saveExamResultsError ? (\r\n        <Alert variant=\"info\">{saveExamResultsError}</Alert>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <ExamForm\r\n        areQuestionsChecked={areQuestionsChecked}\r\n        selectedStudent={selectedStudent}\r\n        exam={exam}\r\n        handleStudentChange={changeStudent}\r\n        handleCompletingExam={handleCompletingExam}\r\n        handleFormChange={handleFormChange}\r\n        saveExamResultsLoading={saveExamResultsLoading}\r\n      />\r\n    </>\r\n  );\r\n  return <div className=\"TakeExam\">{content}</div>;\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getExam: (examId) => dispatch(getExam(examId)),\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(TakeExam));\r\n","import React from 'react';\r\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport NavigationBar from './components/NavigationBar/NavigationBar';\r\nimport Signup from './components/auth/Signup/Signup';\r\nimport Login from './components/auth/Login/Login';\r\nimport CreateAExam from './components/CreateAExam/CreateAExam';\r\nimport EditAExam from './components/EditAExam/EditAExam';\r\nimport Exams from './components/Exams/Exams';\r\nimport TakeExam from './components/TakeExam/TakeExam';\r\nimport { authLoginExistingUser } from './store/actions';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.loginExistingUser();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Signup} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/create-exam\" component={CreateAExam} />\r\n        <Route path=\"/take-exam/:examId\" component={TakeExam} />\r\n        <Redirect from=\"*\" to=\"/create-exam\" />\r\n      </Switch>\r\n    );\r\n    if (this.props.isUserLoggedIn) {\r\n      routes = (\r\n        <Switch>\r\n          <Redirect from=\"/login\" to=\"create-exam\" />\r\n          <Redirect from=\"/auth\" to=\"create-exam\" />\r\n          <Route path=\"/exams\" component={Exams} />\r\n          <Route path=\"/create-exam\" component={CreateAExam} />\r\n          <Route path=\"/edit-exam\" component={EditAExam} />\r\n          <Route path=\"/take-exam/:examId\" component={TakeExam} />\r\n          <Redirect from=\"*\" to=\"/create-exam\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.location.pathname.split('/')[1] !== 'take-exam' ? (\r\n          <NavigationBar />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {routes}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const {\r\n    auth: { isUserLoggedIn },\r\n  } = state;\r\n  return { isUserLoggedIn };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loginExistingUser: () => dispatch(authLoginExistingUser()),\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport authReducer from './store/reducers/auth';\nimport examReducer from './store/reducers/exam';\nimport { watchAuth, watchExam } from './store/sagas/index';\nimport App from './App';\nimport './index.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  exam: examReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchExam);\n\nconst appWrapper = (\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(appWrapper, document.getElementById('root'));\n"],"sourceRoot":""}